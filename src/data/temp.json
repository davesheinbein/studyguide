{
	"id": 127,
	"topic": "Number of 1 Bits",
	"code": "// Count the number of 1 bits\nvar hammingWeight = function(n) {\n // Log the input number 'n' to the console\n console.log(n);\n\n // Convert the number 'n' to its binary string representation and log it\n console.log(n.toString(2));\n\n // Split the binary string by the character '1' and log the resulting array\n console.log(n.toString(2).split('1'));\n\n // Log the length of the array obtained by splitting by '1' (which will be one more than the count of '1's)\n console.log(n.toString(2).split('1').length);\n\n // Log the result of subtracting 1 from the length of the array to get the actual count of '1's\n console.log(n.toString(2).split('1').length - 1);\n\n // Return the final Hamming weight (the count of '1's)\n return n.toString(2).split('1').length - 1;\n};\n\n// Example usage:\nconsole.log(hammingWeight(11)); // Output: 3\nconsole.log(hammingWeight(128)); // Output: 1\nconsole.log(hammingWeight(2147483645)); // Output: 30\n",
	"explanation": "This function counts the number of 1 bits in a given integer.",
	"category": "Bit Manipulation"
}
