/*! For license information please see main.9345e4a7.js.LICENSE.txt */
(()=>{var e={999:(e,t,n)=>{var r=function(e){var t=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,n=0,r={},a={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function e(t){return t instanceof i?new i(t.type,e(t.content),t.alias):Array.isArray(t)?t.map(e):t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++n}),e.__id},clone:function e(t,n){var r,i;switch(n=n||{},a.util.type(t)){case"Object":if(i=a.util.objId(t),n[i])return n[i];for(var o in r={},n[i]=r,t)t.hasOwnProperty(o)&&(r[o]=e(t[o],n));return r;case"Array":return i=a.util.objId(t),n[i]?n[i]:(r=[],n[i]=r,t.forEach((function(t,a){r[a]=e(t,n)})),r);default:return t}},getLanguage:function(e){for(;e;){var n=t.exec(e.className);if(n)return n[1].toLowerCase();e=e.parentElement}return"none"},setLanguage:function(e,n){e.className=e.className.replace(RegExp(t,"gi"),""),e.classList.add("language-"+n)},currentScript:function(){if("undefined"===typeof document)return null;if("currentScript"in document)return document.currentScript;try{throw new Error}catch(r){var e=(/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(r.stack)||[])[1];if(e){var t=document.getElementsByTagName("script");for(var n in t)if(t[n].src==e)return t[n]}return null}},isActive:function(e,t,n){for(var r="no-"+t;e;){var a=e.classList;if(a.contains(t))return!0;if(a.contains(r))return!1;e=e.parentElement}return!!n}},languages:{plain:r,plaintext:r,text:r,txt:r,extend:function(e,t){var n=a.util.clone(a.languages[e]);for(var r in t)n[r]=t[r];return n},insertBefore:function(e,t,n,r){var i=(r=r||a.languages)[e],o={};for(var s in i)if(i.hasOwnProperty(s)){if(s==t)for(var l in n)n.hasOwnProperty(l)&&(o[l]=n[l]);n.hasOwnProperty(s)||(o[s]=i[s])}var u=r[e];return r[e]=o,a.languages.DFS(a.languages,(function(t,n){n===u&&t!=e&&(this[t]=o)})),o},DFS:function e(t,n,r,i){i=i||{};var o=a.util.objId;for(var s in t)if(t.hasOwnProperty(s)){n.call(t,s,t[s],r||s);var l=t[s],u=a.util.type(l);"Object"!==u||i[o(l)]?"Array"!==u||i[o(l)]||(i[o(l)]=!0,e(l,n,s,i)):(i[o(l)]=!0,e(l,n,null,i))}}},plugins:{},highlightAll:function(e,t){a.highlightAllUnder(document,e,t)},highlightAllUnder:function(e,t,n){var r={callback:n,container:e,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};a.hooks.run("before-highlightall",r),r.elements=Array.prototype.slice.apply(r.container.querySelectorAll(r.selector)),a.hooks.run("before-all-elements-highlight",r);for(var i,o=0;i=r.elements[o++];)a.highlightElement(i,!0===t,r.callback)},highlightElement:function(t,n,r){var i=a.util.getLanguage(t),o=a.languages[i];a.util.setLanguage(t,i);var s=t.parentElement;s&&"pre"===s.nodeName.toLowerCase()&&a.util.setLanguage(s,i);var l={element:t,language:i,grammar:o,code:t.textContent};function u(e){l.highlightedCode=e,a.hooks.run("before-insert",l),l.element.innerHTML=l.highlightedCode,a.hooks.run("after-highlight",l),a.hooks.run("complete",l),r&&r.call(l.element)}if(a.hooks.run("before-sanity-check",l),(s=l.element.parentElement)&&"pre"===s.nodeName.toLowerCase()&&!s.hasAttribute("tabindex")&&s.setAttribute("tabindex","0"),!l.code)return a.hooks.run("complete",l),void(r&&r.call(l.element));if(a.hooks.run("before-highlight",l),l.grammar)if(n&&e.Worker){var c=new Worker(a.filename);c.onmessage=function(e){u(e.data)},c.postMessage(JSON.stringify({language:l.language,code:l.code,immediateClose:!0}))}else u(a.highlight(l.code,l.grammar,l.language));else u(a.util.encode(l.code))},highlight:function(e,t,n){var r={code:e,grammar:t,language:n};if(a.hooks.run("before-tokenize",r),!r.grammar)throw new Error('The language "'+r.language+'" has no grammar.');return r.tokens=a.tokenize(r.code,r.grammar),a.hooks.run("after-tokenize",r),i.stringify(a.util.encode(r.tokens),r.language)},tokenize:function(e,t){var n=t.rest;if(n){for(var r in n)t[r]=n[r];delete t.rest}var a=new l;return u(a,a.head,e),s(e,a,t,a.head,0),function(e){var t=[],n=e.head.next;for(;n!==e.tail;)t.push(n.value),n=n.next;return t}(a)},hooks:{all:{},add:function(e,t){var n=a.hooks.all;n[e]=n[e]||[],n[e].push(t)},run:function(e,t){var n=a.hooks.all[e];if(n&&n.length)for(var r,i=0;r=n[i++];)r(t)}},Token:i};function i(e,t,n,r){this.type=e,this.content=t,this.alias=n,this.length=0|(r||"").length}function o(e,t,n,r){e.lastIndex=t;var a=e.exec(n);if(a&&r&&a[1]){var i=a[1].length;a.index+=i,a[0]=a[0].slice(i)}return a}function s(e,t,n,r,l,d){for(var h in n)if(n.hasOwnProperty(h)&&n[h]){var f=n[h];f=Array.isArray(f)?f:[f];for(var p=0;p<f.length;++p){if(d&&d.cause==h+","+p)return;var m=f[p],g=m.inside,b=!!m.lookbehind,y=!!m.greedy,v=m.alias;if(y&&!m.pattern.global){var w=m.pattern.toString().match(/[imsuy]*$/)[0];m.pattern=RegExp(m.pattern.source,w+"g")}for(var x=m.pattern||m,k=r.next,S=l;k!==t.tail&&!(d&&S>=d.reach);S+=k.value.length,k=k.next){var C=k.value;if(t.length>e.length)return;if(!(C instanceof i)){var T,I=1;if(y){if(!(T=o(x,S,e,b))||T.index>=e.length)break;var E=T.index,j=T.index+T[0].length,P=S;for(P+=k.value.length;E>=P;)P+=(k=k.next).value.length;if(S=P-=k.value.length,k.value instanceof i)continue;for(var O=k;O!==t.tail&&(P<j||"string"===typeof O.value);O=O.next)I++,P+=O.value.length;I--,C=e.slice(S,P),T.index-=S}else if(!(T=o(x,0,C,b)))continue;E=T.index;var M=T[0],A=C.slice(0,E),L=C.slice(E+M.length),F=S+C.length;d&&F>d.reach&&(d.reach=F);var R=k.prev;if(A&&(R=u(t,R,A),S+=A.length),c(t,R,I),k=u(t,R,new i(h,g?a.tokenize(M,g):M,v,M)),L&&u(t,k,L),I>1){var z={cause:h+","+p,reach:F};s(e,t,n,k.prev,S,z),d&&z.reach>d.reach&&(d.reach=z.reach)}}}}}}function l(){var e={value:null,prev:null,next:null},t={value:null,prev:e,next:null};e.next=t,this.head=e,this.tail=t,this.length=0}function u(e,t,n){var r=t.next,a={value:n,prev:t,next:r};return t.next=a,r.prev=a,e.length++,a}function c(e,t,n){for(var r=t.next,a=0;a<n&&r!==e.tail;a++)r=r.next;t.next=r,r.prev=t,e.length-=a}if(e.Prism=a,i.stringify=function e(t,n){if("string"==typeof t)return t;if(Array.isArray(t)){var r="";return t.forEach((function(t){r+=e(t,n)})),r}var i={type:t.type,content:e(t.content,n),tag:"span",classes:["token",t.type],attributes:{},language:n},o=t.alias;o&&(Array.isArray(o)?Array.prototype.push.apply(i.classes,o):i.classes.push(o)),a.hooks.run("wrap",i);var s="";for(var l in i.attributes)s+=" "+l+'="'+(i.attributes[l]||"").replace(/"/g,"&quot;")+'"';return"<"+i.tag+' class="'+i.classes.join(" ")+'"'+s+">"+i.content+"</"+i.tag+">"},!e.document)return e.addEventListener?(a.disableWorkerMessageHandler||e.addEventListener("message",(function(t){var n=JSON.parse(t.data),r=n.language,i=n.code,o=n.immediateClose;e.postMessage(a.highlight(i,a.languages[r],r)),o&&e.close()}),!1),a):a;var d=a.util.currentScript();function h(){a.manual||a.highlightAll()}if(d&&(a.filename=d.src,d.hasAttribute("data-manual")&&(a.manual=!0)),!a.manual){var f=document.readyState;"loading"===f||"interactive"===f&&d&&d.defer?document.addEventListener("DOMContentLoaded",h):window.requestAnimationFrame?window.requestAnimationFrame(h):window.setTimeout(h,16)}return a}("undefined"!==typeof window?window:"undefined"!==typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{});e.exports&&(e.exports=r),"undefined"!==typeof n.g&&(n.g.Prism=r),r.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},r.languages.markup.tag.inside["attr-value"].inside.entity=r.languages.markup.entity,r.languages.markup.doctype.inside["internal-subset"].inside=r.languages.markup,r.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(r.languages.markup.tag,"addInlined",{value:function(e,t){var n={};n["language-"+t]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:r.languages[t]},n.cdata=/^<!\[CDATA\[|\]\]>$/i;var a={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:n}};a["language-"+t]={pattern:/[\s\S]+/,inside:r.languages[t]};var i={};i[e]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,(function(){return e})),"i"),lookbehind:!0,greedy:!0,inside:a},r.languages.insertBefore("markup","cdata",i)}}),Object.defineProperty(r.languages.markup.tag,"addAttribute",{value:function(e,t){r.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+e+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[t,"language-"+t],inside:r.languages[t]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),r.languages.html=r.languages.markup,r.languages.mathml=r.languages.markup,r.languages.svg=r.languages.markup,r.languages.xml=r.languages.extend("markup",{}),r.languages.ssml=r.languages.xml,r.languages.atom=r.languages.xml,r.languages.rss=r.languages.xml,function(e){var t=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:RegExp("@[\\w-](?:"+/[^;{\s"']|\s+(?!\s)/.source+"|"+t.source+")*?"+/(?:;|(?=\s*\{))/.source),inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+t.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+t.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+t.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:t,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var n=e.languages.markup;n&&(n.tag.addInlined("style","css"),n.tag.addAttribute("style","css"))}(r),r.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},r.languages.javascript=r.languages.extend("clike",{"class-name":[r.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),r.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,r.languages.insertBefore("javascript","keyword",{regex:{pattern:RegExp(/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)/.source+/\//.source+"(?:"+/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}/.source+"|"+/(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source+")"+/(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/.source),lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:r.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:r.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:r.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:r.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:r.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),r.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:r.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),r.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),r.languages.markup&&(r.languages.markup.tag.addInlined("script","javascript"),r.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),r.languages.js=r.languages.javascript,function(){if("undefined"!==typeof r&&"undefined"!==typeof document){Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector);var e={js:"javascript",py:"python",rb:"ruby",ps1:"powershell",psm1:"powershell",sh:"bash",bat:"batch",h:"c",tex:"latex"},t="data-src-status",n="loading",a="loaded",i="pre[data-src]:not(["+t+'="'+a+'"]):not(['+t+'="'+n+'"])';r.hooks.add("before-highlightall",(function(e){e.selector+=", "+i})),r.hooks.add("before-sanity-check",(function(o){var s=o.element;if(s.matches(i)){o.code="",s.setAttribute(t,n);var l=s.appendChild(document.createElement("CODE"));l.textContent="Loading\u2026";var u=s.getAttribute("data-src"),c=o.language;if("none"===c){var d=(/\.(\w+)$/.exec(u)||[,"none"])[1];c=e[d]||d}r.util.setLanguage(l,c),r.util.setLanguage(s,c);var h=r.plugins.autoloader;h&&h.loadLanguages(c),function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.onreadystatechange=function(){4==r.readyState&&(r.status<400&&r.responseText?t(r.responseText):r.status>=400?n("\u2716 Error "+r.status+" while fetching file: "+r.statusText):n("\u2716 Error: File does not exist or is empty"))},r.send(null)}(u,(function(e){s.setAttribute(t,a);var n=function(e){var t=/^\s*(\d+)\s*(?:(,)\s*(?:(\d+)\s*)?)?$/.exec(e||"");if(t){var n=Number(t[1]),r=t[2],a=t[3];return r?a?[n,Number(a)]:[n,void 0]:[n,n]}}(s.getAttribute("data-range"));if(n){var i=e.split(/\r\n?|\n/g),o=n[0],u=null==n[1]?i.length:n[1];o<0&&(o+=i.length),o=Math.max(0,Math.min(o-1,i.length)),u<0&&(u+=i.length),u=Math.max(0,Math.min(u,i.length)),e=i.slice(o,u).join("\n"),s.hasAttribute("data-start")||s.setAttribute("data-start",String(o+1))}l.textContent=e,r.highlightElement(l)}),(function(e){s.setAttribute(t,"failed"),l.textContent=e}))}})),r.plugins.fileHighlight={highlight:function(e){for(var t,n=(e||document).querySelectorAll(i),a=0;t=n[a++];)r.highlightElement(t)}};var o=!1;r.fileHighlight=function(){o||(console.warn("Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead."),o=!0),r.plugins.fileHighlight.highlight.apply(this,arguments)}}}()},497:(e,t,n)=>{"use strict";var r=n(218);function a(){}function i(){}i.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,i,o){if(o!==r){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:a};return n.PropTypes=n,n}},173:(e,t,n)=>{e.exports=n(497)()},218:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},730:(e,t,n)=>{"use strict";var r=n(43),a=n(853);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,s={};function l(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(s[e]=t,e=0;e<t.length;e++)o.add(t[e])}var c=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=Object.prototype.hasOwnProperty,h=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f={},p={};function m(e,t,n,r,a,i,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var b=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function v(e,t,n,r){var a=g.hasOwnProperty(t)?g[t]:null;(null!==a?0!==a.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null===t||"undefined"===typeof t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!d.call(p,e)||!d.call(f,e)&&(h.test(e)?p[e]=!0:(f[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(b,y);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(b,y);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(b,y);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,x=Symbol.for("react.element"),k=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),C=Symbol.for("react.strict_mode"),T=Symbol.for("react.profiler"),I=Symbol.for("react.provider"),E=Symbol.for("react.context"),j=Symbol.for("react.forward_ref"),P=Symbol.for("react.suspense"),O=Symbol.for("react.suspense_list"),M=Symbol.for("react.memo"),A=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var L=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var F=Symbol.iterator;function R(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=F&&e[F]||e["@@iterator"])?e:null}var z,N=Object.assign;function D(e){if(void 0===z)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);z=t&&t[1]||""}return"\n"+z+e}var _=!1;function q(e,t){if(!e||_)return"";_=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(u){var r=u}Reflect.construct(e,[],t)}else{try{t.call()}catch(u){r=u}e.call(t.prototype)}else{try{throw Error()}catch(u){r=u}e()}}catch(u){if(u&&r&&"string"===typeof u.stack){for(var a=u.stack.split("\n"),i=r.stack.split("\n"),o=a.length-1,s=i.length-1;1<=o&&0<=s&&a[o]!==i[s];)s--;for(;1<=o&&0<=s;o--,s--)if(a[o]!==i[s]){if(1!==o||1!==s)do{if(o--,0>--s||a[o]!==i[s]){var l="\n"+a[o].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=o&&0<=s);break}}}finally{_=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?D(e):""}function B(e){switch(e.tag){case 5:return D(e.type);case 16:return D("Lazy");case 13:return D("Suspense");case 19:return D("SuspenseList");case 0:case 2:case 15:return e=q(e.type,!1);case 11:return e=q(e.type.render,!1);case 1:return e=q(e.type,!0);default:return""}}function W(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case T:return"Profiler";case C:return"StrictMode";case P:return"Suspense";case O:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case E:return(e.displayName||"Context")+".Consumer";case I:return(e._context.displayName||"Context")+".Provider";case j:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case M:return null!==(t=e.displayName||null)?t:W(e.type)||"Memo";case A:t=e._payload,e=e._init;try{return W(e(t))}catch(n){}}return null}function $(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return W(t);case 8:return t===C?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function U(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function V(e){e._valueTracker||(e._valueTracker=function(e){var t=H(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var a=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function G(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=H(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function J(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Y(e,t){var n=t.checked;return N({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Q(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=U(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function K(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function X(e,t){K(e,t);var n=U(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,U(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Z(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&J(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+U(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return N({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(te(n)){if(1<n.length)throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:U(n)}}function ie(e,t){var n=U(t.value),r=U(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function se(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?se(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ue,ce,de=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function he(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var fe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},pe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||fe.hasOwnProperty(e)&&fe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=me(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(fe).forEach((function(e){pe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),fe[t]=fe[e]}))}));var be=N({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ye(e,t){if(t){if(be[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(i(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var we=null;function xe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,Ce=null;function Te(e){if(e=va(e)){if("function"!==typeof ke)throw Error(i(280));var t=e.stateNode;t&&(t=xa(t),ke(e.stateNode,e.type,t))}}function Ie(e){Se?Ce?Ce.push(e):Ce=[e]:Se=e}function Ee(){if(Se){var e=Se,t=Ce;if(Ce=Se=null,Te(e),t)for(e=0;e<t.length;e++)Te(t[e])}}function je(e,t){return e(t)}function Pe(){}var Oe=!1;function Me(e,t,n){if(Oe)return e(t,n);Oe=!0;try{return je(e,t,n)}finally{Oe=!1,(null!==Se||null!==Ce)&&(Pe(),Ee())}}function Ae(e,t){var n=e.stateNode;if(null===n)return null;var r=xa(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(i(231,t,typeof n));return n}var Le=!1;if(c)try{var Fe={};Object.defineProperty(Fe,"passive",{get:function(){Le=!0}}),window.addEventListener("test",Fe,Fe),window.removeEventListener("test",Fe,Fe)}catch(ce){Le=!1}function Re(e,t,n,r,a,i,o,s,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(c){this.onError(c)}}var ze=!1,Ne=null,De=!1,_e=null,qe={onError:function(e){ze=!0,Ne=e}};function Be(e,t,n,r,a,i,o,s,l){ze=!1,Ne=null,Re.apply(qe,arguments)}function We(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function $e(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Ue(e){if(We(e)!==e)throw Error(i(188))}function He(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=We(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return Ue(a),e;if(o===r)return Ue(a),t;o=o.sibling}throw Error(i(188))}if(n.return!==r.return)n=a,r=o;else{for(var s=!1,l=a.child;l;){if(l===n){s=!0,n=a,r=o;break}if(l===r){s=!0,r=a,n=o;break}l=l.sibling}if(!s){for(l=o.child;l;){if(l===n){s=!0,n=o,r=a;break}if(l===r){s=!0,r=o,n=a;break}l=l.sibling}if(!s)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e))?Ve(e):null}function Ve(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ve(e);if(null!==t)return t;e=e.sibling}return null}var Ge=a.unstable_scheduleCallback,Je=a.unstable_cancelCallback,Ye=a.unstable_shouldYield,Qe=a.unstable_requestPaint,Ke=a.unstable_now,Xe=a.unstable_getCurrentPriorityLevel,Ze=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,rt=a.unstable_IdlePriority,at=null,it=null;var ot=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(st(e)/lt|0)|0},st=Math.log,lt=Math.LN2;var ut=64,ct=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ht(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,i=e.pingedLanes,o=268435455&n;if(0!==o){var s=o&~a;0!==s?r=dt(s):0!==(i&=o)&&(r=dt(i))}else 0!==(o=n&~a)?r=dt(o):0!==i&&(r=dt(i));if(0===r)return 0;if(0!==t&&t!==r&&0===(t&a)&&((a=r&-r)>=(i=t&-t)||16===a&&0!==(4194240&i)))return t;if(0!==(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-ot(t)),r|=e[n],t&=~a;return r}function ft(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function pt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ut;return 0===(4194240&(ut<<=1))&&(ut=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function bt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function yt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-ot(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var vt=0;function wt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var xt,kt,St,Ct,Tt,It=!1,Et=[],jt=null,Pt=null,Ot=null,Mt=new Map,At=new Map,Lt=[],Ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Rt(e,t){switch(e){case"focusin":case"focusout":jt=null;break;case"dragenter":case"dragleave":Pt=null;break;case"mouseover":case"mouseout":Ot=null;break;case"pointerover":case"pointerout":Mt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":At.delete(t.pointerId)}}function zt(e,t,n,r,a,i){return null===e||e.nativeEvent!==i?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:i,targetContainers:[a]},null!==t&&(null!==(t=va(t))&&kt(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Nt(e){var t=ya(e.target);if(null!==t){var n=We(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=$e(n)))return e.blockedOn=t,void Tt(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Dt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=va(n))&&kt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);we=r,n.target.dispatchEvent(r),we=null,t.shift()}return!0}function _t(e,t,n){Dt(e)&&n.delete(t)}function qt(){It=!1,null!==jt&&Dt(jt)&&(jt=null),null!==Pt&&Dt(Pt)&&(Pt=null),null!==Ot&&Dt(Ot)&&(Ot=null),Mt.forEach(_t),At.forEach(_t)}function Bt(e,t){e.blockedOn===t&&(e.blockedOn=null,It||(It=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,qt)))}function Wt(e){function t(t){return Bt(t,e)}if(0<Et.length){Bt(Et[0],e);for(var n=1;n<Et.length;n++){var r=Et[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==jt&&Bt(jt,e),null!==Pt&&Bt(Pt,e),null!==Ot&&Bt(Ot,e),Mt.forEach(t),At.forEach(t),n=0;n<Lt.length;n++)(r=Lt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Lt.length&&null===(n=Lt[0]).blockedOn;)Nt(n),null===n.blockedOn&&Lt.shift()}var $t=w.ReactCurrentBatchConfig,Ut=!0;function Ht(e,t,n,r){var a=vt,i=$t.transition;$t.transition=null;try{vt=1,Gt(e,t,n,r)}finally{vt=a,$t.transition=i}}function Vt(e,t,n,r){var a=vt,i=$t.transition;$t.transition=null;try{vt=4,Gt(e,t,n,r)}finally{vt=a,$t.transition=i}}function Gt(e,t,n,r){if(Ut){var a=Yt(e,t,n,r);if(null===a)Ur(e,t,r,Jt,n),Rt(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return jt=zt(jt,e,t,n,r,a),!0;case"dragenter":return Pt=zt(Pt,e,t,n,r,a),!0;case"mouseover":return Ot=zt(Ot,e,t,n,r,a),!0;case"pointerover":var i=a.pointerId;return Mt.set(i,zt(Mt.get(i)||null,e,t,n,r,a)),!0;case"gotpointercapture":return i=a.pointerId,At.set(i,zt(At.get(i)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(Rt(e,r),4&t&&-1<Ft.indexOf(e)){for(;null!==a;){var i=va(a);if(null!==i&&xt(i),null===(i=Yt(e,t,n,r))&&Ur(e,t,r,Jt,n),i===a)break;a=i}null!==a&&r.stopPropagation()}else Ur(e,t,r,null,n)}}var Jt=null;function Yt(e,t,n,r){if(Jt=null,null!==(e=ya(e=xe(r))))if(null===(t=We(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=$e(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Jt=e,null}function Qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Xe()){case Ze:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Kt=null,Xt=null,Zt=null;function en(){if(Zt)return Zt;var e,t,n=Xt,r=n.length,a="value"in Kt?Kt.value:Kt.textContent,i=a.length;for(e=0;e<r&&n[e]===a[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===a[i-t];t++);return Zt=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function an(e){function t(t,n,r,a,i){for(var o in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=i,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return N(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var on,sn,ln,un={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=an(un),dn=N({},un,{view:0,detail:0}),hn=an(dn),fn=N({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Tn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ln&&(ln&&"mousemove"===e.type?(on=e.screenX-ln.screenX,sn=e.screenY-ln.screenY):sn=on=0,ln=e),on)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),pn=an(fn),mn=an(N({},fn,{dataTransfer:0})),gn=an(N({},dn,{relatedTarget:0})),bn=an(N({},un,{animationName:0,elapsedTime:0,pseudoElement:0})),yn=N({},un,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=an(yn),wn=an(N({},un,{data:0})),xn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Tn(){return Cn}var In=N({},dn,{key:function(e){if(e.key){var t=xn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Tn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),En=an(In),jn=an(N({},fn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Pn=an(N({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Tn})),On=an(N({},un,{propertyName:0,elapsedTime:0,pseudoElement:0})),Mn=N({},fn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),An=an(Mn),Ln=[9,13,27,32],Fn=c&&"CompositionEvent"in window,Rn=null;c&&"documentMode"in document&&(Rn=document.documentMode);var zn=c&&"TextEvent"in window&&!Rn,Nn=c&&(!Fn||Rn&&8<Rn&&11>=Rn),Dn=String.fromCharCode(32),_n=!1;function qn(e,t){switch(e){case"keyup":return-1!==Ln.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Bn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Wn=!1;var $n={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Un(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!$n[e.type]:"textarea"===t}function Hn(e,t,n,r){Ie(r),0<(t=Vr(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Vn=null,Gn=null;function Jn(e){Dr(e,0)}function Yn(e){if(G(wa(e)))return e}function Qn(e,t){if("change"===e)return t}var Kn=!1;if(c){var Xn;if(c){var Zn="oninput"in document;if(!Zn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Zn="function"===typeof er.oninput}Xn=Zn}else Xn=!1;Kn=Xn&&(!document.documentMode||9<document.documentMode)}function tr(){Vn&&(Vn.detachEvent("onpropertychange",nr),Gn=Vn=null)}function nr(e){if("value"===e.propertyName&&Yn(Gn)){var t=[];Hn(t,Gn,e,xe(e)),Me(Jn,t)}}function rr(e,t,n){"focusin"===e?(tr(),Gn=n,(Vn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yn(Gn)}function ir(e,t){if("click"===e)return Yn(t)}function or(e,t){if("input"===e||"change"===e)return Yn(t)}var sr="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function lr(e,t){if(sr(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!d.call(t,a)||!sr(e[a],t[a]))return!1}return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function dr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function hr(){for(var e=window,t=J();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=J((e=t.contentWindow).document)}return t}function fr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function pr(e){var t=hr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&dr(n.ownerDocument.documentElement,n)){if(null!==r&&fr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,i=Math.min(r.start,a);r=void 0===r.end?i:Math.min(r.end,a),!e.extend&&i>r&&(a=r,r=i,i=a),a=cr(n,i);var o=cr(n,r);a&&o&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),i>r?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=c&&"documentMode"in document&&11>=document.documentMode,gr=null,br=null,yr=null,vr=!1;function wr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;vr||null==gr||gr!==J(r)||("selectionStart"in(r=gr)&&fr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&lr(yr,r)||(yr=r,0<(r=Vr(br,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}function xr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var kr={animationend:xr("Animation","AnimationEnd"),animationiteration:xr("Animation","AnimationIteration"),animationstart:xr("Animation","AnimationStart"),transitionend:xr("Transition","TransitionEnd")},Sr={},Cr={};function Tr(e){if(Sr[e])return Sr[e];if(!kr[e])return e;var t,n=kr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Cr)return Sr[e]=n[t];return e}c&&(Cr=document.createElement("div").style,"AnimationEvent"in window||(delete kr.animationend.animation,delete kr.animationiteration.animation,delete kr.animationstart.animation),"TransitionEvent"in window||delete kr.transitionend.transition);var Ir=Tr("animationend"),Er=Tr("animationiteration"),jr=Tr("animationstart"),Pr=Tr("transitionend"),Or=new Map,Mr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Ar(e,t){Or.set(e,t),l(t,[e])}for(var Lr=0;Lr<Mr.length;Lr++){var Fr=Mr[Lr];Ar(Fr.toLowerCase(),"on"+(Fr[0].toUpperCase()+Fr.slice(1)))}Ar(Ir,"onAnimationEnd"),Ar(Er,"onAnimationIteration"),Ar(jr,"onAnimationStart"),Ar("dblclick","onDoubleClick"),Ar("focusin","onFocus"),Ar("focusout","onBlur"),Ar(Pr,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Rr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),zr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Rr));function Nr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,s,l,u){if(Be.apply(this,arguments),ze){if(!ze)throw Error(i(198));var c=Ne;ze=!1,Ne=null,De||(De=!0,_e=c)}}(r,t,void 0,e),e.currentTarget=null}function Dr(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var i=void 0;if(t)for(var o=r.length-1;0<=o;o--){var s=r[o],l=s.instance,u=s.currentTarget;if(s=s.listener,l!==i&&a.isPropagationStopped())break e;Nr(a,s,u),i=l}else for(o=0;o<r.length;o++){if(l=(s=r[o]).instance,u=s.currentTarget,s=s.listener,l!==i&&a.isPropagationStopped())break e;Nr(a,s,u),i=l}}}if(De)throw e=_e,De=!1,_e=null,e}function _r(e,t){var n=t[ma];void 0===n&&(n=t[ma]=new Set);var r=e+"__bubble";n.has(r)||($r(t,e,2,!1),n.add(r))}function qr(e,t,n){var r=0;t&&(r|=4),$r(n,e,r,t)}var Br="_reactListening"+Math.random().toString(36).slice(2);function Wr(e){if(!e[Br]){e[Br]=!0,o.forEach((function(t){"selectionchange"!==t&&(zr.has(t)||qr(t,!1,e),qr(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Br]||(t[Br]=!0,qr("selectionchange",!1,t))}}function $r(e,t,n,r){switch(Qt(t)){case 1:var a=Ht;break;case 4:a=Vt;break;default:a=Gt}n=a.bind(null,t,n,e),a=void 0,!Le||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Ur(e,t,n,r,a){var i=r;if(0===(1&t)&&0===(2&t)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var s=r.stateNode.containerInfo;if(s===a||8===s.nodeType&&s.parentNode===a)break;if(4===o)for(o=r.return;null!==o;){var l=o.tag;if((3===l||4===l)&&((l=o.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;o=o.return}for(;null!==s;){if(null===(o=ya(s)))return;if(5===(l=o.tag)||6===l){r=i=o;continue e}s=s.parentNode}}r=r.return}Me((function(){var r=i,a=xe(n),o=[];e:{var s=Or.get(e);if(void 0!==s){var l=cn,u=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":l=En;break;case"focusin":u="focus",l=gn;break;case"focusout":u="blur",l=gn;break;case"beforeblur":case"afterblur":l=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=pn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Pn;break;case Ir:case Er:case jr:l=bn;break;case Pr:l=On;break;case"scroll":l=hn;break;case"wheel":l=An;break;case"copy":case"cut":case"paste":l=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=jn}var c=0!==(4&t),d=!c&&"scroll"===e,h=c?null!==s?s+"Capture":null:s;c=[];for(var f,p=r;null!==p;){var m=(f=p).stateNode;if(5===f.tag&&null!==m&&(f=m,null!==h&&(null!=(m=Ae(p,h))&&c.push(Hr(p,m,f)))),d)break;p=p.return}0<c.length&&(s=new l(s,u,null,n,a),o.push({event:s,listeners:c}))}}if(0===(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||n===we||!(u=n.relatedTarget||n.fromElement)||!ya(u)&&!u[pa])&&(l||s)&&(s=a.window===a?a:(s=a.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=r,null!==(u=(u=n.relatedTarget||n.toElement)?ya(u):null)&&(u!==(d=We(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=r),l!==u)){if(c=pn,m="onMouseLeave",h="onMouseEnter",p="mouse","pointerout"!==e&&"pointerover"!==e||(c=jn,m="onPointerLeave",h="onPointerEnter",p="pointer"),d=null==l?s:wa(l),f=null==u?s:wa(u),(s=new c(m,p+"leave",l,n,a)).target=d,s.relatedTarget=f,m=null,ya(a)===r&&((c=new c(h,p+"enter",u,n,a)).target=f,c.relatedTarget=d,m=c),d=m,l&&u)e:{for(h=u,p=0,f=c=l;f;f=Gr(f))p++;for(f=0,m=h;m;m=Gr(m))f++;for(;0<p-f;)c=Gr(c),p--;for(;0<f-p;)h=Gr(h),f--;for(;p--;){if(c===h||null!==h&&c===h.alternate)break e;c=Gr(c),h=Gr(h)}c=null}else c=null;null!==l&&Jr(o,s,l,c,!1),null!==u&&null!==d&&Jr(o,d,u,c,!0)}if("select"===(l=(s=r?wa(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var g=Qn;else if(Un(s))if(Kn)g=or;else{g=ar;var b=rr}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(g=ir);switch(g&&(g=g(e,r))?Hn(o,g,n,a):(b&&b(e,s,r),"focusout"===e&&(b=s._wrapperState)&&b.controlled&&"number"===s.type&&ee(s,"number",s.value)),b=r?wa(r):window,e){case"focusin":(Un(b)||"true"===b.contentEditable)&&(gr=b,br=r,yr=null);break;case"focusout":yr=br=gr=null;break;case"mousedown":vr=!0;break;case"contextmenu":case"mouseup":case"dragend":vr=!1,wr(o,n,a);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":wr(o,n,a)}var y;if(Fn)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Wn?qn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(Nn&&"ko"!==n.locale&&(Wn||"onCompositionStart"!==v?"onCompositionEnd"===v&&Wn&&(y=en()):(Xt="value"in(Kt=a)?Kt.value:Kt.textContent,Wn=!0)),0<(b=Vr(r,v)).length&&(v=new wn(v,e,null,n,a),o.push({event:v,listeners:b}),y?v.data=y:null!==(y=Bn(n))&&(v.data=y))),(y=zn?function(e,t){switch(e){case"compositionend":return Bn(t);case"keypress":return 32!==t.which?null:(_n=!0,Dn);case"textInput":return(e=t.data)===Dn&&_n?null:e;default:return null}}(e,n):function(e,t){if(Wn)return"compositionend"===e||!Fn&&qn(e,t)?(e=en(),Zt=Xt=Kt=null,Wn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Nn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(r=Vr(r,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),o.push({event:a,listeners:r}),a.data=y))}Dr(o,t)}))}function Hr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Vr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,i=a.stateNode;5===a.tag&&null!==i&&(a=i,null!=(i=Ae(e,n))&&r.unshift(Hr(e,i,a)),null!=(i=Ae(e,t))&&r.push(Hr(e,i,a))),e=e.return}return r}function Gr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Jr(e,t,n,r,a){for(var i=t._reactName,o=[];null!==n&&n!==r;){var s=n,l=s.alternate,u=s.stateNode;if(null!==l&&l===r)break;5===s.tag&&null!==u&&(s=u,a?null!=(l=Ae(n,i))&&o.unshift(Hr(n,l,s)):a||null!=(l=Ae(n,i))&&o.push(Hr(n,l,s))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Yr=/\r\n?/g,Qr=/\u0000|\uFFFD/g;function Kr(e){return("string"===typeof e?e:""+e).replace(Yr,"\n").replace(Qr,"")}function Xr(e,t,n){if(t=Kr(t),Kr(e)!==t&&n)throw Error(i(425))}function Zr(){}var ea=null,ta=null;function na(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ra="function"===typeof setTimeout?setTimeout:void 0,aa="function"===typeof clearTimeout?clearTimeout:void 0,ia="function"===typeof Promise?Promise:void 0,oa="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof ia?function(e){return ia.resolve(null).then(e).catch(sa)}:ra;function sa(e){setTimeout((function(){throw e}))}function la(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void Wt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);Wt(t)}function ua(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ca(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var da=Math.random().toString(36).slice(2),ha="__reactFiber$"+da,fa="__reactProps$"+da,pa="__reactContainer$"+da,ma="__reactEvents$"+da,ga="__reactListeners$"+da,ba="__reactHandles$"+da;function ya(e){var t=e[ha];if(t)return t;for(var n=e.parentNode;n;){if(t=n[pa]||n[ha]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ca(e);null!==e;){if(n=e[ha])return n;e=ca(e)}return t}n=(e=n).parentNode}return null}function va(e){return!(e=e[ha]||e[pa])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function wa(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function xa(e){return e[fa]||null}var ka=[],Sa=-1;function Ca(e){return{current:e}}function Ta(e){0>Sa||(e.current=ka[Sa],ka[Sa]=null,Sa--)}function Ia(e,t){Sa++,ka[Sa]=e.current,e.current=t}var Ea={},ja=Ca(Ea),Pa=Ca(!1),Oa=Ea;function Ma(e,t){var n=e.type.contextTypes;if(!n)return Ea;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,i={};for(a in n)i[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Aa(e){return null!==(e=e.childContextTypes)&&void 0!==e}function La(){Ta(Pa),Ta(ja)}function Fa(e,t,n){if(ja.current!==Ea)throw Error(i(168));Ia(ja,t),Ia(Pa,n)}function Ra(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(i(108,$(e)||"Unknown",a));return N({},n,r)}function za(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ea,Oa=ja.current,Ia(ja,e),Ia(Pa,Pa.current),!0}function Na(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=Ra(e,t,Oa),r.__reactInternalMemoizedMergedChildContext=e,Ta(Pa),Ta(ja),Ia(ja,e)):Ta(Pa),Ia(Pa,n)}var Da=null,_a=!1,qa=!1;function Ba(e){null===Da?Da=[e]:Da.push(e)}function Wa(){if(!qa&&null!==Da){qa=!0;var e=0,t=vt;try{var n=Da;for(vt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Da=null,_a=!1}catch(a){throw null!==Da&&(Da=Da.slice(e+1)),Ge(Ze,Wa),a}finally{vt=t,qa=!1}}return null}var $a=[],Ua=0,Ha=null,Va=0,Ga=[],Ja=0,Ya=null,Qa=1,Ka="";function Xa(e,t){$a[Ua++]=Va,$a[Ua++]=Ha,Ha=e,Va=t}function Za(e,t,n){Ga[Ja++]=Qa,Ga[Ja++]=Ka,Ga[Ja++]=Ya,Ya=e;var r=Qa;e=Ka;var a=32-ot(r)-1;r&=~(1<<a),n+=1;var i=32-ot(t)+a;if(30<i){var o=a-a%5;i=(r&(1<<o)-1).toString(32),r>>=o,a-=o,Qa=1<<32-ot(t)+a|n<<a|r,Ka=i+e}else Qa=1<<i|n<<a|r,Ka=e}function ei(e){null!==e.return&&(Xa(e,1),Za(e,1,0))}function ti(e){for(;e===Ha;)Ha=$a[--Ua],$a[Ua]=null,Va=$a[--Ua],$a[Ua]=null;for(;e===Ya;)Ya=Ga[--Ja],Ga[Ja]=null,Ka=Ga[--Ja],Ga[Ja]=null,Qa=Ga[--Ja],Ga[Ja]=null}var ni=null,ri=null,ai=!1,ii=null;function oi(e,t){var n=Mu(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function si(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ni=e,ri=ua(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ni=e,ri=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Ya?{id:Qa,overflow:Ka}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Mu(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ni=e,ri=null,!0);default:return!1}}function li(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ui(e){if(ai){var t=ri;if(t){var n=t;if(!si(e,t)){if(li(e))throw Error(i(418));t=ua(n.nextSibling);var r=ni;t&&si(e,t)?oi(r,n):(e.flags=-4097&e.flags|2,ai=!1,ni=e)}}else{if(li(e))throw Error(i(418));e.flags=-4097&e.flags|2,ai=!1,ni=e}}}function ci(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ni=e}function di(e){if(e!==ni)return!1;if(!ai)return ci(e),ai=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!na(e.type,e.memoizedProps)),t&&(t=ri)){if(li(e))throw hi(),Error(i(418));for(;t;)oi(e,t),t=ua(t.nextSibling)}if(ci(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ri=ua(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ri=null}}else ri=ni?ua(e.stateNode.nextSibling):null;return!0}function hi(){for(var e=ri;e;)e=ua(e.nextSibling)}function fi(){ri=ni=null,ai=!1}function pi(e){null===ii?ii=[e]:ii.push(e)}var mi=w.ReactCurrentBatchConfig;function gi(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var a=r,o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=a.refs;null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!==typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function bi(e,t){throw e=Object.prototype.toString.call(t),Error(i(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function yi(e){return(0,e._init)(e._payload)}function vi(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Lu(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function s(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Nu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function u(e,t,n,r){var i=n.type;return i===S?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===i||"object"===typeof i&&null!==i&&i.$$typeof===A&&yi(i)===t.type)?((r=a(t,n.props)).ref=gi(e,t,n),r.return=e,r):((r=Fu(n.type,n.key,n.props,null,e.mode,r)).ref=gi(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Du(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function d(e,t,n,r,i){return null===t||7!==t.tag?((t=Ru(n,e.mode,r,i)).return=e,t):((t=a(t,n)).return=e,t)}function h(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Nu(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case x:return(n=Fu(t.type,t.key,t.props,null,e.mode,n)).ref=gi(e,null,t),n.return=e,n;case k:return(t=Du(t,e.mode,n)).return=e,t;case A:return h(e,(0,t._init)(t._payload),n)}if(te(t)||R(t))return(t=Ru(t,e.mode,n,null)).return=e,t;bi(e,t)}return null}function f(e,t,n,r){var a=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==a?null:l(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case x:return n.key===a?u(e,t,n,r):null;case k:return n.key===a?c(e,t,n,r):null;case A:return f(e,t,(a=n._init)(n._payload),r)}if(te(n)||R(n))return null!==a?null:d(e,t,n,r,null);bi(e,n)}return null}function p(e,t,n,r,a){if("string"===typeof r&&""!==r||"number"===typeof r)return l(t,e=e.get(n)||null,""+r,a);if("object"===typeof r&&null!==r){switch(r.$$typeof){case x:return u(t,e=e.get(null===r.key?n:r.key)||null,r,a);case k:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a);case A:return p(e,t,n,(0,r._init)(r._payload),a)}if(te(r)||R(r))return d(t,e=e.get(n)||null,r,a,null);bi(t,r)}return null}function m(a,i,s,l){for(var u=null,c=null,d=i,m=i=0,g=null;null!==d&&m<s.length;m++){d.index>m?(g=d,d=null):g=d.sibling;var b=f(a,d,s[m],l);if(null===b){null===d&&(d=g);break}e&&d&&null===b.alternate&&t(a,d),i=o(b,i,m),null===c?u=b:c.sibling=b,c=b,d=g}if(m===s.length)return n(a,d),ai&&Xa(a,m),u;if(null===d){for(;m<s.length;m++)null!==(d=h(a,s[m],l))&&(i=o(d,i,m),null===c?u=d:c.sibling=d,c=d);return ai&&Xa(a,m),u}for(d=r(a,d);m<s.length;m++)null!==(g=p(d,a,m,s[m],l))&&(e&&null!==g.alternate&&d.delete(null===g.key?m:g.key),i=o(g,i,m),null===c?u=g:c.sibling=g,c=g);return e&&d.forEach((function(e){return t(a,e)})),ai&&Xa(a,m),u}function g(a,s,l,u){var c=R(l);if("function"!==typeof c)throw Error(i(150));if(null==(l=c.call(l)))throw Error(i(151));for(var d=c=null,m=s,g=s=0,b=null,y=l.next();null!==m&&!y.done;g++,y=l.next()){m.index>g?(b=m,m=null):b=m.sibling;var v=f(a,m,y.value,u);if(null===v){null===m&&(m=b);break}e&&m&&null===v.alternate&&t(a,m),s=o(v,s,g),null===d?c=v:d.sibling=v,d=v,m=b}if(y.done)return n(a,m),ai&&Xa(a,g),c;if(null===m){for(;!y.done;g++,y=l.next())null!==(y=h(a,y.value,u))&&(s=o(y,s,g),null===d?c=y:d.sibling=y,d=y);return ai&&Xa(a,g),c}for(m=r(a,m);!y.done;g++,y=l.next())null!==(y=p(m,a,g,y.value,u))&&(e&&null!==y.alternate&&m.delete(null===y.key?g:y.key),s=o(y,s,g),null===d?c=y:d.sibling=y,d=y);return e&&m.forEach((function(e){return t(a,e)})),ai&&Xa(a,g),c}return function e(r,i,o,l){if("object"===typeof o&&null!==o&&o.type===S&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case x:e:{for(var u=o.key,c=i;null!==c;){if(c.key===u){if((u=o.type)===S){if(7===c.tag){n(r,c.sibling),(i=a(c,o.props.children)).return=r,r=i;break e}}else if(c.elementType===u||"object"===typeof u&&null!==u&&u.$$typeof===A&&yi(u)===c.type){n(r,c.sibling),(i=a(c,o.props)).ref=gi(r,c,o),i.return=r,r=i;break e}n(r,c);break}t(r,c),c=c.sibling}o.type===S?((i=Ru(o.props.children,r.mode,l,o.key)).return=r,r=i):((l=Fu(o.type,o.key,o.props,null,r.mode,l)).ref=gi(r,i,o),l.return=r,r=l)}return s(r);case k:e:{for(c=o.key;null!==i;){if(i.key===c){if(4===i.tag&&i.stateNode.containerInfo===o.containerInfo&&i.stateNode.implementation===o.implementation){n(r,i.sibling),(i=a(i,o.children||[])).return=r,r=i;break e}n(r,i);break}t(r,i),i=i.sibling}(i=Du(o,r.mode,l)).return=r,r=i}return s(r);case A:return e(r,i,(c=o._init)(o._payload),l)}if(te(o))return m(r,i,o,l);if(R(o))return g(r,i,o,l);bi(r,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==i&&6===i.tag?(n(r,i.sibling),(i=a(i,o)).return=r,r=i):(n(r,i),(i=Nu(o,r.mode,l)).return=r,r=i),s(r)):n(r,i)}}var wi=vi(!0),xi=vi(!1),ki=Ca(null),Si=null,Ci=null,Ti=null;function Ii(){Ti=Ci=Si=null}function Ei(e){var t=ki.current;Ta(ki),e._currentValue=t}function ji(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Pi(e,t){Si=e,Ti=Ci=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(vs=!0),e.firstContext=null)}function Oi(e){var t=e._currentValue;if(Ti!==e)if(e={context:e,memoizedValue:t,next:null},null===Ci){if(null===Si)throw Error(i(308));Ci=e,Si.dependencies={lanes:0,firstContext:e}}else Ci=Ci.next=e;return t}var Mi=null;function Ai(e){null===Mi?Mi=[e]:Mi.push(e)}function Li(e,t,n,r){var a=t.interleaved;return null===a?(n.next=n,Ai(t)):(n.next=a.next,a.next=n),t.interleaved=n,Fi(e,r)}function Fi(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Ri=!1;function zi(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ni(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Di(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function _i(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!==(2&jl)){var a=r.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),r.pending=t,Fi(e,n)}return null===(a=r.interleaved)?(t.next=t,Ai(r)):(t.next=a.next,a.next=t),r.interleaved=t,Fi(e,n)}function qi(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}function Bi(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,i=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===i?a=i=o:i=i.next=o,n=n.next}while(null!==n);null===i?a=i=t:i=i.next=t}else a=i=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:i,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Wi(e,t,n,r){var a=e.updateQueue;Ri=!1;var i=a.firstBaseUpdate,o=a.lastBaseUpdate,s=a.shared.pending;if(null!==s){a.shared.pending=null;var l=s,u=l.next;l.next=null,null===o?i=u:o.next=u,o=l;var c=e.alternate;null!==c&&((s=(c=c.updateQueue).lastBaseUpdate)!==o&&(null===s?c.firstBaseUpdate=u:s.next=u,c.lastBaseUpdate=l))}if(null!==i){var d=a.baseState;for(o=0,c=u=l=null,s=i;;){var h=s.lane,f=s.eventTime;if((r&h)===h){null!==c&&(c=c.next={eventTime:f,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var p=e,m=s;switch(h=t,f=n,m.tag){case 1:if("function"===typeof(p=m.payload)){d=p.call(f,d,h);break e}d=p;break e;case 3:p.flags=-65537&p.flags|128;case 0:if(null===(h="function"===typeof(p=m.payload)?p.call(f,d,h):p)||void 0===h)break e;d=N({},d,h);break e;case 2:Ri=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(h=a.effects)?a.effects=[s]:h.push(s))}else f={eventTime:f,lane:h,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===c?(u=c=f,l=d):c=c.next=f,o|=h;if(null===(s=s.next)){if(null===(s=a.shared.pending))break;s=(h=s).next,h.next=null,a.lastBaseUpdate=h,a.shared.pending=null}}if(null===c&&(l=d),a.baseState=l,a.firstBaseUpdate=u,a.lastBaseUpdate=c,null!==(t=a.shared.interleaved)){a=t;do{o|=a.lane,a=a.next}while(a!==t)}else null===i&&(a.shared.lanes=0);zl|=o,e.lanes=o,e.memoizedState=d}}function $i(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!==typeof a)throw Error(i(191,a));a.call(r)}}}var Ui={},Hi=Ca(Ui),Vi=Ca(Ui),Gi=Ca(Ui);function Ji(e){if(e===Ui)throw Error(i(174));return e}function Yi(e,t){switch(Ia(Gi,t),Ia(Vi,e),Ia(Hi,Ui),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Ta(Hi),Ia(Hi,t)}function Qi(){Ta(Hi),Ta(Vi),Ta(Gi)}function Ki(e){Ji(Gi.current);var t=Ji(Hi.current),n=le(t,e.type);t!==n&&(Ia(Vi,e),Ia(Hi,n))}function Xi(e){Vi.current===e&&(Ta(Hi),Ta(Vi))}var Zi=Ca(0);function eo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var to=[];function no(){for(var e=0;e<to.length;e++)to[e]._workInProgressVersionPrimary=null;to.length=0}var ro=w.ReactCurrentDispatcher,ao=w.ReactCurrentBatchConfig,io=0,oo=null,so=null,lo=null,uo=!1,co=!1,ho=0,fo=0;function po(){throw Error(i(321))}function mo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!sr(e[n],t[n]))return!1;return!0}function go(e,t,n,r,a,o){if(io=o,oo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ro.current=null===e||null===e.memoizedState?Zo:es,e=n(r,a),co){o=0;do{if(co=!1,ho=0,25<=o)throw Error(i(301));o+=1,lo=so=null,t.updateQueue=null,ro.current=ts,e=n(r,a)}while(co)}if(ro.current=Xo,t=null!==so&&null!==so.next,io=0,lo=so=oo=null,uo=!1,t)throw Error(i(300));return e}function bo(){var e=0!==ho;return ho=0,e}function yo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===lo?oo.memoizedState=lo=e:lo=lo.next=e,lo}function vo(){if(null===so){var e=oo.alternate;e=null!==e?e.memoizedState:null}else e=so.next;var t=null===lo?oo.memoizedState:lo.next;if(null!==t)lo=t,so=e;else{if(null===e)throw Error(i(310));e={memoizedState:(so=e).memoizedState,baseState:so.baseState,baseQueue:so.baseQueue,queue:so.queue,next:null},null===lo?oo.memoizedState=lo=e:lo=lo.next=e}return lo}function wo(e,t){return"function"===typeof t?t(e):t}function xo(e){var t=vo(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=so,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var s=a.next;a.next=o.next,o.next=s}r.baseQueue=a=o,n.pending=null}if(null!==a){o=a.next,r=r.baseState;var l=s=null,u=null,c=o;do{var d=c.lane;if((io&d)===d)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var h={lane:d,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(l=u=h,s=r):u=u.next=h,oo.lanes|=d,zl|=d}c=c.next}while(null!==c&&c!==o);null===u?s=r:u.next=l,sr(r,t.memoizedState)||(vs=!0),t.memoizedState=r,t.baseState=s,t.baseQueue=u,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{o=a.lane,oo.lanes|=o,zl|=o,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function ko(e){var t=vo(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var s=a=a.next;do{o=e(o,s.action),s=s.next}while(s!==a);sr(o,t.memoizedState)||(vs=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function So(){}function Co(e,t){var n=oo,r=vo(),a=t(),o=!sr(r.memoizedState,a);if(o&&(r.memoizedState=a,vs=!0),r=r.queue,zo(Eo.bind(null,n,r,e),[e]),r.getSnapshot!==t||o||null!==lo&&1&lo.memoizedState.tag){if(n.flags|=2048,Mo(9,Io.bind(null,n,r,a,t),void 0,null),null===Pl)throw Error(i(349));0!==(30&io)||To(n,t,a)}return a}function To(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Io(e,t,n,r){t.value=n,t.getSnapshot=r,jo(t)&&Po(e)}function Eo(e,t,n){return n((function(){jo(t)&&Po(e)}))}function jo(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!sr(e,n)}catch(r){return!0}}function Po(e){var t=Fi(e,1);null!==t&&nu(t,e,1,-1)}function Oo(e){var t=yo();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:wo,lastRenderedState:e},t.queue=e,e=e.dispatch=Jo.bind(null,oo,e),[t.memoizedState,e]}function Mo(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Ao(){return vo().memoizedState}function Lo(e,t,n,r){var a=yo();oo.flags|=e,a.memoizedState=Mo(1|t,n,void 0,void 0===r?null:r)}function Fo(e,t,n,r){var a=vo();r=void 0===r?null:r;var i=void 0;if(null!==so){var o=so.memoizedState;if(i=o.destroy,null!==r&&mo(r,o.deps))return void(a.memoizedState=Mo(t,n,i,r))}oo.flags|=e,a.memoizedState=Mo(1|t,n,i,r)}function Ro(e,t){return Lo(8390656,8,e,t)}function zo(e,t){return Fo(2048,8,e,t)}function No(e,t){return Fo(4,2,e,t)}function Do(e,t){return Fo(4,4,e,t)}function _o(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function qo(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Fo(4,4,_o.bind(null,t,e),n)}function Bo(){}function Wo(e,t){var n=vo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&mo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function $o(e,t){var n=vo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&mo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Uo(e,t,n){return 0===(21&io)?(e.baseState&&(e.baseState=!1,vs=!0),e.memoizedState=n):(sr(n,t)||(n=mt(),oo.lanes|=n,zl|=n,e.baseState=!0),t)}function Ho(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var r=ao.transition;ao.transition={};try{e(!1),t()}finally{vt=n,ao.transition=r}}function Vo(){return vo().memoizedState}function Go(e,t,n){var r=tu(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Yo(e))Qo(t,n);else if(null!==(n=Li(e,t,n,r))){nu(n,e,r,eu()),Ko(n,t,r)}}function Jo(e,t,n){var r=tu(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Yo(e))Qo(t,a);else{var i=e.alternate;if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var o=t.lastRenderedState,s=i(o,n);if(a.hasEagerState=!0,a.eagerState=s,sr(s,o)){var l=t.interleaved;return null===l?(a.next=a,Ai(t)):(a.next=l.next,l.next=a),void(t.interleaved=a)}}catch(u){}null!==(n=Li(e,t,a,r))&&(nu(n,e,r,a=eu()),Ko(n,t,r))}}function Yo(e){var t=e.alternate;return e===oo||null!==t&&t===oo}function Qo(e,t){co=uo=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Ko(e,t,n){if(0!==(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}var Xo={readContext:Oi,useCallback:po,useContext:po,useEffect:po,useImperativeHandle:po,useInsertionEffect:po,useLayoutEffect:po,useMemo:po,useReducer:po,useRef:po,useState:po,useDebugValue:po,useDeferredValue:po,useTransition:po,useMutableSource:po,useSyncExternalStore:po,useId:po,unstable_isNewReconciler:!1},Zo={readContext:Oi,useCallback:function(e,t){return yo().memoizedState=[e,void 0===t?null:t],e},useContext:Oi,useEffect:Ro,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Lo(4194308,4,_o.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Lo(4194308,4,e,t)},useInsertionEffect:function(e,t){return Lo(4,2,e,t)},useMemo:function(e,t){var n=yo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=yo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=Go.bind(null,oo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},yo().memoizedState=e},useState:Oo,useDebugValue:Bo,useDeferredValue:function(e){return yo().memoizedState=e},useTransition:function(){var e=Oo(!1),t=e[0];return e=Ho.bind(null,e[1]),yo().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=oo,a=yo();if(ai){if(void 0===n)throw Error(i(407));n=n()}else{if(n=t(),null===Pl)throw Error(i(349));0!==(30&io)||To(r,t,n)}a.memoizedState=n;var o={value:n,getSnapshot:t};return a.queue=o,Ro(Eo.bind(null,r,o,e),[e]),r.flags|=2048,Mo(9,Io.bind(null,r,o,n,t),void 0,null),n},useId:function(){var e=yo(),t=Pl.identifierPrefix;if(ai){var n=Ka;t=":"+t+"R"+(n=(Qa&~(1<<32-ot(Qa)-1)).toString(32)+n),0<(n=ho++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=fo++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},es={readContext:Oi,useCallback:Wo,useContext:Oi,useEffect:zo,useImperativeHandle:qo,useInsertionEffect:No,useLayoutEffect:Do,useMemo:$o,useReducer:xo,useRef:Ao,useState:function(){return xo(wo)},useDebugValue:Bo,useDeferredValue:function(e){return Uo(vo(),so.memoizedState,e)},useTransition:function(){return[xo(wo)[0],vo().memoizedState]},useMutableSource:So,useSyncExternalStore:Co,useId:Vo,unstable_isNewReconciler:!1},ts={readContext:Oi,useCallback:Wo,useContext:Oi,useEffect:zo,useImperativeHandle:qo,useInsertionEffect:No,useLayoutEffect:Do,useMemo:$o,useReducer:ko,useRef:Ao,useState:function(){return ko(wo)},useDebugValue:Bo,useDeferredValue:function(e){var t=vo();return null===so?t.memoizedState=e:Uo(t,so.memoizedState,e)},useTransition:function(){return[ko(wo)[0],vo().memoizedState]},useMutableSource:So,useSyncExternalStore:Co,useId:Vo,unstable_isNewReconciler:!1};function ns(e,t){if(e&&e.defaultProps){for(var n in t=N({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function rs(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:N({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var as={isMounted:function(e){return!!(e=e._reactInternals)&&We(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=eu(),a=tu(e),i=Di(r,a);i.payload=t,void 0!==n&&null!==n&&(i.callback=n),null!==(t=_i(e,i,a))&&(nu(t,e,a,r),qi(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=eu(),a=tu(e),i=Di(r,a);i.tag=1,i.payload=t,void 0!==n&&null!==n&&(i.callback=n),null!==(t=_i(e,i,a))&&(nu(t,e,a,r),qi(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=eu(),r=tu(e),a=Di(n,r);a.tag=2,void 0!==t&&null!==t&&(a.callback=t),null!==(t=_i(e,a,r))&&(nu(t,e,r,n),qi(t,e,r))}};function is(e,t,n,r,a,i,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,o):!t.prototype||!t.prototype.isPureReactComponent||(!lr(n,r)||!lr(a,i))}function os(e,t,n){var r=!1,a=Ea,i=t.contextType;return"object"===typeof i&&null!==i?i=Oi(i):(a=Aa(t)?Oa:ja.current,i=(r=null!==(r=t.contextTypes)&&void 0!==r)?Ma(e,a):Ea),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=as,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=i),t}function ss(e,t,n,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&as.enqueueReplaceState(t,t.state,null)}function ls(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs={},zi(e);var i=t.contextType;"object"===typeof i&&null!==i?a.context=Oi(i):(i=Aa(t)?Oa:ja.current,a.context=Ma(e,i)),a.state=e.memoizedState,"function"===typeof(i=t.getDerivedStateFromProps)&&(rs(e,t,i,n),a.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof a.getSnapshotBeforeUpdate||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||(t=a.state,"function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&as.enqueueReplaceState(a,a.state,null),Wi(e,n,a,r),a.state=e.memoizedState),"function"===typeof a.componentDidMount&&(e.flags|=4194308)}function us(e,t){try{var n="",r=t;do{n+=B(r),r=r.return}while(r);var a=n}catch(i){a="\nError generating stack: "+i.message+"\n"+i.stack}return{value:e,source:t,stack:a,digest:null}}function cs(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function ds(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var hs="function"===typeof WeakMap?WeakMap:Map;function fs(e,t,n){(n=Di(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ul||(Ul=!0,Hl=r),ds(0,t)},n}function ps(e,t,n){(n=Di(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){ds(0,t)}}var i=e.stateNode;return null!==i&&"function"===typeof i.componentDidCatch&&(n.callback=function(){ds(0,t),"function"!==typeof r&&(null===Vl?Vl=new Set([this]):Vl.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function ms(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new hs;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=Tu.bind(null,e,t,n),t.then(e,e))}function gs(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function bs(e,t,n,r,a){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Di(-1,1)).tag=2,_i(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var ys=w.ReactCurrentOwner,vs=!1;function ws(e,t,n,r){t.child=null===e?xi(t,null,n,r):wi(t,e.child,n,r)}function xs(e,t,n,r,a){n=n.render;var i=t.ref;return Pi(t,a),r=go(e,t,n,r,i,a),n=bo(),null===e||vs?(ai&&n&&ei(t),t.flags|=1,ws(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Us(e,t,a))}function ks(e,t,n,r,a){if(null===e){var i=n.type;return"function"!==typeof i||Au(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Fu(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Ss(e,t,i,r,a))}if(i=e.child,0===(e.lanes&a)){var o=i.memoizedProps;if((n=null!==(n=n.compare)?n:lr)(o,r)&&e.ref===t.ref)return Us(e,t,a)}return t.flags|=1,(e=Lu(i,r)).ref=t.ref,e.return=t,t.child=e}function Ss(e,t,n,r,a){if(null!==e){var i=e.memoizedProps;if(lr(i,r)&&e.ref===t.ref){if(vs=!1,t.pendingProps=r=i,0===(e.lanes&a))return t.lanes=e.lanes,Us(e,t,a);0!==(131072&e.flags)&&(vs=!0)}}return Is(e,t,n,r,a)}function Cs(e,t,n){var r=t.pendingProps,a=r.children,i=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ia(Ll,Al),Al|=n;else{if(0===(1073741824&n))return e=null!==i?i.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Ia(Ll,Al),Al|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==i?i.baseLanes:n,Ia(Ll,Al),Al|=r}else null!==i?(r=i.baseLanes|n,t.memoizedState=null):r=n,Ia(Ll,Al),Al|=r;return ws(e,t,a,n),t.child}function Ts(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Is(e,t,n,r,a){var i=Aa(n)?Oa:ja.current;return i=Ma(t,i),Pi(t,a),n=go(e,t,n,r,i,a),r=bo(),null===e||vs?(ai&&r&&ei(t),t.flags|=1,ws(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Us(e,t,a))}function Es(e,t,n,r,a){if(Aa(n)){var i=!0;za(t)}else i=!1;if(Pi(t,a),null===t.stateNode)$s(e,t),os(t,n,r),ls(t,n,r,a),r=!0;else if(null===e){var o=t.stateNode,s=t.memoizedProps;o.props=s;var l=o.context,u=n.contextType;"object"===typeof u&&null!==u?u=Oi(u):u=Ma(t,u=Aa(n)?Oa:ja.current);var c=n.getDerivedStateFromProps,d="function"===typeof c||"function"===typeof o.getSnapshotBeforeUpdate;d||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(s!==r||l!==u)&&ss(t,o,r,u),Ri=!1;var h=t.memoizedState;o.state=h,Wi(t,r,o,a),l=t.memoizedState,s!==r||h!==l||Pa.current||Ri?("function"===typeof c&&(rs(t,n,c,r),l=t.memoizedState),(s=Ri||is(t,n,s,r,h,l,u))?(d||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4194308)):("function"===typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=l),o.props=r,o.state=l,o.context=u,r=s):("function"===typeof o.componentDidMount&&(t.flags|=4194308),r=!1)}else{o=t.stateNode,Ni(e,t),s=t.memoizedProps,u=t.type===t.elementType?s:ns(t.type,s),o.props=u,d=t.pendingProps,h=o.context,"object"===typeof(l=n.contextType)&&null!==l?l=Oi(l):l=Ma(t,l=Aa(n)?Oa:ja.current);var f=n.getDerivedStateFromProps;(c="function"===typeof f||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(s!==d||h!==l)&&ss(t,o,r,l),Ri=!1,h=t.memoizedState,o.state=h,Wi(t,r,o,a);var p=t.memoizedState;s!==d||h!==p||Pa.current||Ri?("function"===typeof f&&(rs(t,n,f,r),p=t.memoizedState),(u=Ri||is(t,n,u,r,h,p,l)||!1)?(c||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(r,p,l),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,p,l)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof o.componentDidUpdate||s===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||s===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=p),o.props=r,o.state=p,o.context=l,r=u):("function"!==typeof o.componentDidUpdate||s===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||s===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),r=!1)}return js(e,t,n,r,i,a)}function js(e,t,n,r,a,i){Ts(e,t);var o=0!==(128&t.flags);if(!r&&!o)return a&&Na(t,n,!1),Us(e,t,i);r=t.stateNode,ys.current=t;var s=o&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&o?(t.child=wi(t,e.child,null,i),t.child=wi(t,null,s,i)):ws(e,t,s,i),t.memoizedState=r.state,a&&Na(t,n,!0),t.child}function Ps(e){var t=e.stateNode;t.pendingContext?Fa(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Fa(0,t.context,!1),Yi(e,t.containerInfo)}function Os(e,t,n,r,a){return fi(),pi(a),t.flags|=256,ws(e,t,n,r),t.child}var Ms,As,Ls,Fs,Rs={dehydrated:null,treeContext:null,retryLane:0};function zs(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ns(e,t,n){var r,a=t.pendingProps,o=Zi.current,s=!1,l=0!==(128&t.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&0!==(2&o)),r?(s=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Ia(Zi,1&o),null===e)return ui(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=a.children,e=a.fallback,s?(a=t.mode,s=t.child,l={mode:"hidden",children:l},0===(1&a)&&null!==s?(s.childLanes=0,s.pendingProps=l):s=zu(l,a,0,null),e=Ru(e,a,n,null),s.return=t,e.return=t,s.sibling=e,t.child=s,t.child.memoizedState=zs(n),t.memoizedState=Rs,e):Ds(t,l));if(null!==(o=e.memoizedState)&&null!==(r=o.dehydrated))return function(e,t,n,r,a,o,s){if(n)return 256&t.flags?(t.flags&=-257,_s(e,t,s,r=cs(Error(i(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=r.fallback,a=t.mode,r=zu({mode:"visible",children:r.children},a,0,null),(o=Ru(o,a,s,null)).flags|=2,r.return=t,o.return=t,r.sibling=o,t.child=r,0!==(1&t.mode)&&wi(t,e.child,null,s),t.child.memoizedState=zs(s),t.memoizedState=Rs,o);if(0===(1&t.mode))return _s(e,t,s,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var l=r.dgst;return r=l,_s(e,t,s,r=cs(o=Error(i(419)),r,void 0))}if(l=0!==(s&e.childLanes),vs||l){if(null!==(r=Pl)){switch(s&-s){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!==(a&(r.suspendedLanes|s))?0:a)&&a!==o.retryLane&&(o.retryLane=a,Fi(e,a),nu(r,e,a,-1))}return mu(),_s(e,t,s,r=cs(Error(i(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Eu.bind(null,e),a._reactRetry=t,null):(e=o.treeContext,ri=ua(a.nextSibling),ni=t,ai=!0,ii=null,null!==e&&(Ga[Ja++]=Qa,Ga[Ja++]=Ka,Ga[Ja++]=Ya,Qa=e.id,Ka=e.overflow,Ya=t),t=Ds(t,r.children),t.flags|=4096,t)}(e,t,l,a,r,o,n);if(s){s=a.fallback,l=t.mode,r=(o=e.child).sibling;var u={mode:"hidden",children:a.children};return 0===(1&l)&&t.child!==o?((a=t.child).childLanes=0,a.pendingProps=u,t.deletions=null):(a=Lu(o,u)).subtreeFlags=14680064&o.subtreeFlags,null!==r?s=Lu(r,s):(s=Ru(s,l,n,null)).flags|=2,s.return=t,a.return=t,a.sibling=s,t.child=a,a=s,s=t.child,l=null===(l=e.child.memoizedState)?zs(n):{baseLanes:l.baseLanes|n,cachePool:null,transitions:l.transitions},s.memoizedState=l,s.childLanes=e.childLanes&~n,t.memoizedState=Rs,a}return e=(s=e.child).sibling,a=Lu(s,{mode:"visible",children:a.children}),0===(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function Ds(e,t){return(t=zu({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function _s(e,t,n,r){return null!==r&&pi(r),wi(t,e.child,null,n),(e=Ds(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function qs(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),ji(e.return,t,n)}function Bs(e,t,n,r,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=a)}function Ws(e,t,n){var r=t.pendingProps,a=r.revealOrder,i=r.tail;if(ws(e,t,r.children,n),0!==(2&(r=Zi.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&qs(e,n,t);else if(19===e.tag)qs(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Ia(Zi,r),0===(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===eo(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Bs(t,!1,a,n,i);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===eo(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Bs(t,!0,n,null,i);break;case"together":Bs(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function $s(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Us(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),zl|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Lu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Lu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Hs(e,t){if(!ai)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Vs(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Gs(e,t,n){var r=t.pendingProps;switch(ti(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Vs(t),null;case 1:case 17:return Aa(t.type)&&La(),Vs(t),null;case 3:return r=t.stateNode,Qi(),Ta(Pa),Ta(ja),no(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(di(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ii&&(ou(ii),ii=null))),As(e,t),Vs(t),null;case 5:Xi(t);var a=Ji(Gi.current);if(n=t.type,null!==e&&null!=t.stateNode)Ls(e,t,n,r,a),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(i(166));return Vs(t),null}if(e=Ji(Hi.current),di(t)){r=t.stateNode,n=t.type;var o=t.memoizedProps;switch(r[ha]=t,r[fa]=o,e=0!==(1&t.mode),n){case"dialog":_r("cancel",r),_r("close",r);break;case"iframe":case"object":case"embed":_r("load",r);break;case"video":case"audio":for(a=0;a<Rr.length;a++)_r(Rr[a],r);break;case"source":_r("error",r);break;case"img":case"image":case"link":_r("error",r),_r("load",r);break;case"details":_r("toggle",r);break;case"input":Q(r,o),_r("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},_r("invalid",r);break;case"textarea":ae(r,o),_r("invalid",r)}for(var l in ye(n,o),a=null,o)if(o.hasOwnProperty(l)){var u=o[l];"children"===l?"string"===typeof u?r.textContent!==u&&(!0!==o.suppressHydrationWarning&&Xr(r.textContent,u,e),a=["children",u]):"number"===typeof u&&r.textContent!==""+u&&(!0!==o.suppressHydrationWarning&&Xr(r.textContent,u,e),a=["children",""+u]):s.hasOwnProperty(l)&&null!=u&&"onScroll"===l&&_r("scroll",r)}switch(n){case"input":V(r),Z(r,o,!0);break;case"textarea":V(r),oe(r);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(r.onclick=Zr)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{l=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=se(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof r.is?e=l.createElement(n,{is:r.is}):(e=l.createElement(n),"select"===n&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,n),e[ha]=t,e[fa]=r,Ms(e,t,!1,!1),t.stateNode=e;e:{switch(l=ve(n,r),n){case"dialog":_r("cancel",e),_r("close",e),a=r;break;case"iframe":case"object":case"embed":_r("load",e),a=r;break;case"video":case"audio":for(a=0;a<Rr.length;a++)_r(Rr[a],e);a=r;break;case"source":_r("error",e),a=r;break;case"img":case"image":case"link":_r("error",e),_r("load",e),a=r;break;case"details":_r("toggle",e),a=r;break;case"input":Q(e,r),a=Y(e,r),_r("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=N({},r,{value:void 0}),_r("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),_r("invalid",e)}for(o in ye(n,a),u=a)if(u.hasOwnProperty(o)){var c=u[o];"style"===o?ge(e,c):"dangerouslySetInnerHTML"===o?null!=(c=c?c.__html:void 0)&&de(e,c):"children"===o?"string"===typeof c?("textarea"!==n||""!==c)&&he(e,c):"number"===typeof c&&he(e,""+c):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(s.hasOwnProperty(o)?null!=c&&"onScroll"===o&&_r("scroll",e):null!=c&&v(e,o,c,l))}switch(n){case"input":V(e),Z(e,r,!1);break;case"textarea":V(e),oe(e);break;case"option":null!=r.value&&e.setAttribute("value",""+U(r.value));break;case"select":e.multiple=!!r.multiple,null!=(o=r.value)?ne(e,!!r.multiple,o,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof a.onClick&&(e.onclick=Zr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Vs(t),null;case 6:if(e&&null!=t.stateNode)Fs(e,t,e.memoizedProps,r);else{if("string"!==typeof r&&null===t.stateNode)throw Error(i(166));if(n=Ji(Gi.current),Ji(Hi.current),di(t)){if(r=t.stateNode,n=t.memoizedProps,r[ha]=t,(o=r.nodeValue!==n)&&null!==(e=ni))switch(e.tag){case 3:Xr(r.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Xr(r.nodeValue,n,0!==(1&e.mode))}o&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[ha]=t,t.stateNode=r}return Vs(t),null;case 13:if(Ta(Zi),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ai&&null!==ri&&0!==(1&t.mode)&&0===(128&t.flags))hi(),fi(),t.flags|=98560,o=!1;else if(o=di(t),null!==r&&null!==r.dehydrated){if(null===e){if(!o)throw Error(i(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(i(317));o[ha]=t}else fi(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Vs(t),o=!1}else null!==ii&&(ou(ii),ii=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&Zi.current)?0===Fl&&(Fl=3):mu())),null!==t.updateQueue&&(t.flags|=4),Vs(t),null);case 4:return Qi(),As(e,t),null===e&&Wr(t.stateNode.containerInfo),Vs(t),null;case 10:return Ei(t.type._context),Vs(t),null;case 19:if(Ta(Zi),null===(o=t.memoizedState))return Vs(t),null;if(r=0!==(128&t.flags),null===(l=o.rendering))if(r)Hs(o,!1);else{if(0!==Fl||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=eo(e))){for(t.flags|=128,Hs(o,!1),null!==(r=l.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(o=n).flags&=14680066,null===(l=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=l.childLanes,o.lanes=l.lanes,o.child=l.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=l.memoizedProps,o.memoizedState=l.memoizedState,o.updateQueue=l.updateQueue,o.type=l.type,e=l.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Ia(Zi,1&Zi.current|2),t.child}e=e.sibling}null!==o.tail&&Ke()>Wl&&(t.flags|=128,r=!0,Hs(o,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=eo(l))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Hs(o,!0),null===o.tail&&"hidden"===o.tailMode&&!l.alternate&&!ai)return Vs(t),null}else 2*Ke()-o.renderingStartTime>Wl&&1073741824!==n&&(t.flags|=128,r=!0,Hs(o,!1),t.lanes=4194304);o.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=o.last)?n.sibling=l:t.child=l,o.last=l)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Ke(),t.sibling=null,n=Zi.current,Ia(Zi,r?1&n|2:1&n),t):(Vs(t),null);case 22:case 23:return du(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!==(1&t.mode)?0!==(1073741824&Al)&&(Vs(t),6&t.subtreeFlags&&(t.flags|=8192)):Vs(t),null;case 24:case 25:return null}throw Error(i(156,t.tag))}function Js(e,t){switch(ti(t),t.tag){case 1:return Aa(t.type)&&La(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Qi(),Ta(Pa),Ta(ja),no(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Xi(t),null;case 13:if(Ta(Zi),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(i(340));fi()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Ta(Zi),null;case 4:return Qi(),null;case 10:return Ei(t.type._context),null;case 22:case 23:return du(),null;default:return null}}Ms=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},As=function(){},Ls=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,Ji(Hi.current);var i,o=null;switch(n){case"input":a=Y(e,a),r=Y(e,r),o=[];break;case"select":a=N({},a,{value:void 0}),r=N({},r,{value:void 0}),o=[];break;case"textarea":a=re(e,a),r=re(e,r),o=[];break;default:"function"!==typeof a.onClick&&"function"===typeof r.onClick&&(e.onclick=Zr)}for(c in ye(n,r),n=null,a)if(!r.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var l=a[c];for(i in l)l.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(s.hasOwnProperty(c)?o||(o=[]):(o=o||[]).push(c,null));for(c in r){var u=r[c];if(l=null!=a?a[c]:void 0,r.hasOwnProperty(c)&&u!==l&&(null!=u||null!=l))if("style"===c)if(l){for(i in l)!l.hasOwnProperty(i)||u&&u.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in u)u.hasOwnProperty(i)&&l[i]!==u[i]&&(n||(n={}),n[i]=u[i])}else n||(o||(o=[]),o.push(c,n)),n=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,l=l?l.__html:void 0,null!=u&&l!==u&&(o=o||[]).push(c,u)):"children"===c?"string"!==typeof u&&"number"!==typeof u||(o=o||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(s.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&_r("scroll",e),o||l===u||(o=[])):(o=o||[]).push(c,u))}n&&(o=o||[]).push("style",n);var c=o;(t.updateQueue=c)&&(t.flags|=4)}},Fs=function(e,t,n,r){n!==r&&(t.flags|=4)};var Ys=!1,Qs=!1,Ks="function"===typeof WeakSet?WeakSet:Set,Xs=null;function Zs(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(r){Cu(e,t,r)}else n.current=null}function el(e,t,n){try{n()}catch(r){Cu(e,t,r)}}var tl=!1;function nl(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var i=a.destroy;a.destroy=void 0,void 0!==i&&el(t,n,i)}a=a.next}while(a!==r)}}function rl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function al(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function il(e){var t=e.alternate;null!==t&&(e.alternate=null,il(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[ha],delete t[fa],delete t[ma],delete t[ga],delete t[ba])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ol(e){return 5===e.tag||3===e.tag||4===e.tag}function sl(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ol(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ll(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Zr));else if(4!==r&&null!==(e=e.child))for(ll(e,t,n),e=e.sibling;null!==e;)ll(e,t,n),e=e.sibling}function ul(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ul(e,t,n),e=e.sibling;null!==e;)ul(e,t,n),e=e.sibling}var cl=null,dl=!1;function hl(e,t,n){for(n=n.child;null!==n;)fl(e,t,n),n=n.sibling}function fl(e,t,n){if(it&&"function"===typeof it.onCommitFiberUnmount)try{it.onCommitFiberUnmount(at,n)}catch(s){}switch(n.tag){case 5:Qs||Zs(n,t);case 6:var r=cl,a=dl;cl=null,hl(e,t,n),dl=a,null!==(cl=r)&&(dl?(e=cl,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):cl.removeChild(n.stateNode));break;case 18:null!==cl&&(dl?(e=cl,n=n.stateNode,8===e.nodeType?la(e.parentNode,n):1===e.nodeType&&la(e,n),Wt(e)):la(cl,n.stateNode));break;case 4:r=cl,a=dl,cl=n.stateNode.containerInfo,dl=!0,hl(e,t,n),cl=r,dl=a;break;case 0:case 11:case 14:case 15:if(!Qs&&(null!==(r=n.updateQueue)&&null!==(r=r.lastEffect))){a=r=r.next;do{var i=a,o=i.destroy;i=i.tag,void 0!==o&&(0!==(2&i)||0!==(4&i))&&el(n,t,o),a=a.next}while(a!==r)}hl(e,t,n);break;case 1:if(!Qs&&(Zs(n,t),"function"===typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(s){Cu(n,t,s)}hl(e,t,n);break;case 21:hl(e,t,n);break;case 22:1&n.mode?(Qs=(r=Qs)||null!==n.memoizedState,hl(e,t,n),Qs=r):hl(e,t,n);break;default:hl(e,t,n)}}function pl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Ks),t.forEach((function(t){var r=ju.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function ml(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var o=e,s=t,l=s;e:for(;null!==l;){switch(l.tag){case 5:cl=l.stateNode,dl=!1;break e;case 3:case 4:cl=l.stateNode.containerInfo,dl=!0;break e}l=l.return}if(null===cl)throw Error(i(160));fl(o,s,a),cl=null,dl=!1;var u=a.alternate;null!==u&&(u.return=null),a.return=null}catch(c){Cu(a,t,c)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gl(t,e),t=t.sibling}function gl(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ml(t,e),bl(e),4&r){try{nl(3,e,e.return),rl(3,e)}catch(g){Cu(e,e.return,g)}try{nl(5,e,e.return)}catch(g){Cu(e,e.return,g)}}break;case 1:ml(t,e),bl(e),512&r&&null!==n&&Zs(n,n.return);break;case 5:if(ml(t,e),bl(e),512&r&&null!==n&&Zs(n,n.return),32&e.flags){var a=e.stateNode;try{he(a,"")}catch(g){Cu(e,e.return,g)}}if(4&r&&null!=(a=e.stateNode)){var o=e.memoizedProps,s=null!==n?n.memoizedProps:o,l=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===l&&"radio"===o.type&&null!=o.name&&K(a,o),ve(l,s);var c=ve(l,o);for(s=0;s<u.length;s+=2){var d=u[s],h=u[s+1];"style"===d?ge(a,h):"dangerouslySetInnerHTML"===d?de(a,h):"children"===d?he(a,h):v(a,d,h,c)}switch(l){case"input":X(a,o);break;case"textarea":ie(a,o);break;case"select":var f=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!o.multiple;var p=o.value;null!=p?ne(a,!!o.multiple,p,!1):f!==!!o.multiple&&(null!=o.defaultValue?ne(a,!!o.multiple,o.defaultValue,!0):ne(a,!!o.multiple,o.multiple?[]:"",!1))}a[fa]=o}catch(g){Cu(e,e.return,g)}}break;case 6:if(ml(t,e),bl(e),4&r){if(null===e.stateNode)throw Error(i(162));a=e.stateNode,o=e.memoizedProps;try{a.nodeValue=o}catch(g){Cu(e,e.return,g)}}break;case 3:if(ml(t,e),bl(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Wt(t.containerInfo)}catch(g){Cu(e,e.return,g)}break;case 4:default:ml(t,e),bl(e);break;case 13:ml(t,e),bl(e),8192&(a=e.child).flags&&(o=null!==a.memoizedState,a.stateNode.isHidden=o,!o||null!==a.alternate&&null!==a.alternate.memoizedState||(Bl=Ke())),4&r&&pl(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Qs=(c=Qs)||d,ml(t,e),Qs=c):ml(t,e),bl(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!d&&0!==(1&e.mode))for(Xs=e,d=e.child;null!==d;){for(h=Xs=d;null!==Xs;){switch(p=(f=Xs).child,f.tag){case 0:case 11:case 14:case 15:nl(4,f,f.return);break;case 1:Zs(f,f.return);var m=f.stateNode;if("function"===typeof m.componentWillUnmount){r=f,n=f.return;try{t=r,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Cu(r,n,g)}}break;case 5:Zs(f,f.return);break;case 22:if(null!==f.memoizedState){xl(h);continue}}null!==p?(p.return=f,Xs=p):xl(h)}d=d.sibling}e:for(d=null,h=e;;){if(5===h.tag){if(null===d){d=h;try{a=h.stateNode,c?"function"===typeof(o=a.style).setProperty?o.setProperty("display","none","important"):o.display="none":(l=h.stateNode,s=void 0!==(u=h.memoizedProps.style)&&null!==u&&u.hasOwnProperty("display")?u.display:null,l.style.display=me("display",s))}catch(g){Cu(e,e.return,g)}}}else if(6===h.tag){if(null===d)try{h.stateNode.nodeValue=c?"":h.memoizedProps}catch(g){Cu(e,e.return,g)}}else if((22!==h.tag&&23!==h.tag||null===h.memoizedState||h===e)&&null!==h.child){h.child.return=h,h=h.child;continue}if(h===e)break e;for(;null===h.sibling;){if(null===h.return||h.return===e)break e;d===h&&(d=null),h=h.return}d===h&&(d=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:ml(t,e),bl(e),4&r&&pl(e);case 21:}}function bl(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(ol(n)){var r=n;break e}n=n.return}throw Error(i(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(he(a,""),r.flags&=-33),ul(e,sl(e),a);break;case 3:case 4:var o=r.stateNode.containerInfo;ll(e,sl(e),o);break;default:throw Error(i(161))}}catch(s){Cu(e,e.return,s)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function yl(e,t,n){Xs=e,vl(e,t,n)}function vl(e,t,n){for(var r=0!==(1&e.mode);null!==Xs;){var a=Xs,i=a.child;if(22===a.tag&&r){var o=null!==a.memoizedState||Ys;if(!o){var s=a.alternate,l=null!==s&&null!==s.memoizedState||Qs;s=Ys;var u=Qs;if(Ys=o,(Qs=l)&&!u)for(Xs=a;null!==Xs;)l=(o=Xs).child,22===o.tag&&null!==o.memoizedState?kl(a):null!==l?(l.return=o,Xs=l):kl(a);for(;null!==i;)Xs=i,vl(i,t,n),i=i.sibling;Xs=a,Ys=s,Qs=u}wl(e)}else 0!==(8772&a.subtreeFlags)&&null!==i?(i.return=a,Xs=i):wl(e)}}function wl(e){for(;null!==Xs;){var t=Xs;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Qs||rl(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Qs)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:ns(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&$i(t,o,r);break;case 3:var s=t.updateQueue;if(null!==s){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}$i(t,s,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var d=c.memoizedState;if(null!==d){var h=d.dehydrated;null!==h&&Wt(h)}}}break;default:throw Error(i(163))}Qs||512&t.flags&&al(t)}catch(f){Cu(t,t.return,f)}}if(t===e){Xs=null;break}if(null!==(n=t.sibling)){n.return=t.return,Xs=n;break}Xs=t.return}}function xl(e){for(;null!==Xs;){var t=Xs;if(t===e){Xs=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Xs=n;break}Xs=t.return}}function kl(e){for(;null!==Xs;){var t=Xs;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{rl(4,t)}catch(l){Cu(t,n,l)}break;case 1:var r=t.stateNode;if("function"===typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(l){Cu(t,a,l)}}var i=t.return;try{al(t)}catch(l){Cu(t,i,l)}break;case 5:var o=t.return;try{al(t)}catch(l){Cu(t,o,l)}}}catch(l){Cu(t,t.return,l)}if(t===e){Xs=null;break}var s=t.sibling;if(null!==s){s.return=t.return,Xs=s;break}Xs=t.return}}var Sl,Cl=Math.ceil,Tl=w.ReactCurrentDispatcher,Il=w.ReactCurrentOwner,El=w.ReactCurrentBatchConfig,jl=0,Pl=null,Ol=null,Ml=0,Al=0,Ll=Ca(0),Fl=0,Rl=null,zl=0,Nl=0,Dl=0,_l=null,ql=null,Bl=0,Wl=1/0,$l=null,Ul=!1,Hl=null,Vl=null,Gl=!1,Jl=null,Yl=0,Ql=0,Kl=null,Xl=-1,Zl=0;function eu(){return 0!==(6&jl)?Ke():-1!==Xl?Xl:Xl=Ke()}function tu(e){return 0===(1&e.mode)?1:0!==(2&jl)&&0!==Ml?Ml&-Ml:null!==mi.transition?(0===Zl&&(Zl=mt()),Zl):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Qt(e.type)}function nu(e,t,n,r){if(50<Ql)throw Ql=0,Kl=null,Error(i(185));bt(e,n,r),0!==(2&jl)&&e===Pl||(e===Pl&&(0===(2&jl)&&(Nl|=n),4===Fl&&su(e,Ml)),ru(e,r),1===n&&0===jl&&0===(1&t.mode)&&(Wl=Ke()+500,_a&&Wa()))}function ru(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,i=e.pendingLanes;0<i;){var o=31-ot(i),s=1<<o,l=a[o];-1===l?0!==(s&n)&&0===(s&r)||(a[o]=ft(s,t)):l<=t&&(e.expiredLanes|=s),i&=~s}}(e,t);var r=ht(e,e===Pl?Ml:0);if(0===r)null!==n&&Je(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Je(n),1===t)0===e.tag?function(e){_a=!0,Ba(e)}(lu.bind(null,e)):Ba(lu.bind(null,e)),oa((function(){0===(6&jl)&&Wa()})),n=null;else{switch(wt(r)){case 1:n=Ze;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Pu(n,au.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function au(e,t){if(Xl=-1,Zl=0,0!==(6&jl))throw Error(i(327));var n=e.callbackNode;if(ku()&&e.callbackNode!==n)return null;var r=ht(e,e===Pl?Ml:0);if(0===r)return null;if(0!==(30&r)||0!==(r&e.expiredLanes)||t)t=gu(e,r);else{t=r;var a=jl;jl|=2;var o=pu();for(Pl===e&&Ml===t||($l=null,Wl=Ke()+500,hu(e,t));;)try{yu();break}catch(l){fu(e,l)}Ii(),Tl.current=o,jl=a,null!==Ol?t=0:(Pl=null,Ml=0,t=Fl)}if(0!==t){if(2===t&&(0!==(a=pt(e))&&(r=a,t=iu(e,a))),1===t)throw n=Rl,hu(e,0),su(e,r),ru(e,Ke()),n;if(6===t)su(e,r);else{if(a=e.current.alternate,0===(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],i=a.getSnapshot;a=a.value;try{if(!sr(i(),a))return!1}catch(s){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=gu(e,r))&&(0!==(o=pt(e))&&(r=o,t=iu(e,o))),1===t))throw n=Rl,hu(e,0),su(e,r),ru(e,Ke()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(i(345));case 2:case 5:xu(e,ql,$l);break;case 3:if(su(e,r),(130023424&r)===r&&10<(t=Bl+500-Ke())){if(0!==ht(e,0))break;if(((a=e.suspendedLanes)&r)!==r){eu(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(xu.bind(null,e,ql,$l),t);break}xu(e,ql,$l);break;case 4:if(su(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var s=31-ot(r);o=1<<s,(s=t[s])>a&&(a=s),r&=~o}if(r=a,10<(r=(120>(r=Ke()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Cl(r/1960))-r)){e.timeoutHandle=ra(xu.bind(null,e,ql,$l),r);break}xu(e,ql,$l);break;default:throw Error(i(329))}}}return ru(e,Ke()),e.callbackNode===n?au.bind(null,e):null}function iu(e,t){var n=_l;return e.current.memoizedState.isDehydrated&&(hu(e,t).flags|=256),2!==(e=gu(e,t))&&(t=ql,ql=n,null!==t&&ou(t)),e}function ou(e){null===ql?ql=e:ql.push.apply(ql,e)}function su(e,t){for(t&=~Dl,t&=~Nl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),r=1<<n;e[n]=-1,t&=~r}}function lu(e){if(0!==(6&jl))throw Error(i(327));ku();var t=ht(e,0);if(0===(1&t))return ru(e,Ke()),null;var n=gu(e,t);if(0!==e.tag&&2===n){var r=pt(e);0!==r&&(t=r,n=iu(e,r))}if(1===n)throw n=Rl,hu(e,0),su(e,t),ru(e,Ke()),n;if(6===n)throw Error(i(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,xu(e,ql,$l),ru(e,Ke()),null}function uu(e,t){var n=jl;jl|=1;try{return e(t)}finally{0===(jl=n)&&(Wl=Ke()+500,_a&&Wa())}}function cu(e){null!==Jl&&0===Jl.tag&&0===(6&jl)&&ku();var t=jl;jl|=1;var n=El.transition,r=vt;try{if(El.transition=null,vt=1,e)return e()}finally{vt=r,El.transition=n,0===(6&(jl=t))&&Wa()}}function du(){Al=Ll.current,Ta(Ll)}function hu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,aa(n)),null!==Ol)for(n=Ol.return;null!==n;){var r=n;switch(ti(r),r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&La();break;case 3:Qi(),Ta(Pa),Ta(ja),no();break;case 5:Xi(r);break;case 4:Qi();break;case 13:case 19:Ta(Zi);break;case 10:Ei(r.type._context);break;case 22:case 23:du()}n=n.return}if(Pl=e,Ol=e=Lu(e.current,null),Ml=Al=t,Fl=0,Rl=null,Dl=Nl=zl=0,ql=_l=null,null!==Mi){for(t=0;t<Mi.length;t++)if(null!==(r=(n=Mi[t]).interleaved)){n.interleaved=null;var a=r.next,i=n.pending;if(null!==i){var o=i.next;i.next=a,r.next=o}n.pending=r}Mi=null}return e}function fu(e,t){for(;;){var n=Ol;try{if(Ii(),ro.current=Xo,uo){for(var r=oo.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}uo=!1}if(io=0,lo=so=oo=null,co=!1,ho=0,Il.current=null,null===n||null===n.return){Fl=1,Rl=t,Ol=null;break}e:{var o=e,s=n.return,l=n,u=t;if(t=Ml,l.flags|=32768,null!==u&&"object"===typeof u&&"function"===typeof u.then){var c=u,d=l,h=d.tag;if(0===(1&d.mode)&&(0===h||11===h||15===h)){var f=d.alternate;f?(d.updateQueue=f.updateQueue,d.memoizedState=f.memoizedState,d.lanes=f.lanes):(d.updateQueue=null,d.memoizedState=null)}var p=gs(s);if(null!==p){p.flags&=-257,bs(p,s,l,0,t),1&p.mode&&ms(o,c,t),u=c;var m=(t=p).updateQueue;if(null===m){var g=new Set;g.add(u),t.updateQueue=g}else m.add(u);break e}if(0===(1&t)){ms(o,c,t),mu();break e}u=Error(i(426))}else if(ai&&1&l.mode){var b=gs(s);if(null!==b){0===(65536&b.flags)&&(b.flags|=256),bs(b,s,l,0,t),pi(us(u,l));break e}}o=u=us(u,l),4!==Fl&&(Fl=2),null===_l?_l=[o]:_l.push(o),o=s;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Bi(o,fs(0,u,t));break e;case 1:l=u;var y=o.type,v=o.stateNode;if(0===(128&o.flags)&&("function"===typeof y.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===Vl||!Vl.has(v)))){o.flags|=65536,t&=-t,o.lanes|=t,Bi(o,ps(o,l,t));break e}}o=o.return}while(null!==o)}wu(n)}catch(w){t=w,Ol===n&&null!==n&&(Ol=n=n.return);continue}break}}function pu(){var e=Tl.current;return Tl.current=Xo,null===e?Xo:e}function mu(){0!==Fl&&3!==Fl&&2!==Fl||(Fl=4),null===Pl||0===(268435455&zl)&&0===(268435455&Nl)||su(Pl,Ml)}function gu(e,t){var n=jl;jl|=2;var r=pu();for(Pl===e&&Ml===t||($l=null,hu(e,t));;)try{bu();break}catch(a){fu(e,a)}if(Ii(),jl=n,Tl.current=r,null!==Ol)throw Error(i(261));return Pl=null,Ml=0,Fl}function bu(){for(;null!==Ol;)vu(Ol)}function yu(){for(;null!==Ol&&!Ye();)vu(Ol)}function vu(e){var t=Sl(e.alternate,e,Al);e.memoizedProps=e.pendingProps,null===t?wu(e):Ol=t,Il.current=null}function wu(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Gs(n,t,Al)))return void(Ol=n)}else{if(null!==(n=Js(n,t)))return n.flags&=32767,void(Ol=n);if(null===e)return Fl=6,void(Ol=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Ol=t);Ol=t=e}while(null!==t);0===Fl&&(Fl=5)}function xu(e,t,n){var r=vt,a=El.transition;try{El.transition=null,vt=1,function(e,t,n,r){do{ku()}while(null!==Jl);if(0!==(6&jl))throw Error(i(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-ot(n),i=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~i}}(e,o),e===Pl&&(Ol=Pl=null,Ml=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Gl||(Gl=!0,Pu(tt,(function(){return ku(),null}))),o=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||o){o=El.transition,El.transition=null;var s=vt;vt=1;var l=jl;jl|=4,Il.current=null,function(e,t){if(ea=Ut,fr(e=hr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch(x){n=null;break e}var s=0,l=-1,u=-1,c=0,d=0,h=e,f=null;t:for(;;){for(var p;h!==n||0!==a&&3!==h.nodeType||(l=s+a),h!==o||0!==r&&3!==h.nodeType||(u=s+r),3===h.nodeType&&(s+=h.nodeValue.length),null!==(p=h.firstChild);)f=h,h=p;for(;;){if(h===e)break t;if(f===n&&++c===a&&(l=s),f===o&&++d===r&&(u=s),null!==(p=h.nextSibling))break;f=(h=f).parentNode}h=p}n=-1===l||-1===u?null:{start:l,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(ta={focusedElem:e,selectionRange:n},Ut=!1,Xs=t;null!==Xs;)if(e=(t=Xs).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Xs=e;else for(;null!==Xs;){t=Xs;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,b=m.memoizedState,y=t.stateNode,v=y.getSnapshotBeforeUpdate(t.elementType===t.type?g:ns(t.type,g),b);y.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var w=t.stateNode.containerInfo;1===w.nodeType?w.textContent="":9===w.nodeType&&w.documentElement&&w.removeChild(w.documentElement);break;default:throw Error(i(163))}}catch(x){Cu(t,t.return,x)}if(null!==(e=t.sibling)){e.return=t.return,Xs=e;break}Xs=t.return}m=tl,tl=!1}(e,n),gl(n,e),pr(ta),Ut=!!ea,ta=ea=null,e.current=n,yl(n,e,a),Qe(),jl=l,vt=s,El.transition=o}else e.current=n;if(Gl&&(Gl=!1,Jl=e,Yl=a),o=e.pendingLanes,0===o&&(Vl=null),function(e){if(it&&"function"===typeof it.onCommitFiberRoot)try{it.onCommitFiberRoot(at,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),ru(e,Ke()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)a=t[n],r(a.value,{componentStack:a.stack,digest:a.digest});if(Ul)throw Ul=!1,e=Hl,Hl=null,e;0!==(1&Yl)&&0!==e.tag&&ku(),o=e.pendingLanes,0!==(1&o)?e===Kl?Ql++:(Ql=0,Kl=e):Ql=0,Wa()}(e,t,n,r)}finally{El.transition=a,vt=r}return null}function ku(){if(null!==Jl){var e=wt(Yl),t=El.transition,n=vt;try{if(El.transition=null,vt=16>e?16:e,null===Jl)var r=!1;else{if(e=Jl,Jl=null,Yl=0,0!==(6&jl))throw Error(i(331));var a=jl;for(jl|=4,Xs=e.current;null!==Xs;){var o=Xs,s=o.child;if(0!==(16&Xs.flags)){var l=o.deletions;if(null!==l){for(var u=0;u<l.length;u++){var c=l[u];for(Xs=c;null!==Xs;){var d=Xs;switch(d.tag){case 0:case 11:case 15:nl(8,d,o)}var h=d.child;if(null!==h)h.return=d,Xs=h;else for(;null!==Xs;){var f=(d=Xs).sibling,p=d.return;if(il(d),d===c){Xs=null;break}if(null!==f){f.return=p,Xs=f;break}Xs=p}}}var m=o.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var b=g.sibling;g.sibling=null,g=b}while(null!==g)}}Xs=o}}if(0!==(2064&o.subtreeFlags)&&null!==s)s.return=o,Xs=s;else e:for(;null!==Xs;){if(0!==(2048&(o=Xs).flags))switch(o.tag){case 0:case 11:case 15:nl(9,o,o.return)}var y=o.sibling;if(null!==y){y.return=o.return,Xs=y;break e}Xs=o.return}}var v=e.current;for(Xs=v;null!==Xs;){var w=(s=Xs).child;if(0!==(2064&s.subtreeFlags)&&null!==w)w.return=s,Xs=w;else e:for(s=v;null!==Xs;){if(0!==(2048&(l=Xs).flags))try{switch(l.tag){case 0:case 11:case 15:rl(9,l)}}catch(k){Cu(l,l.return,k)}if(l===s){Xs=null;break e}var x=l.sibling;if(null!==x){x.return=l.return,Xs=x;break e}Xs=l.return}}if(jl=a,Wa(),it&&"function"===typeof it.onPostCommitFiberRoot)try{it.onPostCommitFiberRoot(at,e)}catch(k){}r=!0}return r}finally{vt=n,El.transition=t}}return!1}function Su(e,t,n){e=_i(e,t=fs(0,t=us(n,t),1),1),t=eu(),null!==e&&(bt(e,1,t),ru(e,t))}function Cu(e,t,n){if(3===e.tag)Su(e,e,n);else for(;null!==t;){if(3===t.tag){Su(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===Vl||!Vl.has(r))){t=_i(t,e=ps(t,e=us(n,e),1),1),e=eu(),null!==t&&(bt(t,1,e),ru(t,e));break}}t=t.return}}function Tu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=eu(),e.pingedLanes|=e.suspendedLanes&n,Pl===e&&(Ml&n)===n&&(4===Fl||3===Fl&&(130023424&Ml)===Ml&&500>Ke()-Bl?hu(e,0):Dl|=n),ru(e,t)}function Iu(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ct,0===(130023424&(ct<<=1))&&(ct=4194304)));var n=eu();null!==(e=Fi(e,t))&&(bt(e,t,n),ru(e,n))}function Eu(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Iu(e,n)}function ju(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(i(314))}null!==r&&r.delete(t),Iu(e,n)}function Pu(e,t){return Ge(e,t)}function Ou(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Mu(e,t,n,r){return new Ou(e,t,n,r)}function Au(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Lu(e,t){var n=e.alternate;return null===n?((n=Mu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Fu(e,t,n,r,a,o){var s=2;if(r=e,"function"===typeof e)Au(e)&&(s=1);else if("string"===typeof e)s=5;else e:switch(e){case S:return Ru(n.children,a,o,t);case C:s=8,a|=8;break;case T:return(e=Mu(12,n,t,2|a)).elementType=T,e.lanes=o,e;case P:return(e=Mu(13,n,t,a)).elementType=P,e.lanes=o,e;case O:return(e=Mu(19,n,t,a)).elementType=O,e.lanes=o,e;case L:return zu(n,a,o,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case I:s=10;break e;case E:s=9;break e;case j:s=11;break e;case M:s=14;break e;case A:s=16,r=null;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Mu(s,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function Ru(e,t,n,r){return(e=Mu(7,e,r,t)).lanes=n,e}function zu(e,t,n,r){return(e=Mu(22,e,r,t)).elementType=L,e.lanes=n,e.stateNode={isHidden:!1},e}function Nu(e,t,n){return(e=Mu(6,e,null,t)).lanes=n,e}function Du(e,t,n){return(t=Mu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function _u(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function qu(e,t,n,r,a,i,o,s,l){return e=new _u(e,t,n,s,l),1===t?(t=1,!0===i&&(t|=8)):t=0,i=Mu(3,null,null,t),e.current=i,i.stateNode=e,i.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},zi(i),e}function Bu(e){if(!e)return Ea;e:{if(We(e=e._reactInternals)!==e||1!==e.tag)throw Error(i(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Aa(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(i(171))}if(1===e.tag){var n=e.type;if(Aa(n))return Ra(e,n,t)}return t}function Wu(e,t,n,r,a,i,o,s,l){return(e=qu(n,r,!0,e,0,i,0,s,l)).context=Bu(null),n=e.current,(i=Di(r=eu(),a=tu(n))).callback=void 0!==t&&null!==t?t:null,_i(n,i,a),e.current.lanes=a,bt(e,a,r),ru(e,r),e}function $u(e,t,n,r){var a=t.current,i=eu(),o=tu(a);return n=Bu(n),null===t.context?t.context=n:t.pendingContext=n,(t=Di(i,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=_i(a,t,o))&&(nu(e,a,o,i),qi(e,a,o)),o}function Uu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Hu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Vu(e,t){Hu(e,t),(e=e.alternate)&&Hu(e,t)}Sl=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Pa.current)vs=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return vs=!1,function(e,t,n){switch(t.tag){case 3:Ps(t),fi();break;case 5:Ki(t);break;case 1:Aa(t.type)&&za(t);break;case 4:Yi(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;Ia(ki,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Ia(Zi,1&Zi.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Ns(e,t,n):(Ia(Zi,1&Zi.current),null!==(e=Us(e,t,n))?e.sibling:null);Ia(Zi,1&Zi.current);break;case 19:if(r=0!==(n&t.childLanes),0!==(128&e.flags)){if(r)return Ws(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),Ia(Zi,Zi.current),r)break;return null;case 22:case 23:return t.lanes=0,Cs(e,t,n)}return Us(e,t,n)}(e,t,n);vs=0!==(131072&e.flags)}else vs=!1,ai&&0!==(1048576&t.flags)&&Za(t,Va,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;$s(e,t),e=t.pendingProps;var a=Ma(t,ja.current);Pi(t,n),a=go(null,t,r,e,a,n);var o=bo();return t.flags|=1,"object"===typeof a&&null!==a&&"function"===typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Aa(r)?(o=!0,za(t)):o=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,zi(t),a.updater=as,t.stateNode=a,a._reactInternals=t,ls(t,r,e,n),t=js(null,t,r,!0,o,n)):(t.tag=0,ai&&o&&ei(t),ws(null,t,a,n),t=t.child),t;case 16:r=t.elementType;e:{switch($s(e,t),e=t.pendingProps,r=(a=r._init)(r._payload),t.type=r,a=t.tag=function(e){if("function"===typeof e)return Au(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===j)return 11;if(e===M)return 14}return 2}(r),e=ns(r,e),a){case 0:t=Is(null,t,r,e,n);break e;case 1:t=Es(null,t,r,e,n);break e;case 11:t=xs(null,t,r,e,n);break e;case 14:t=ks(null,t,r,ns(r.type,e),n);break e}throw Error(i(306,r,""))}return t;case 0:return r=t.type,a=t.pendingProps,Is(e,t,r,a=t.elementType===r?a:ns(r,a),n);case 1:return r=t.type,a=t.pendingProps,Es(e,t,r,a=t.elementType===r?a:ns(r,a),n);case 3:e:{if(Ps(t),null===e)throw Error(i(387));r=t.pendingProps,a=(o=t.memoizedState).element,Ni(e,t),Wi(t,r,null,n);var s=t.memoizedState;if(r=s.element,o.isDehydrated){if(o={element:r,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Os(e,t,r,n,a=us(Error(i(423)),t));break e}if(r!==a){t=Os(e,t,r,n,a=us(Error(i(424)),t));break e}for(ri=ua(t.stateNode.containerInfo.firstChild),ni=t,ai=!0,ii=null,n=xi(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(fi(),r===a){t=Us(e,t,n);break e}ws(e,t,r,n)}t=t.child}return t;case 5:return Ki(t),null===e&&ui(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,s=a.children,na(r,a)?s=null:null!==o&&na(r,o)&&(t.flags|=32),Ts(e,t),ws(e,t,s,n),t.child;case 6:return null===e&&ui(t),null;case 13:return Ns(e,t,n);case 4:return Yi(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=wi(t,null,r,n):ws(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,xs(e,t,r,a=t.elementType===r?a:ns(r,a),n);case 7:return ws(e,t,t.pendingProps,n),t.child;case 8:case 12:return ws(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,o=t.memoizedProps,s=a.value,Ia(ki,r._currentValue),r._currentValue=s,null!==o)if(sr(o.value,s)){if(o.children===a.children&&!Pa.current){t=Us(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var l=o.dependencies;if(null!==l){s=o.child;for(var u=l.firstContext;null!==u;){if(u.context===r){if(1===o.tag){(u=Di(-1,n&-n)).tag=2;var c=o.updateQueue;if(null!==c){var d=(c=c.shared).pending;null===d?u.next=u:(u.next=d.next,d.next=u),c.pending=u}}o.lanes|=n,null!==(u=o.alternate)&&(u.lanes|=n),ji(o.return,n,t),l.lanes|=n;break}u=u.next}}else if(10===o.tag)s=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(s=o.return))throw Error(i(341));s.lanes|=n,null!==(l=s.alternate)&&(l.lanes|=n),ji(s,n,t),s=o.sibling}else s=o.child;if(null!==s)s.return=o;else for(s=o;null!==s;){if(s===t){s=null;break}if(null!==(o=s.sibling)){o.return=s.return,s=o;break}s=s.return}o=s}ws(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=t.pendingProps.children,Pi(t,n),r=r(a=Oi(a)),t.flags|=1,ws(e,t,r,n),t.child;case 14:return a=ns(r=t.type,t.pendingProps),ks(e,t,r,a=ns(r.type,a),n);case 15:return Ss(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:ns(r,a),$s(e,t),t.tag=1,Aa(r)?(e=!0,za(t)):e=!1,Pi(t,n),os(t,r,a),ls(t,r,a,n),js(null,t,r,!0,e,n);case 19:return Ws(e,t,n);case 22:return Cs(e,t,n)}throw Error(i(156,t.tag))};var Gu="function"===typeof reportError?reportError:function(e){console.error(e)};function Ju(e){this._internalRoot=e}function Yu(e){this._internalRoot=e}function Qu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Ku(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Xu(){}function Zu(e,t,n,r,a){var i=n._reactRootContainer;if(i){var o=i;if("function"===typeof a){var s=a;a=function(){var e=Uu(o);s.call(e)}}$u(t,o,e,a)}else o=function(e,t,n,r,a){if(a){if("function"===typeof r){var i=r;r=function(){var e=Uu(o);i.call(e)}}var o=Wu(t,r,e,0,null,!1,0,"",Xu);return e._reactRootContainer=o,e[pa]=o.current,Wr(8===e.nodeType?e.parentNode:e),cu(),o}for(;a=e.lastChild;)e.removeChild(a);if("function"===typeof r){var s=r;r=function(){var e=Uu(l);s.call(e)}}var l=qu(e,0,!1,null,0,!1,0,"",Xu);return e._reactRootContainer=l,e[pa]=l.current,Wr(8===e.nodeType?e.parentNode:e),cu((function(){$u(t,l,n,r)})),l}(n,t,e,a,r);return Uu(o)}Yu.prototype.render=Ju.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(i(409));$u(e,t,null,null)},Yu.prototype.unmount=Ju.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;cu((function(){$u(null,e,null,null)})),t[pa]=null}},Yu.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ct();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Lt.length&&0!==t&&t<Lt[n].priority;n++);Lt.splice(n,0,e),0===n&&Nt(e)}},xt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(yt(t,1|n),ru(t,Ke()),0===(6&jl)&&(Wl=Ke()+500,Wa()))}break;case 13:cu((function(){var t=Fi(e,1);if(null!==t){var n=eu();nu(t,e,1,n)}})),Vu(e,1)}},kt=function(e){if(13===e.tag){var t=Fi(e,134217728);if(null!==t)nu(t,e,134217728,eu());Vu(e,134217728)}},St=function(e){if(13===e.tag){var t=tu(e),n=Fi(e,t);if(null!==n)nu(n,e,t,eu());Vu(e,t)}},Ct=function(){return vt},Tt=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},ke=function(e,t,n){switch(t){case"input":if(X(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=xa(r);if(!a)throw Error(i(90));G(r),X(r,a)}}}break;case"textarea":ie(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},je=uu,Pe=cu;var ec={usingClientEntryPoint:!1,Events:[va,wa,xa,Ie,Ee,uu]},tc={findFiberByHostInstance:ya,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nc={bundleType:tc.bundleType,version:tc.version,rendererPackageName:tc.rendererPackageName,rendererConfig:tc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:tc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var rc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!rc.isDisabled&&rc.supportsFiber)try{at=rc.inject(nc),it=rc}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ec,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qu(t))throw Error(i(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Qu(e))throw Error(i(299));var n=!1,r="",a=Gu;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=qu(e,1,!1,null,0,n,0,r,a),e[pa]=t.current,Wr(8===e.nodeType?e.parentNode:e),new Ju(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(i(188));throw e=Object.keys(e).join(","),Error(i(268,e))}return e=null===(e=He(t))?null:e.stateNode},t.flushSync=function(e){return cu(e)},t.hydrate=function(e,t,n){if(!Ku(t))throw Error(i(200));return Zu(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Qu(e))throw Error(i(405));var r=null!=n&&n.hydratedSources||null,a=!1,o="",s=Gu;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(s=n.onRecoverableError)),t=Wu(t,null,e,1,null!=n?n:null,a,0,o,s),e[pa]=t.current,Wr(e),r)for(e=0;e<r.length;e++)a=(a=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Yu(t)},t.render=function(e,t,n){if(!Ku(t))throw Error(i(200));return Zu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ku(e))throw Error(i(40));return!!e._reactRootContainer&&(cu((function(){Zu(null,null,e,!1,(function(){e._reactRootContainer=null,e[pa]=null}))})),!0)},t.unstable_batchedUpdates=uu,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Ku(n))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return Zu(e,t,n,!1,r)},t.version="18.3.1-next-f1338f8080-20240426"},391:(e,t,n)=>{"use strict";var r=n(950);t.createRoot=r.createRoot,t.hydrateRoot=r.hydrateRoot},950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(730)},153:(e,t,n)=>{"use strict";var r=n(43),a=Symbol.for("react.element"),i=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,s=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function u(e,t,n){var r,i={},u=null,c=null;for(r in void 0!==n&&(u=""+n),void 0!==t.key&&(u=""+t.key),void 0!==t.ref&&(c=t.ref),t)o.call(t,r)&&!l.hasOwnProperty(r)&&(i[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===i[r]&&(i[r]=t[r]);return{$$typeof:a,type:e,key:u,ref:c,props:i,_owner:s.current}}t.Fragment=i,t.jsx=u,t.jsxs=u},202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),f=Symbol.iterator;var p={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function b(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||p}function y(){}function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||p}b.prototype.isReactComponent={},b.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},b.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=b.prototype;var w=v.prototype=new y;w.constructor=v,m(w,b.prototype),w.isPureReactComponent=!0;var x=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},C={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,r){var a,i={},o=null,s=null;if(null!=t)for(a in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(o=""+t.key),t)k.call(t,a)&&!C.hasOwnProperty(a)&&(i[a]=t[a]);var l=arguments.length-2;if(1===l)i.children=r;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];i.children=u}if(e&&e.defaultProps)for(a in l=e.defaultProps)void 0===i[a]&&(i[a]=l[a]);return{$$typeof:n,type:e,key:o,ref:s,props:i,_owner:S.current}}function I(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var E=/\/+/g;function j(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,a,i,o){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case r:l=!0}}if(l)return o=o(l=e),e=""===i?"."+j(l,0):i,x(o)?(a="",null!=e&&(a=e.replace(E,"$&/")+"/"),P(o,t,a,"",(function(e){return e}))):null!=o&&(I(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,a+(!o.key||l&&l.key===o.key?"":(""+o.key).replace(E,"$&/")+"/")+e)),t.push(o)),1;if(l=0,i=""===i?".":i+":",x(e))for(var u=0;u<e.length;u++){var c=i+j(s=e[u],u);l+=P(s,t,a,c,o)}else if(c=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e),"function"===typeof c)for(e=c.call(e),u=0;!(s=e.next()).done;)l+=P(s=s.value,t,a,c=i+j(s,u++),o);else if("object"===s)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function O(e,t,n){if(null==e)return e;var r=[],a=0;return P(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function M(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var A={current:null},L={transition:null},F={ReactCurrentDispatcher:A,ReactCurrentBatchConfig:L,ReactCurrentOwner:S};function R(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:O,forEach:function(e,t,n){O(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return O(e,(function(){t++})),t},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!I(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=b,t.Fragment=a,t.Profiler=o,t.PureComponent=v,t.StrictMode=i,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=F,t.act=R,t.cloneElement=function(e,t,r){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=m({},e.props),i=e.key,o=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,s=S.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(u in t)k.call(t,u)&&!C.hasOwnProperty(u)&&(a[u]=void 0===t[u]&&void 0!==l?l[u]:t[u])}var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){l=Array(u);for(var c=0;c<u;c++)l[c]=arguments[c+2];a.children=l}return{$$typeof:n,type:e.type,key:i,ref:o,props:a,_owner:s}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=T,t.createFactory=function(e){var t=T.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=I,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:M}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=L.transition;L.transition={};try{e()}finally{L.transition=t}},t.unstable_act=R,t.useCallback=function(e,t){return A.current.useCallback(e,t)},t.useContext=function(e){return A.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return A.current.useDeferredValue(e)},t.useEffect=function(e,t){return A.current.useEffect(e,t)},t.useId=function(){return A.current.useId()},t.useImperativeHandle=function(e,t,n){return A.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return A.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return A.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return A.current.useMemo(e,t)},t.useReducer=function(e,t,n){return A.current.useReducer(e,t,n)},t.useRef=function(e){return A.current.useRef(e)},t.useState=function(e){return A.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return A.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return A.current.useTransition()},t.version="18.3.1"},43:(e,t,n)=>{"use strict";e.exports=n(202)},579:(e,t,n)=>{"use strict";e.exports=n(153)},234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<i(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,o=a>>>1;r<o;){var s=2*(r+1)-1,l=e[s],u=s+1,c=e[u];if(0>i(l,n))u<a&&0>i(c,l)?(e[r]=c,e[u]=n,r=u):(e[r]=l,e[s]=n,r=s);else{if(!(u<a&&0>i(c,n)))break e;e[r]=c,e[u]=n,r=u}}}return t}function i(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var s=Date,l=s.now();t.unstable_now=function(){return s.now()-l}}var u=[],c=[],d=1,h=null,f=3,p=!1,m=!1,g=!1,b="function"===typeof setTimeout?setTimeout:null,y="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function w(e){for(var t=r(c);null!==t;){if(null===t.callback)a(c);else{if(!(t.startTime<=e))break;a(c),t.sortIndex=t.expirationTime,n(u,t)}t=r(c)}}function x(e){if(g=!1,w(e),!m)if(null!==r(u))m=!0,L(k);else{var t=r(c);null!==t&&F(x,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,y(I),I=-1),p=!0;var i=f;try{for(w(n),h=r(u);null!==h&&(!(h.expirationTime>n)||e&&!P());){var o=h.callback;if("function"===typeof o){h.callback=null,f=h.priorityLevel;var s=o(h.expirationTime<=n);n=t.unstable_now(),"function"===typeof s?h.callback=s:h===r(u)&&a(u),w(n)}else a(u);h=r(u)}if(null!==h)var l=!0;else{var d=r(c);null!==d&&F(x,d.startTime-n),l=!1}return l}finally{h=null,f=i,p=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,C=!1,T=null,I=-1,E=5,j=-1;function P(){return!(t.unstable_now()-j<E)}function O(){if(null!==T){var e=t.unstable_now();j=e;var n=!0;try{n=T(!0,e)}finally{n?S():(C=!1,T=null)}}else C=!1}if("function"===typeof v)S=function(){v(O)};else if("undefined"!==typeof MessageChannel){var M=new MessageChannel,A=M.port2;M.port1.onmessage=O,S=function(){A.postMessage(null)}}else S=function(){b(O,0)};function L(e){T=e,C||(C=!0,S())}function F(e,n){I=b((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||p||(m=!0,L(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):E=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return f},t.unstable_getFirstCallbackNode=function(){return r(u)},t.unstable_next=function(e){switch(f){case 1:case 2:case 3:var t=3;break;default:t=f}var n=f;f=t;try{return e()}finally{f=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=f;f=e;try{return t()}finally{f=n}},t.unstable_scheduleCallback=function(e,a,i){var o=t.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?o+i:o:i=o,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:d++,callback:a,priorityLevel:e,startTime:i,expirationTime:s=i+s,sortIndex:-1},i>o?(e.sortIndex=i,n(c,e),null===r(u)&&e===r(c)&&(g?(y(I),I=-1):g=!0,F(x,i-o))):(e.sortIndex=s,n(u,e),m||p||(m=!0,L(k))),e},t.unstable_shouldYield=P,t.unstable_wrapCallback=function(e){var t=f;return function(){var n=f;f=t;try{return e.apply(this,arguments)}finally{f=n}}}},853:(e,t,n)=>{"use strict";e.exports=n(234)}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;n.t=function(r,a){if(1&a&&(r=this(r)),8&a)return r;if("object"===typeof r&&r){if(4&a&&r.__esModule)return r;if(16&a&&"function"===typeof r.then)return r}var i=Object.create(null);n.r(i);var o={};e=e||[null,t({}),t([]),t(t)];for(var s=2&a&&r;"object"==typeof s&&!~e.indexOf(s);s=t(s))Object.getOwnPropertyNames(s).forEach((e=>o[e]=()=>r[e]));return o.default=()=>r,n.d(i,o),i}})(),n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=n(43),t=n.t(e,2),r=n(391),a=n(999),i=n.n(a);const o=JSON.parse('[{"id":1,"topic":"Array / String","category":"Data Structures","code":"// Initialization\\nlet arr = Array(n).fill(0); \\n// Array of size n filled with 0\\nlet str = \\"example\\"; \\n// String initialization\\n// Find Duplicates\\nlet seen = new Set();\\nfor (let num of arr) {\\n if (seen.has(num)) return true; \\n// Duplicate found\\n seen.add(num); \\n// Add to set\\n}","explanation":"This snippet demonstrates how to initialize an array and a string, <br/>and how to find duplicates in an array using a Set:<br/><br/>1. Array Initialization: `Array(n).fill(0)` creates an array of size `n` filled with zeros.<br/>2. String Initialization: `let str = \\"example\\"` initializes a string.<br/>3. Finding Duplicates: Using a `Set` to track seen elements and identify duplicates in an array. This method is efficient because `Set` operations (add, has) are average O(1) in time complexity."},{"id":2,"topic":"Two Pointers","category":"Algorithms","code":"// Two Pointers Technique\\nlet left = 0, right = arr.length - 1;\\nwhile (left < right) {\\n if (arr[left] + arr[right] === target) {\\n  return [left, right]; \\n// Pair found\\n } else if (arr[left] + arr[right] < target) {\\n  left++; \\n// Move left pointer\\n } else {\\n  right--; \\n// Move right pointer\\n }\\n}","explanation":"This snippet uses the two pointers technique to find a pair of numbers <br/>in a sorted array that sum up to a target value:<br/><br/>1. Initialization: Set two pointers, `left` at the start and `right` at the end of the array.<br/>2. Iteration: Move the pointers towards each other based on the sum of the elements at these pointers:<br/>   - If the sum equals the target, return the indices.<br/>   - If the sum is less than the target, increment the `left` pointer.<br/>   - If the sum is greater than the target, decrement the `right` pointer.<br/>3. Efficiency: This method works in O(n) time complexity, making it efficient for sorted arrays."},{"id":3,"topic":"Sliding Window","category":"Algorithms","code":"// Fixed Window\\nfor (let i = 0; i <= arr.length - k; i++) {\\n let windowSum = arr.slice(i, i + k).reduce((a, b) => a + b, 0); \\n// Sum of fixed window\\n}\\n// Dynamic Window\\nlet left = 0, maxLen = 0, charSet = new Set();\\nfor (let right = 0; right < s.length; right++) {\\n while (charSet.has(s[right])) {\\n  charSet.delete(s[left]); \\n// Shrink window\\n  left++;\\n }\\n charSet.add(s[right]); \\n// Expand window\\n maxLen = Math.max(maxLen, right - left + 1); \\n// Update max length\\n}","explanation":"This snippet demonstrates both fixed and dynamic sliding window techniques:<br/><br/>1. Fixed Window:<br/>   - Iterate over the array with a window of fixed size `k`.<br/>   - Calculate the sum of elements within the window using `reduce`.<br/>2. Dynamic Window:<br/>   - Use two pointers (`left` and `right`) to expand and shrink the window dynamically.<br/>   - Use a `Set` to track characters and ensure no duplicates within the window.<br/>   - Adjust the window size to find the longest substring without repeating characters.<br/><br/>These techniques are useful for problems involving subarrays or substrings with specific properties."},{"id":4,"topic":"Matrix","category":"Data Structures","code":"// Traversal\\nlet rows = matrix.length, cols = matrix[0].length;\\nfor (let r = 0; r < rows; r++) {\\n for (let c = 0; c < cols; c++) {\\n  console.log(matrix[r][c]); \\n// Access each element\\n }\\n}\\n// Directions (e.g., for BFS in 4 directions)\\nlet directions = [[0,1], [1,0], [0,-1], [-1,0]];\\nfor (let [dr, dc] of directions) {\\n let nr = r + dr, nc = c + dc;\\n if (nr >= 0 && nr < rows && nc >= 0 && nc < cols) {\\n  console.log(matrix[nr][nc]); \\n// Access neighboring elements\\n }\\n}","explanation":"This snippet shows how to traverse a matrix and access its elements:<br/><br/>1. Matrix Traversal:<br/>   - Use nested loops to iterate through each element of the matrix.<br/>   - Access and process each element using `matrix[r][c]`.<br/>2. Directional Movement:<br/>   - Define direction vectors for moving in four directions (right, down, left, up).<br/>   - Use these vectors to access neighboring elements, useful for algorithms like BFS.<br/><br/>These techniques are fundamental for solving problems involving 2D grids or matrices."},{"id":5,"topic":"Hashmap","category":"Data Structures","code":"// Initialization and Operations\\nlet hashmap = new Map();\\nhashmap.set(key, value); \\n// Set key-value pair\\nhashmap.get(key, defaultValue); \\n// Retrieve or default value\\nhashmap.delete(key); \\n// Remove key","explanation":"This snippet demonstrates basic operations on a hashmap (JavaScript `Map`):<br/><br/>1. Initialization: Create a new `Map` with `let hashmap = new Map()`.<br/>2. Set: Add a key-value pair using `hashmap.set(key, value)`.<br/>3. Get: Retrieve a value by key with `hashmap.get(key, defaultValue)`, returning a default value if the key is not found.<br/>4. Delete: Remove a key-value pair using `hashmap.delete(key)`.<br/><br/>Hashmaps provide efficient O(1) average time complexity for these operations, making them ideal for fast lookups and modifications."},{"id":6,"topic":"Intervals","category":"Algorithms","code":"// Merge Intervals\\nintervals.sort((a, b) => a[0] - b[0]); \\n// Sort intervals\\nlet merged = [intervals[0]];\\nfor (let i = 1; i < intervals.length; i++) {\\n let [start, end] = intervals[i];\\n let last = merged[merged.length - 1];\\n if (start <= last[1]) {\\n  last[1] = Math.max(last[1], end); \\n// Merge intervals\\n } else {\\n  merged.push([start, end]); \\n// Add new interval\\n }\\n}","explanation":"This snippet demonstrates how to merge overlapping intervals:<br/><br/>1. Sort Intervals: Sort the intervals by their start times using `sort`.<br/>2. Merge Process:<br/>   - Initialize the merged list with the first interval.<br/>   - Iterate through the remaining intervals and compare each interval\'s start time with the end time of the last merged interval.<br/>   - If they overlap, merge them by updating the end time.<br/>   - If they don\'t overlap, add the interval to the merged list.<br/><br/>This approach ensures that overlapping intervals are combined efficiently, with a time complexity of O(n log n) due to sorting."},{"id":7,"topic":"Stack","category":"Data Structures","code":"// Initialization and Operations\\nlet stack = [];\\nstack.push(value); \\n// Push\\nstack.pop(); \\n// Pop\\nif (stack.length > 0) { /* Stack is not empty */ }","explanation":"This snippet demonstrates basic stack operations:<br/><br/>1. Initialization: Create a stack using an array with `let stack = []`.<br/>2. Push: Add an element to the top of the stack using `stack.push(value)`.<br/>3. Pop: Remove and return the top element using `stack.pop()`.<br/>4. Check if Not Empty: Verify if the stack is not empty with `stack.length > 0`.<br/><br/>Stacks follow the Last-In-First-Out (LIFO) principle, making them suitable for tasks like reversing data, parsing expressions, and backtracking algorithms."},{"id":8,"topic":"Linked List","category":"Data Structures","code":"// Node Definition\\nclass ListNode {\\n constructor(value = 0, next = null) {\\n  this.value = value;\\n  this.next = next;\\n }\\n}\\n// Traversal\\nlet node = head;\\nwhile (node) {\\n console.log(node.value); \\n// Access node value\\n node = node.next; \\n// Move to next node\\n}","explanation":"This snippet demonstrates how to define and traverse a linked list:<br/><br/>1. Node Definition: Define a `ListNode` class with a constructor to initialize `value` and `next` properties.<br/>2. Traversal:<br/>   - Start from the head node and iterate through the list using a `while` loop.<br/>   - Access and process each node\'s value with `console.log(node.value)`.<br/>   - Move to the next node using `node = node.next`.<br/><br/>Linked lists are dynamic data structures that allow efficient insertion and deletion of elements, making them useful for implementing stacks, queues, and other abstract data types."},{"id":9,"topic":"Binary Tree General","category":"Data Structures","code":"// TreeNode Definition\\nclass TreeNode {\\n constructor(value = 0, left = null, right = null) {\\n  this.value = value;\\n  this.left = left;\\n  this.right = right;\\n }\\n}\\n// DFS Recursive\\nfunction dfs(node) {\\n if (!node) return; \\n// Base case\\n dfs(node.left); \\n// Traverse left\\n dfs(node.right); \\n// Traverse right\\n}","explanation":"This snippet demonstrates how to define a binary tree node and perform a depth-first search (DFS) traversal recursively:<br/><br/>1. TreeNode Definition: Define a `TreeNode` class with a constructor to initialize `value`, `left`, and `right` properties.<br/>2. DFS Recursive:<br/>   - Implement a `dfs` function that takes a node as input.<br/>   - Use a base case to return if the node is null.<br/>   - Recursively traverse the left and right subtrees.<br/><br/>DFS is a fundamental tree traversal technique used in various algorithms, including searching, pathfinding, and tree-based data structures."},{"id":10,"topic":"Binary Tree BFS","category":"Algorithms","code":"// BFS Level Order\\nlet queue = [root];\\nwhile (queue.length) {\\n let node = queue.shift(); \\n// Dequeue\\n if (node.left) queue.push(node.left); \\n// Enqueue left child\\n if (node.right) queue.push(node.right); \\n// Enqueue right child\\n}","explanation":"This snippet demonstrates how to perform a breadth-first search <br/>(BFS) traversal on a binary tree using a queue:<br/><br/>1. Initialization: Start with the root node in the queue.<br/>2. Iteration:<br/>   - Dequeue a node from the front of the queue.<br/>   - Process the node (e.g., print its value).<br/>   - Enqueue the left and right children of the node if they exist.<br/><br/>BFS is useful for level-order traversal of trees, finding the shortest path in unweighted graphs, and other applications where exploring nodes level by level is beneficial."},{"id":11,"topic":"Binary Search Tree","category":"Data Structures","code":"// Insert in BST\\nfunction insert(root, value) {\\n if (!root) return new TreeNode(value); \\n// Insert new node\\n if (value < root.value) root.left = insert(root.left, value); \\n// Insert in left subtree\\n else root.right = insert(root.right, value); \\n// Insert in right subtree\\n return root;\\n}","explanation":"This snippet demonstrates how to insert a value into a binary search tree (BST) recursively:<br/><br/>1. Base Case: If the root is null, create and return a new `TreeNode` with the given value.<br/>2. Recursive Insertion:<br/>   - If the value is less than the root\'s value, insert it into the left subtree.<br/>   - If the value is greater than or equal to the root\'s value, insert it into the right subtree.<br/>3. Return Root: Return the root node after insertion.<br/><br/>BSTs maintain sorted order, allowing efficient O(log n) average time complexity for insertion, deletion, and search operations."},{"id":12,"topic":"Graph General","category":"Data Structures","code":"// Graph Representation (Adjacency List)\\nlet graph = {};\\ngraph[node1] = [node2]; \\n// Add edge from node1 to node2","explanation":"This snippet demonstrates how to represent a graph using an adjacency list:<br/><br/>1. Initialization: Create an empty object `graph` to represent the adjacency list.<br/>2. Add Edge: Add an edge from `node1` to `node2` by assigning an array containing `node2` to `graph[node1]`.<br/><br/>Adjacency lists are efficient for representing sparse graphs, providing O(1) average time complexity for adding edges and O(V + E) time complexity for traversing the graph, where V is the number of vertices and E is the number of edges."},{"id":13,"topic":"Graph BFS","category":"Algorithms","code":"// BFS\\nlet visited = new Set();\\nlet queue = [start];\\nwhile (queue.length) {\\n let node = queue.shift(); \\n// Dequeue\\n for (let neighbor of graph[node]) {\\n  if (!visited.has(neighbor)) {\\n   visited.add(neighbor); \\n// Mark as visited\\n   queue.push(neighbor); \\n// Enqueue neighbor\\n  }\\n }\\n}","explanation":"This snippet demonstrates how to perform a breadth-first search (BFS) traversal on a graph using a queue and a set to keep track of visited nodes:<br/><br/>1. Initialization: Start with the `start` node in the queue and mark it as visited.<br/>2. Iteration:<br/>   - Dequeue a node from the front of the queue.<br/>   - For each neighbor of the node, if it hasn\'t been visited, mark it as visited and enqueue it.<br/><br/>BFS is useful for finding the shortest path in unweighted graphs, exploring all nodes at the present depth level before moving on to nodes at the next depth level."},{"id":14,"topic":"Trie","category":"Data Structures","code":"// Insert & Search\\nclass TrieNode {\\n constructor() {\\n  this.children = {};\\n  this.isEnd = false;\\n }\\n}\\n\\nclass Trie {\\n constructor() {\\n  this.root = new TrieNode();\\n }\\n\\n insert(word) {\\n  let node = this.root;\\n  for (let char of word) {\\n   if (!node.children[char]) \\n    node.children[char] = new TrieNode(); \\n// Create new node\\n   node = node.children[char]; \\n// Move to child node\\n  }\\n  node.isEnd = true; \\n// Mark end of word\\n }\\n\\n search(word) {\\n  let node = this.root;\\n  for (let char of word) {\\n   if (!node.children[char]) return false; \\n// Character not found\\n   node = node.children[char]; \\n// Move to child node\\n  }\\n  return node.isEnd; \\n// Check if end of word\\n }\\n}","explanation":"This snippet demonstrates how to implement a Trie (prefix tree) with insert and search operations:<br/><br/>1. TrieNode Definition: Define a `TrieNode` class with a constructor to initialize `children` (an object) and `isEnd` (a boolean indicating the end of a word).<br/>2. Trie Class:<br/>   - Insert: Add a word to the Trie by iterating through its characters, creating new nodes as needed, and marking the end of the word.<br/>   - Search: Check if a word exists in the Trie by iterating through its characters and verifying the end of the word.<br/><br/>Tries are efficient for prefix-based searches, providing O(m) time complexity for insert and search operations, where m is the length of the word."},{"id":15,"topic":"Backtracking","category":"Algorithms","code":"// Backtracking Template\\nfunction backtrack(path, choices) {\\n if (valid(path)) result.push([...path]); \\n// Check if path is valid\\n for (let choice of choices) {\\n  path.push(choice); \\n// Make choice\\n  backtrack(path, choices); \\n// Recurse\\n  path.pop(); \\n// Undo choice\\n }\\n}","explanation":"This snippet provides a template for backtracking algorithms:<br/><br/>1. Base Case: Check if the current path is valid and add it to the result.<br/>2. Recursive Case:<br/>   - Iterate through the available choices.<br/>   - Make a choice by adding it to the path.<br/>   - Recurse with the updated path and choices.<br/>   - Undo the choice by removing it from the path.<br/><br/>Backtracking is useful for solving combinatorial problems, such as generating permutations, combinations, and solving puzzles like Sudoku."},{"id":16,"topic":"Divide & Conquer","category":"Algorithms","code":"// Template\\nfunction divideAndConquer(arr) {\\n if (arr.length <= 1) return arr; \\n// Base case\\n let mid = Math.floor(arr.length / 2); \\n// Find midpoint\\n let left = divideAndConquer(arr.slice(0, mid)); \\n// Divide left\\n let right = divideAndConquer(arr.slice(mid)); \\n// Divide right\\n return merge(left, right); \\n// Conquer (merge)\\n}","explanation":"This snippet provides a template for divide and conquer algorithms:<br/><br/>1. Base Case: If the array has one or zero elements, return it as it is already sorted.<br/>2. Divide: Split the array into two halves at the midpoint.<br/>3. Conquer: Recursively apply the divide and conquer approach to both halves.<br/>4. Merge: Combine the sorted halves to produce the final sorted array.<br/><br/>Divide and conquer is a powerful technique used in algorithms like merge sort and quicksort, providing efficient solutions to complex problems by breaking them down into smaller, more manageable subproblems."},{"id":17,"topic":"Kadane\'s Algorithm","category":"Algorithms","code":"// Max Subarray Sum\\nlet maxSum = -Infinity, currSum = 0;\\nfor (let num of arr) {\\n currSum = Math.max(num, currSum + num); \\n// Update current sum\\n maxSum = Math.max(maxSum, currSum); \\n// Update max sum\\n}","explanation":"This snippet demonstrates Kadane\'s Algorithm to find the maximum sum of a contiguous subarray in an array:<br/><br/>1. Initialization: Set `maxSum` to negative infinity and `currSum` to 0.<br/>2. Iteration: Iterate through each element in the array:<br/>   - Update `currSum` to be the maximum of the current element or the sum of `currSum` and the current element.<br/>   - Update `maxSum` to be the maximum of `maxSum` and `currSum`.<br/>3. Result: `maxSum` will contain the maximum sum of any contiguous subarray.<br/><br/>Kadane\'s Algorithm is efficient with a time complexity of O(n), making it suitable for large arrays."},{"id":18,"topic":"Binary Search","category":"Algorithms","code":"// Template\\nlet left = 0, right = arr.length - 1;\\nwhile (left <= right) {\\n let mid = Math.floor((left + right) / 2);\\n if (arr[mid] === target) return mid; \\n// Target found\\n else if (arr[mid] < target) left = mid + 1; \\n// Search right half\\n else right = mid - 1; \\n// Search left half\\n}","explanation":"This snippet provides a template for binary search, which is used to find a target value in a sorted array:<br/><br/>1. Initialization: Set `left` to 0 and `right` to the last index of the array.<br/>2. Iteration: While `left` is less than or equal to `right`:<br/>   - Calculate the midpoint `mid`.<br/>   - If the element at `mid` is the target, return `mid`.<br/>   - If the element at `mid` is less than the target, move `left` to `mid + 1`.<br/>   - If the element at `mid` is greater than the target, move `right` to `mid - 1`.<br/>3. Result: If the target is not found, return -1.<br/><br/>Binary search is efficient with a time complexity of O(log n), making it ideal for searching in large sorted arrays."},{"id":19,"topic":"Heap","category":"Data Structures","code":"// Min-Heap\\nclass MinHeap {\\n constructor() {\\n  this.heap = [];\\n }\\n push(value) {\\n  this.heap.push(value); \\n// Add value\\n  this.heap.sort((a, b) => a - b); \\n// Maintain heap property\\n }\\n pop() {\\n  return this.heap.shift(); \\n// Remove min value\\n }\\n}","explanation":"This snippet demonstrates a simple implementation of a min-heap, where the smallest element is always at the root:<br/><br/>1. Initialization: Create a `MinHeap` class with a constructor that initializes an empty array `heap`.<br/>2. Push: Add a value to the heap and sort the array to maintain the heap property.<br/>3. Pop: Remove and return the smallest value (root) from the heap.<br/><br/>Min-heaps are useful for efficiently finding and removing the smallest element, with applications in priority queues and algorithms like Dijkstra\'s shortest path."},{"id":20,"topic":"Bit Manipulation","category":"Algorithms","code":"// Basic Bitwise Operations\\nx & y; \\n// AND\\nx | y; \\n// OR\\nx ^ y; \\n// XOR\\nx << 1; \\n// Left Shift\\nx >> 1; \\n// Right Shift\\n~x; \\n// NOT","explanation":"This snippet demonstrates basic bitwise operations:<br/><br/>1. AND: `x & y` performs a bitwise AND operation.<br/>2. OR: `x | y` performs a bitwise OR operation.<br/>3. XOR: `x ^ y` performs a bitwise XOR operation.<br/>4. Left Shift: `x << 1` shifts the bits of `x` to the left by 1 position.<br/>5. Right Shift: `x >> 1` shifts the bits of `x` to the right by 1 position.<br/>6. NOT: `~x` performs a bitwise NOT operation.<br/><br/>Bitwise operations are fundamental in low-level programming, providing efficient ways to manipulate individual bits for tasks like setting, clearing, and toggling bits."},{"id":21,"topic":"Math","category":"Algorithms","code":"// Factorial\\nfunction factorial(n) {\\n return n <= 1 ? 1 : n * factorial(n - 1); \\n// Recursive factorial\\n}","explanation":"This snippet demonstrates how to calculate the factorial of a number recursively:<br/><br/>1. Base Case: If `n` is less than or equal to 1, return 1.<br/>2. Recursive Case: Multiply `n` by the factorial of `n - 1`.<br/><br/>Factorials are used in various mathematical computations, including permutations, combinations, and probability calculations. The recursive approach is straightforward and easy to understand, but for large values of `n`, an iterative approach or memoization can be more efficient."},{"id":22,"topic":"1D DP","category":"Algorithms","code":"// Fibonacci\\nlet dp = Array(n + 1).fill(0);\\ndp[1] = 1;\\nfor (let i = 2; i <= n; i++) {\\n dp[i] = dp[i - 1] + dp[i - 2]; \\n// Fibonacci relation\\n}","explanation":"This snippet demonstrates how to use dynamic programming to calculate the Fibonacci sequence:<br/><br/>1. Initialization: Create an array `dp` of size `n + 1` filled with zeros. Set `dp[1]` to 1.<br/>2. Iteration: Iterate from 2 to `n`, updating each element in the array as the sum of the two preceding elements (`dp[i - 1]` and `dp[i - 2]`).<br/>3. Result: The value at `dp[n]` will be the nth Fibonacci number.<br/><br/>Dynamic programming optimizes the calculation by storing intermediate results, reducing the time complexity to O(n) compared to the exponential time complexity of the naive recursive approach."},{"id":23,"topic":"Multidimensional DP","category":"Algorithms","code":"// Knapsack Problem\\nlet dp = Array(rows).fill().map(\\n() => Array(cols).fill(0));\\nfor (let i = 1; i < rows; i++) {\\n for (let w = 1; w < cols; w++) {\\n  if (items[i - 1].weight <= w) {\\n   dp[i][w] = Math.max(dp[i - 1][w],\\n    items[i - 1].value + \\n   dp[i - 1][w - items[i - 1].weight]); \\n// Include item\\n  } else {\\n   dp[i][w] = dp[i - 1][w]; \\n// Exclude item\\n  }\\n }\\n}","explanation":"This snippet demonstrates how to solve the knapsack problem using multidimensional dynamic programming:<br/><br/>1. Initialization: Create a 2D array `dp` with dimensions `rows` and `cols`, filled with zeros.<br/>2. Iteration: Iterate through each item and weight capacity:<br/>   - If the item\'s weight is less than or equal to the current capacity, update `dp[i][w]` to be the maximum of excluding the item (`dp[i - 1][w]`) or including the item (`items[i - 1].value + dp[i - 1][w - items[i - 1].weight]`).<br/>   - If the item\'s weight is greater than the current capacity, set `dp[i][w]` to `dp[i - 1][w]`.<br/>3. Result: The value at `dp[rows - 1][cols - 1]` will be the maximum value that can be obtained with the given items and weight capacity.<br/><br/>The knapsack problem is a classic optimization problem, and dynamic programming provides an efficient solution with a time complexity of O(n * W), where `n` is the number of items and `W` is the weight capacity."},{"id":24,"topic":"Greedy Algorithms","category":"Algorithms","code":"// Activity Selection\\nactivities.sort((a, b) => a.end - b.end); \\n// Sort by end time\\nlet lastEnd = 0, selected = [];\\nfor (let activity of activities) {\\n if (activity.start >= lastEnd) {\\n  selected.push(activity); \\n// Select activity\\n  lastEnd = activity.end; \\n// Update last end time\\n }\\n}","explanation":"This snippet demonstrates the greedy algorithm for the activity selection problem, where activities are selected based on their end times to maximize the number of non-overlapping activities:<br/><br/>1. Sort Activities: Sort the activities by their end times.<br/>2. Selection Process: Initialize `lastEnd` to 0 and an empty array `selected`.<br/>   - Iterate through the sorted activities.<br/>   - If an activity\'s start time is greater than or equal to `lastEnd`, select the activity and update `lastEnd` to the activity\'s end time.<br/>3. Result: The `selected` array will contain the maximum number of non-overlapping activities.<br/><br/>The greedy approach ensures that the earliest finishing activities are selected first, leading to an optimal solution with a time complexity of O(n log n) due to sorting."}]'),s=JSON.parse('[{"id":1,"topic":"Merge Sorted Array","code":"// Define a function to merge two sorted integer arrays\\nvar merge = function(nums1, m, nums2, n) {\\n    // Initialize pointers for the last elements of nums1 and nums2\\n    let i = m - 1; // Pointer for the last element in the first part of nums1\\n    let j = n - 1; // Pointer for the last element in nums2\\n    let k = m + n - 1; // Pointer for the last position in nums1 (the merged array)\\n\\n    // While there are still elements to merge from nums2\\n    while (j >= 0) {\\n        // If there are remaining elements in nums1 and the current element in nums1 is greater than in nums2\\n        if (i >= 0 && nums1[i] > nums2[j]) {\\n            nums1[k] = nums1[i]; // Place the element from nums1 into the correct position in nums1\\n            i--; // Move the pointer in nums1 left\\n        } else {\\n            // If nums2\'s current element is greater or nums1 is exhausted\\n            nums1[k] = nums2[j]; // Place the element from nums2 into nums1\\n            j--; // Move the pointer in nums2 left\\n        }\\n        // Move the pointer for the merged position left\\n        k--;\\n    }\\n    // No need to return anything since we modify nums1 in place\\n};\\n","explanation":"1. Function Purpose: The merge function is designed to combine two sorted arrays, nums1 and nums2, into a single sorted array stored in nums1.<br/>2. Input Specification: <br/>   - nums1 is an array of integers that contains m elements followed by n zeros. <br/>   - nums2 is an array of integers containing n elements.<br/>   - m represents the number of actual elements in nums1.<br/>   - n represents the number of elements in nums2.<br/>3. Output Specification: <br/>   - The merged sorted array is stored in nums1.<br/>   - No return value is necessary as the result modifies nums1 in place.<br/>4. Example Walkthrough:<br/>   - Example 1: For the input nums1 = [1, 2, 3, 0, 0, 0], m = 3, nums2 = [2, 5, 6], n = 3:<br/>     - Start merging from the end of both arrays, comparing elements and placing them in the correct position.<br/>     - Final output in nums1 will be [1, 2, 2, 3, 5, 6].<br/>   - Example 2: For the input nums1 = [1], m = 1, nums2 = [], n = 0:<br/>     - Since nums2 is empty, nums1 remains [1].<br/>   - Example 3: For the input nums1 = [0], m = 0, nums2 = [1], n = 1:<br/>     - All elements from nums2 are placed in nums1, resulting in [1].<br/>5. Constraints:<br/>   - The function handles constraints ensuring both arrays are of appropriate lengths, with -10^9 <= nums1[i], nums2[j] <= 10^9.<br/>   - The overall length of the combined arrays does not exceed 200 elements, ensuring efficient performance.<br/>6. In-Place Modification: <br/>   - This approach modifies nums1 directly, utilizing its extra space to accommodate the merged result without needing additional arrays, thus achieving O(1) extra space complexity.","category":"Array / String"},{"id":2,"topic":"Remove Element","code":"var removeElement = function(nums, val) {\\n    // Initialize k to track the position for the next element that isn\u2019t equal to val.\\n    let k = 0;\\n\\n    // Loop through each element in the nums array\\n    for (let i = 0; i < nums.length; i++) {\\n        // Check if the current element nums[i] is not equal to val\\n        if (nums[i] !== val) {\\n            // Place the current element at index k, then increment k\\n            nums[k] = nums[i];\\n            k++;\\n        }\\n    }\\n    \\n    // Return k, which now represents the number of elements not equal to val\\n    return k;\\n};\\n","explanation":"Explanation:<br/> - Two-Pointer Approach: We use two pointers, one iterating through the array (`i`)<br/>   and one (`k`) to store the position of the next non-val element.<br/> - Place Non-Val Elements: If an element isn\u2019t equal to `val`, we place it at the<br/>   current position of `k` and then increment `k`.<br/> - Final Result: By the end of the loop, the first `k` elements in `nums` will contain<br/>   all elements except `val`. `k` is returned, representing the count of elements in `nums`<br/>   that are not equal to `val`.<br/> ### Example Walkthroughs:<br/> 1. Example 1:<br/>    - Input: `nums = [3, 2, 2, 3]`, `val = 3`<br/>    - Output: `2`, `nums = [2, 2, _, _]`<br/>    - Explanation: After removing all occurrences of `val = 3`, the array has two elements<br/>      `[2, 2]` and `k = 2`.<br/> <br/> 2. Example 2:<br/>    - Input: `nums = [0, 1, 2, 2, 3, 0, 4, 2]`, `val = 2`<br/>    - Output: `5`, `nums = [0, 1, 4, 0, 3, _, _, _]`<br/>    - Explanation: After removing all occurrences of `val = 2`, the array has five elements<br/>      `[0, 1, 4, 0, 3]` and `k = 5`.<br/> <br/> ### Complexity:<br/> - Time Complexity: `O(n)`, where `n` is the length of `nums`, as we make a single pass through the array.<br/> - Space Complexity: `O(1)`, as the operation is performed in-place with no additional storage.","category":"Array / String"},{"id":3,"topic":"Remove Duplicates from Sorted Array","code":"var removeDuplicates = function(nums) {\\n    // Log the initial state of the input array\\n    console.log(`Initial nums: ${nums}`);\\n    // Log the length of the input array\\n    console.log(`nums.length: ${nums.length}`);\\n\\n    // Check if the input array is empty\\n    if (nums.length === 0) {\\n        // If empty, log a message and return 0 as there are no unique elements\\n        console.log(\\"Input array is empty.\\");\\n        return 0;\\n    }\\n\\n    // Initialize a pointer `k` to track the position of the last unique element\\n    // Since the first element is always unique, we start with k = 1\\n    let k = 1; \\n\\n    // Start iterating through the array from the second element (index 1)\\n    for (let i = 1; i < nums.length; i++) {\\n        // Log the current element being checked and the previous unique element\\n        console.log(`Checking nums[${i}]: ${nums[i]} against nums[${i - 1}]: ${nums[i - 1]}`);\\n        \\n        // Compare the current element with the last unique element\\n        if (nums[i] !== nums[i - 1]) {\\n            // If they are different, we found a new unique element\\n            console.log(`Found new unique element: ${nums[i]}`);\\n            // Assign the current unique element to the position k in the array\\n            nums[k] = nums[i]; \\n            // Increment k to point to the next position for any future unique elements\\n            k++; \\n            // Log the updated state of the array containing unique elements so far\\n            console.log(`Updated nums: ${nums.slice(0, k)} (unique count: ${k})`);\\n        } else {\\n            // If they are the same, it\'s a duplicate; log that a duplicate was found\\n            console.log(`Duplicate element found: ${nums[i]}`);\\n        }\\n    }\\n\\n    // Log the final count of unique elements found\\n    console.log(`Final unique count: ${k}`);\\n    // Log the modified array which now contains only the unique elements in the first k positions\\n    console.log(`Final modified nums: ${nums.slice(0, k)} (remaining elements are not important)`);\\n    \\n    // Return the count of unique elements\\n    return k;\\n};\\n","explanation":"Explanation of the Code Logic:<br/><br/>1. Function Declaration: The removeDuplicates function takes an array nums as input and is designed to modify it in place to remove duplicates.<br/><br/>2. Initial Checks: It first logs the input array and its length. If the array is empty, it returns 0, indicating there are no unique elements.<br/><br/>3. Pointer Initialization: The variable `k` is initialized to 1 because the first element is always considered unique.<br/><br/>4. Iterative Comparison: A for loop starts at index 1 and iterates through the array:<br/>   - It compares the current element (nums[i]) with the previous element (nums[i - 1]).<br/>   - If they are different, it identifies the current element as unique, assigns it to nums[k], and increments k.<br/>   - If they are the same, it logs that a duplicate has been found.<br/>5. Final Output: After processing all elements, it logs the count of unique elements and the modified array, which contains only the unique elements up to index k.","category":"Array / String"},{"id":4,"topic":"Remove Duplicates from Sorted Array II","code":"var removeDuplicates = function(nums) {\\n    console.log(\\"Initial array:\\", nums);\\n    // Initialize a pointer \'k\' to keep track of the position where the next allowable element should be placed.\\n    let k = 0;\\n\\n    // Loop through each element in the input array \'nums\' using the index \'i\'.\\n    for (let i = 0; i < nums.length; i++) {\\n        console.log(`Current index i = ${i}, value nums[i] = ${nums[i]}`);\\n\\n        // Check the conditions to decide if nums[i] can be added.\\n        if (k < 2 || nums[i] !== nums[k - 2]) {\\n            console.log(`Adding nums[i] = ${nums[i]} at index k = ${k}`);\\n            \\n            // Place the current element \'nums[i]\' at the position \'k\' in the array.\\n            nums[k] = nums[i];\\n            k++;  // Increment \'k\' for the next valid placement.\\n            \\n            console.log(`Updated array: ${nums.slice(0, k)} (length = ${k})`);\\n        } else {\\n            console.log(`Skipping nums[i] = ${nums[i]} to prevent more than two occurrences`);\\n        }\\n    }\\n\\n    // Final state of the modified array.\\n    console.log(\\"Final modified array:\\", nums.slice(0, k));\\n    console.log(\\"Final length of modified array:\\", k);\\n\\n    return k;\\n};\\n","explanation":"Detailed Explanation Summary:<br/>1. \'k\' is used as both a pointer and a counter:<br/>   - It keeps track of the position in \'nums\' where the next valid element should be placed.<br/>   - By the end, \'k\' will represent the length of the modified array.<br/>2. As we iterate through each element \'nums[i]\', we use two conditions to decide if it should be added to the result:<br/>   - If \'k < 2\', we are in the initial phase of the result array where any element is allowed.<br/>   - If \'k >= 2\', we add \'nums[i]\' only if it\u2019s different from \'nums[k - 2]\'.<br/>3. The check \'nums[i] !== nums[k - 2]\' ensures that each unique element appears at most twice, by comparing with the element two places back.<br/>4. The function finally returns \'k\', the length of the modified array, where each unique element appears at most twice.<br/>   - Elements from \'nums[0]\' up to \'nums[k - 1]\' represent the final modified array.","category":"Array / String"},{"id":5,"topic":"Majority Element","code":"// Find majority element\\nconst majorityElement = function(nums) {\\n let count = 0; // Tracks the current \\"weight\\" of the candidate element.\\n let candidate = null; // Stores the potential majority element.\\n\\n // Phase 1: Find a candidate for the majority element\\n for (let i = 0; i < nums.length; i++) {\\n if (count === 0) { // If count reaches zero, we choose a new candidate.\\n candidate = nums[i];\\n }\\n // Increment or decrement the count based on whether the current number matches the candidate.\\n count += (nums[i] === candidate) ? 1 : -1;\\n }\\n\\n // At this point, `candidate` is the element that could potentially be the majority element.\\n\\n // Phase 2: Verify if the candidate is indeed the majority element\\n count = 0; // Reset count to verify the candidate.\\n for (let i = 0; i < nums.length; i++) {\\n if (nums[i] === candidate) { // Count occurrences of the candidate in the array.\\n count++;\\n }\\n }\\n\\n // Check if the candidate occurs more than \u230an/2\u230b times.\\n if (count > Math.floor(nums.length / 2)) {\\n return candidate; // Candidate is the majority element.\\n }\\n // Throw an error if no majority element is found.\\n // (Should not happen if the input meets the problem\'s guarantee.)\\n throw new Error(\\"No majority element found\\");\\n};\\n\\nconsole.log(majorityElement([3, 2, 3])); // Output: 3\\n// Explanation: The majority element is 3, as it appears twice (more than 3/2 = 1.5 times).\\n\\nconsole.log(majorityElement([2, 2, 1, 1, 1, 2, 2])); // Output: 2\\n// Explanation: The majority element is 2, as it appears four times (more than 7/2 = 3.5 times).\\n","explanation":"Explanation:<br/><br/>1. The algorithm is based on the Boyer-Moore Voting Algorithm.<br/>2. Phase 1:<br/>   - Iterates through the array to identify a potential majority element (`candidate`).<br/>   - Keeps a `count` which increases when the current number matches `candidate` and decreases otherwise.<br/>   - If `count` becomes zero, a new `candidate` is selected.<br/>   - By the end of this phase, `candidate` is guaranteed to be the majority element if one exists.<br/>3. Phase 2:<br/>   - Verifies if the `candidate` appears more than \u230an/2\u230b times in the array.<br/>   - If yes, it returns the candidate. Otherwise, it throws an error.<br/>4. Time complexity: O(n) - Linear, as the array is traversed twice.<br/>5. Space complexity: O(1) - Constant, as no additional data structures are used.","category":"Array / String"},{"id":6,"topic":"Rotate Array","code":"const rotate = function(nums, k) {\\n    // Display the original array and k value to track changes.\\n    console.log(\\"Original array:\\", nums);\\n    console.log(\\"Original k:\\", k);\\n\\n    // Adjust k if it\'s greater than the array length:\\n    // k % nums.length gives the effective number of rotations needed, \\n    // since rotating by the length of the array results in the same array.\\n    k = k % nums.length;\\n\\n    console.log(\\"Rotation steps (k):\\", k); // Show adjusted k value after modulo operation\\n    \\n    // Step 1: Reverse the entire array to start the rotation process.\\n    // This brings the elements to the \\"right-rotated\\" positions but in reverse order.\\n    reverse(nums, 0, nums.length - 1);\\n    console.log(\\"After reversing the entire array:\\", nums);\\n\\n    // Step 2: Reverse the first `k` elements to place the rotated part in the correct order.\\n    reverse(nums, 0, k - 1);\\n    console.log(`After reversing the first ${k} elements:`, nums);\\n\\n    // Step 3: Reverse the elements from `k` to the end of the array.\\n    // This step restores the remaining elements to their original order following the rotated segment.\\n    reverse(nums, k, nums.length - 1);\\n    console.log(`After reversing the elements from index ${k} to end:`, nums);\\n};\\n\\nfunction reverse(nums, start, end) {\\n    while (start < end) {\\n        [nums[start], nums[end]] = [nums[end], nums[start]];\\n        start++;\\n        end--;\\n    }\\n}\\n","explanation":"Explanation of Key Parts:<br/><br/>1. Modulo Operation:<br/>   - `k = k % nums.length` reduces the rotation count by removing unnecessary full-length rotations. For example, rotating an array of length 7 by 7 or any multiple results in no change.<br/><br/>2. Reverse Function:<br/>   - `reverse` swaps elements between the `start` and `end` indices, iterating inward until `start` meets or exceeds `end`. This in-place swap operation reverses the specified segment of the array.<br/><br/>3. Three-Step Array Manipulation:<br/>   - Step 1: Reverse the entire array, setting up the array for a \\"right rotation\\" by bringing the last `k` elements to the beginning (in reverse order).<br/>   - Step 2: Reverse the first `k` elements, putting the rotated segment in its final, correct order.<br/>   - Step 3: Reverse the remaining elements to restore the rest of the array to its original sequence after the rotated portion.","category":"Array / String"},{"id":7,"topic":"Best Time to Buy and Sell Stock","code":"// Find the maximum profit\\nvar maxProfit = function(prices) {\\n let minPrice = Infinity; // Initialize the minimum price as Infinity. This will be used to find the lowest price seen so far.\\n let maxProfit = 0; // Initialize the maximum profit as 0. This will store the highest profit we can achieve.\\n\\n // Iterate through each price in the array\\n for (let price of prices) {\\n if (price < minPrice) {\\n minPrice = price; // If the current price is lower than the minimum price seen so far, update minPrice.\\n } else {\\n // If the current price is not lower than minPrice, calculate the potential profit\\n // by subtracting minPrice from the current price.\\n maxProfit = Math.max(maxProfit, price - minPrice);\\n // Update maxProfit only if the calculated profit is greater than the current maxProfit.\\n }\\n }\\n\\n return maxProfit; // After iterating through the array, return the maximum profit found.\\n};\\n\\nlet prices1 = [7, 1, 5, 3, 6, 4];\\nconsole.log(maxProfit(prices1)); // Output: 5\\n// Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6). Profit = 6 - 1 = 5.\\n\\nlet prices2 = [7, 6, 4, 3, 1];\\nconsole.log(maxProfit(prices2)); // Output: 0\\n// Explanation: No transactions are possible since prices keep decreasing. Profit = 0.\\n","explanation":"Explanation:<br/>1. We iterate through the `prices` array to simulate buying and selling the stock.<br/>2. `minPrice` keeps track of the lowest price seen so far, ensuring that we always \\"buy\\" at the lowest possible price.<br/>3. For each price in the array:<br/>   - If it is lower than `minPrice`, update `minPrice` (simulate finding a better day to buy).<br/>   - Otherwise, calculate the profit if we \\"sell\\" on the current day. Compare this profit with the current `maxProfit` and update it if the new profit is higher.<br/>4. If no profit is possible (prices keep decreasing), `maxProfit` remains 0.<br/>5. The algorithm ensures we only traverse the array once, making it efficient with O(n) time complexity.","category":"Array / String"},{"id":8,"topic":"Best Time to Buy and Sell Stock II","code":"// Find the maximum profit with multiple transactions\\nvar maxProfit = function(prices) {\\n let maxProfit = 0;\\n\\n for (let i = 1; i < prices.length; i++) {\\n // If the price today is higher than the price yesterday,\\n // it means we can make a profit by selling the stock.\\n if (prices[i] > prices[i - 1]) {\\n // Add the difference between today\'s price and yesterday\'s price to maxProfit\\n maxProfit += prices[i] - prices[i - 1];\\n }\\n }\\n\\n // Return the total profit achieved from all profitable transactions\\n return maxProfit;\\n};\\n\\n// Example 1:\\nconsole.log(maxProfit([7,1,5,3,6,4])); // Output: 7\\n// Explanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5 - 1 = 4.\\n// Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6 - 3 = 3.\\n// Total profit = 4 + 3 = 7.\\n\\n// Example 2:\\nconsole.log(maxProfit([1,2,3,4,5])); // Output: 4\\n// Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5 - 1 = 4.\\n// Total profit = 4.\\n\\n// Example 3:\\nconsole.log(maxProfit([7,6,4,3,1])); // Output: 0\\n// Explanation: No profitable opportunities since prices keep decreasing.\\n// Total profit = 0.\\n","explanation":"Explanation:<br/><br/>- We are given an array \'prices\' where each element represents the price of a stock on a given day.<br/>- The goal is to maximize profit by buying and selling the stock at the right times.<br/>- The key observation is that you can make a profit if the stock price increases from one day to the next.<br/>- On each day, if the price is higher than the previous day\'s price, we \\"buy\\" on the previous day and \\"sell\\" on the current day. The profit from this transaction is the difference between the two prices.<br/>- We repeat this for all days, adding the profits from each transaction, to get the total maximum profit.<br/>- The approach runs in linear time O(n), where n is the number of days in the \'prices\' array.","category":"Array / String"},{"id":9,"topic":"Jump Game","code":"// Determine if you can reach the last index\\nvar canJump = function(nums) {\\n // Initialize the farthest index that can be reached.\\n let farthest = 0;\\n\\n // Iterate through the array.\\n for (let i = 0; i < nums.length; i++) {\\n // If the current index is greater than the farthest index reachable, return false.\\n if (i > farthest) {\\n return false;\\n }\\n\\n // Update the farthest reachable index.\\n farthest = Math.max(farthest, i + nums[i]);\\n\\n // If we can reach or exceed the last index, return true.\\n if (farthest >= nums.length - 1) {\\n return true;\\n }\\n }\\n\\n // If the loop completes, we return true.\\n return true;\\n};\\n\\n// Example usage:\\nconsole.log(canJump([2, 3, 1, 1, 4])); // Output: true\\nconsole.log(canJump([3, 2, 1, 0, 4])); // Output: false\\n","explanation":"The goal is to determine whether we can jump from the first index to the last index in the array. Each element in the array represents the maximum jump length from that position.<br/><br/>Key Idea:<br/>- Use a greedy approach to track the farthest index we can reach (`farthest`) as we iterate through the array.<br/>- At each step, calculate how far we can jump from the current position and update `farthest` with the maximum possible value.<br/>- If `farthest` becomes greater than or equal to the last index (`nums.length - 1`), return `true`. If the current index (`i`) exceeds `farthest`, return `false` because it\'s not reachable.<br/><br/>### Why `Math.max(farthest, i + nums[i])` is used:<br/><br/>- `i + nums[i]`:<br/> - Represents the farthest index you can jump to from the current position `i`.<br/> - For example:<br/> - At `i = 2` with `nums[2] = 3`, you can jump to index `2 + 3 = 5`.<br/> - This is the maximum jump length starting from the current position.<br/><br/>- `Math.max(farthest, i + nums[i])`:<br/> - Ensures we always keep track of the farthest point reachable so far as we iterate.<br/> - For example:<br/> - If `farthest = 4` and at `i = 2` you can reach index 5 (`i + nums[i] = 5`), update `farthest` to 5.<br/> - However, if at `i = 3` you can only reach index 4 (`i + nums[i] = 4`), `farthest` remains 5 because it\u2019s the maximum of `farthest` and `i + nums[i]`.<br/><br/>This allows us to dynamically track the farthest position we can reach without needing additional checks or backtracking.<br/><br/>### Steps in the Algorithm:<br/>1. Initialize `farthest`:<br/> - Start with `farthest = 0`, representing the maximum index reachable initially.<br/><br/>2. Iterate Through the Array:<br/> - For each index `i`:<br/> - If the current index `i` exceeds `farthest`, return `false` because we cannot proceed further.<br/> - Otherwise, calculate the farthest position reachable so far with `farthest = Math.max(farthest, i + nums[i])`.<br/><br/>3. Check for Success:<br/> - If at any point `farthest >= nums.length - 1`, return `true` because we can reach the last index.<br/><br/>4. Complete Iteration:<br/> - If the loop completes without returning `true` or `false`, return `true` as the last index is reachable.<br/><br/>Examples:<br/><br/>Example 1:<br/>Input: `nums = [2, 3, 1, 1, 4]`<br/>1. Start: `farthest = 0`<br/>2. At index 0: `farthest = Math.max(0, 0 + 2) = 2`.<br/>3. At index 1: `farthest = Math.max(2, 1 + 3) = 4`.<br/>4. Since `farthest (4) >= nums.length - 1 (4)`, return `true`.<br/><br/>Example 2:<br/>Input: `nums = [3, 2, 1, 0, 4]`<br/>1. Start: `farthest = 0`<br/>2. At index 0: `farthest = Math.max(0, 0 + 3) = 3`.<br/>3. At index 1: `farthest = Math.max(3, 1 + 2) = 3`.<br/>4. At index 2: `farthest = Math.max(3, 2 + 1) = 3`.<br/>5. At index 3: `farthest = Math.max(3, 3 + 0) = 3`.<br/>6. At index 4: `i (4) > farthest (3)`, return `false`.<br/><br/>Why `Math.max` is Crucial:<br/>- Without it, we would only consider the current jump (`i + nums[i]`) without accounting for previously calculated maximum jumps.<br/>- This would lead to incorrect results, as we\u2019d lose track of the longest reachable index from earlier iterations.<br/><br/>Complexity:<br/><br/>Time Complexity: O(n)<br/>- We traverse the array once, making the algorithm linear in time.<br/><br/>Space Complexity: O(1)<br/>- No additional space is used beyond the variables for tracking indices.","category":"Array / String"},{"id":10,"topic":"Jump Game II","code":"// Find the minimum number of jumps to reach the last index\\nvar jump = function(nums) {\\n // If the array has only one element, no jumps are needed.\\n if (nums.length === 1) return 0;\\n\\n // Initialize variables to track the current range of reachable indices and jumps.\\n let jumps = 0;\\n let currentEnd = 0; // The farthest index we can reach within the current jump.\\n let farthest = 0; // The farthest index we can reach with the next jump.\\n\\n // Iterate through the array up to the second-to-last index (since reaching the last index ends the process).\\n for (let i = 0; i < nums.length - 1; i++) {\\n // Update the farthest reachable index. \\n // Math.max returns the larger of the two numbers x and y\\n farthest = Math.max(farthest, i + nums[i]); // greedy part of the algorithm\\n\\n // If we reach the end of the current range (currentEnd), increment the jump counter.\\n if (i === currentEnd) {\\n jumps++;\\n currentEnd = farthest;\\n\\n // If the farthest index covers the last index, we can exit early.\\n if (currentEnd >= nums.length - 1) break;\\n }\\n }\\n\\n return jumps;\\n};\\n\\n\\nconsole.log(jump([2, 3, 1, 1, 4])); // expected output 2\\nconsole.log(jump([2, 3, 0, 1, 4])); // expected output 2\\n","explanation":"This problem can be solved using a greedy approach to minimize the number of jumps.<br/><br/>Key Concepts:<br/>1. Tracking the Current Range:<br/>   - We maintain a variable `currentEnd` to track the range of indices reachable with the current jump.<br/>   - If we reach `currentEnd`, we increment the jump counter and update `currentEnd` to the `farthest` index reachable.<br/><br/>2. Farthest Reachable Index:<br/>   - At each step, we calculate the farthest index we can jump to from the current position using `Math.max(farthest, i + nums[i])`.<br/><br/>3. Stopping Early:<br/>   - Once `currentEnd` (the range of indices reachable with the current jump) reaches or exceeds the last index, we can stop.<br/><br/>Steps in the Algorithm:<br/>1. Edge Case:<br/>   - If `nums.length === 1`, no jumps are needed (`return 0`).<br/><br/>2. Initialize Variables:<br/>   - `jumps` starts at 0 to count the number of jumps.<br/>   - `currentEnd` starts at 0 to represent the range of indices reachable with the current jump.<br/>   - `farthest` starts at 0 to calculate the farthest reachable index in the next jump.<br/><br/>3. Iterate Through the Array:<br/>   - For each index `i` up to `nums.length - 2`:<br/>     - Update `farthest` to the maximum of the current `farthest` and `i + nums[i]`.<br/>     - If `i === currentEnd`:<br/>       - Increment `jumps` because the current range is exhausted.<br/>       - Update `currentEnd` to `farthest`.<br/><br/>4. Return Jumps:<br/>   - When the loop completes, `jumps` contains the minimum number of jumps needed.<br/><br/>Examples:<br/><br/>Example 1:<br/>Input: `nums = [2, 3, 1, 1, 4]`<br/>1. Start: `jumps = 0, currentEnd = 0, farthest = 0`<br/>2. At index 0: `farthest = max(0, 0 + 2) = 2`.<br/>   - `i === currentEnd`: Increment `jumps` to 1, update `currentEnd = 2`.<br/>3. At index 1: `farthest = max(2, 1 + 3) = 4`.<br/>   - `i === currentEnd`: Increment `jumps` to 2, update `currentEnd = 4`.<br/>   - Since `currentEnd >= nums.length - 1`, stop early.<br/>Output: `2`<br/><br/>Example 2:<br/>Input: `nums = [2, 3, 0, 1, 4]`<br/>1. Start: `jumps = 0, currentEnd = 0, farthest = 0`<br/>2. At index 0: `farthest = max(0, 0 + 2) = 2`.<br/>   - `i === currentEnd`: Increment `jumps` to 1, update `currentEnd = 2`.<br/>3. At index 1: `farthest = max(2, 1 + 3) = 4`.<br/>   - `i === currentEnd`: Increment `jumps` to 2, update `currentEnd = 4`.<br/>   - Since `currentEnd >= nums.length - 1`, stop early.<br/>Output: `2`<br/><br/>Complexity:<br/><br/>Time Complexity: O(n)<br/>- We iterate through the array once.<br/><br/>Space Complexity: O(1)<br/>- Only a few variables are used for tracking indices.","category":"Array / String"},{"id":11,"topic":"H-Index","code":"// Calculate H-Index\\nvar hIndex = function(citations) {\\n    // Sort the citations array in descending order to arrange papers from most to least cited.\\n    citations.sort((a, b) => b - a);\\n    \\n    let h = 0; // Initialize h-index to 0. This will hold the highest possible h-index found.\\n    \\n    // Iterate through the sorted citations array to determine the h-index.\\n    for (let i = 0; i < citations.length; i++) {\\n        // Check if the current paper\'s citations are greater than or equal to the index+1 (papers with >= i+1 citations).\\n        if (citations[i] >= i + 1) {\\n            h = i + 1; // Update the h-index to reflect that we have at least (i+1) papers with >= (i+1) citations.\\n        } else {\\n            break; // If we find a paper with fewer than (i+1) citations, we can stop as the remaining papers will have even fewer.\\n        }\\n    }\\n    \\n    return h; // Return the computed h-index.\\n};\\n\\n// Example usage:\\nconsole.log(hIndex([3, 0, 6, 1, 5])); // Output: 3\\nconsole.log(hIndex([1, 3, 1]));       // Output: 1\\n","explanation":"1. Sorting the citations array:<br/>   - We begin by sorting the citations in descending order to easily compare papers with high citations first.<br/>   - Example: Given citations = [3, 0, 6, 1, 5], after sorting, it becomes [6, 5, 3, 1, 0].<br/><br/>2. Finding the h-index:<br/>   - We iterate through the sorted array, where each index `i` represents the number of papers (indexed from 0) that have at least `i+1` citations.<br/>   - For each paper at index `i`:<br/>     - If the citations at index `i` are greater than or equal to `i + 1`, this means that there are at least `i+1` papers with `i+1` or more citations. We update the h-index to `i + 1`.<br/>     - If the condition fails, we stop the iteration because subsequent papers will have fewer citations, making it impossible to increase the h-index further.<br/><br/>3. Example Breakdown:<br/>   - For citations = [3, 0, 6, 1, 5], after sorting, the array becomes [6, 5, 3, 1, 0].<br/>   - At index 0: citations[0] = 6, 1 paper has at least 6 citations, so h = 1.<br/>   - At index 1: citations[1] = 5, 2 papers have at least 5 citations, so h = 2.<br/>   - At index 2: citations[2] = 3, 3 papers have at least 3 citations, so h = 3.<br/>   - At index 3: citations[3] = 1, but we need at least 4 papers with 4 or more citations, which is not the case, so we stop.<br/><br/>   Final h-index = 3, because there are 3 papers with at least 3 citations each.<br/><br/>Time Complexity:<br/>- Sorting the array takes O(n log n), where `n` is the length of the `citations` array.<br/>- Iterating through the array takes O(n).<br/>- Overall time complexity is O(n log n).<br/><br/>Space Complexity:<br/>- We are sorting the array in-place, so the space complexity is O(1) for additional space (aside from the input).","category":"Array / String"},{"id":12,"topic":"Insert Delete GetRandom O(1)","code":"// Class to implement a randomized set\\nvar RandomizedSet = function() {\\n    this.map = new Map(); // Maps each value to its index in the \'list\' array for O(1) lookups\\n    this.list = [];       // Stores values for efficient random access\\n};\\n\\n/** \\n * Inserts a value into the set.\\n * @param {number} val - The value to insert.\\n * @return {boolean} - Returns true if the value was inserted, false if it already exists.\\n */\\n\\nRandomizedSet.prototype.insert = function(val) {\\n    // Check if the value already exists in the map\\n    if (this.map.has(val)) return false;\\n\\n    // Add value to the list\\n    this.list.push(val);\\n\\n    // Store the index of the newly added value in the map\\n    this.map.set(val, this.list.length - 1);\\n\\n    return true; // Successfully inserted\\n};\\n\\n/** \\n * Removes a value from the set.\\n * @param {number} val - The value to remove.\\n * @return {boolean} - Returns true if the value was removed, false if it doesn\'t exist.\\n */\\n\\nRandomizedSet.prototype.remove = function(val) {\\n    // Check if the value exists in the map\\n    if (!this.map.has(val)) return false;\\n\\n    // Retrieve the index of the value to be removed\\n    const index = this.map.get(val);\\n\\n    // Get the last value in the list\\n    const lastValue = this.list[this.list.length - 1];\\n\\n    // Replace the value at the index with the last value (swap)\\n    this.list[index] = lastValue;\\n\\n    // Update the map to reflect the new index of the last value\\n    this.map.set(lastValue, index);\\n\\n    // Remove the last element from the list (constant-time removal)\\n    this.list.pop();\\n\\n    // Delete the value from the map\\n    this.map.delete(val);\\n\\n    return true; // Successfully removed\\n};\\n\\n/**\\n * Returns a random value from the set.\\n * @return {number} - A randomly selected value.\\n */\\n\\nRandomizedSet.prototype.getRandom = function() {\\n    // Generate a random index between 0 and list.length - 1\\n    const randomIndex = Math.floor(Math.random() * this.list.length);\\n\\n    // Return the value at the generated index\\n    return this.list[randomIndex];\\n};\\n\\n/** \\n * Usage Example:\\n * var obj = new RandomizedSet();\\n * var param_1 = obj.insert(val);\\n * var param_2 = obj.remove(val);\\n * var param_3 = obj.getRandom();\\n */\\n\\n// Testing the functionality\\nvar randomizedSet = new RandomizedSet();\\nconsole.log(randomizedSet.insert(1));    // true: Adds 1 to the set\\nconsole.log(randomizedSet.remove(2));    // false: 2 is not in the set\\nconsole.log(randomizedSet.insert(2));    // true: Adds 2 to the set\\nconsole.log(randomizedSet.getRandom());  // 1 or 2: Randomly selects one of the values\\nconsole.log(randomizedSet.remove(1));    // true: Removes 1 from the set\\nconsole.log(randomizedSet.insert(2));    // false: 2 is already in the set\\nconsole.log(randomizedSet.getRandom());  // 2: 2 is the only value in the set\\n","explanation":"The `RandomizedSet` class is a data structure that supports the following operations in average O(1) time:<br/>1. `insert(val)`: Inserts a value into the set if it is not already present. Returns `true` if the value was added, and `false` if it already exists.<br/>2. `remove(val)`: Removes a value from the set if it exists. Returns `true` if the value was removed, and `false` if it does not exist.<br/>3. `getRandom()`: Returns a random value from the set. Each value has an equal probability of being selected.<br/><br/>Implementation Details:<br/><br/>1. Constructor (`RandomizedSet`):<br/>   - `this.map`: A `Map` object that maps values to their indices in the `list` array. This allows for constant-time lookup of values.<br/>   - `this.list`: An array that stores all the values. This array supports fast access for random selection.<br/><br/>2. Insert Operation (`insert(val)`):<br/>   - Checks if `val` is already in the `map` using `this.map.has(val)`. If it exists, return `false`.<br/>   - If not, appends `val` to `this.list` and updates the `map` with the value\'s index (`this.list.length - 1`).<br/>   - Returns `true` to indicate the value was successfully added.<br/><br/>3. Remove Operation (`remove(val)`):<br/>   - Checks if `val` exists in `this.map`. If not, return `false`.<br/>   - Retrieves the index of `val` from the `map`.<br/>   - Swaps the value at this index with the last value in `this.list` to maintain efficient removal.<br/>     - Updates the `map` to reflect the new index of the last value.<br/>   - Removes the last element of the `list` using `pop()` and deletes the entry for `val` in `this.map`.<br/>   - Returns `true` to indicate the value was successfully removed.<br/><br/>4. Get Random Operation (`getRandom()`):<br/>   - Generates a random index using `Math.random()` and the length of the `list`.<br/>   - Returns the value at the random index in `this.list`.<br/><br/>Example Walkthrough:<br/><br/>- `randomizedSet.insert(1)`:<br/>  - Adds `1` to the set. Updates `map` to `{1: 0}` and `list` to `[1]`.<br/>  - Returns `true`.<br/><br/>- `randomizedSet.remove(2)`:<br/>  - Fails because `2` is not in the set.<br/>  - Returns `false`.<br/><br/>- `randomizedSet.insert(2)`:<br/>  - Adds `2` to the set. Updates `map` to `{1: 0, 2: 1}` and `list` to `[1, 2]`.<br/>  - Returns `true`.<br/><br/>- `randomizedSet.getRandom()`:<br/>  - Randomly returns either `1` or `2`, as both have equal probability.<br/><br/>- `randomizedSet.remove(1)`:<br/>  - Removes `1`. Swaps `1` with the last value (`2`) in the `list`.<br/>  - Updates `map` to `{2: 0}` and `list` to `[2]`.<br/>  - Returns `true`.<br/><br/>- `randomizedSet.insert(2)`:<br/>  - Fails because `2` is already in the set.<br/>  - Returns `false`.<br/><br/>- `randomizedSet.getRandom()`:<br/>  - Returns `2`, as it is the only value in the set.<br/><br/>Time Complexity:<br/>1. `insert(val)`: O(1), as it performs constant-time operations on the `map` and `list`.<br/>2. `remove(val)`: O(1), as it swaps and pops elements in the `list` and updates the `map`.<br/>3. `getRandom()`: O(1), as it accesses a random index in the `list`.<br/><br/>Space Complexity:<br/>- The space complexity is O(n), where `n` is the number of elements in the set. The `list` and `map` both store references to the elements.","category":"Array / String"},{"id":13,"topic":"Product of Array Except Self","code":"// Calculate product of array except self\\nvar productExceptSelf = function(nums) {\\n const length = nums.length; // Get the length of the input array\\n const result = new Array(length).fill(1); // Initialize the result array with 1s\\n\\n // Step 1: Calculate the prefix product for each element\\n let cumulativeProductFromLeft = 1;\\n for (let i = 0; i < length; i++) {\\n result[i] = cumulativeProductFromLeft; // Store the product of elements to the left of nums[i]\\n cumulativeProductFromLeft *= nums[i]; // Update the cumulative product from the left\\n // The \'*=\' operator multiplies the variable by the value on the right and reassigns the result.\\n // Equivalent to: cumulativeProductFromLeft = cumulativeProductFromLeft * nums[i]\\n }\\n\\n // Step 2: Calculate the suffix product and update the result array\\n let cumulativeProductFromRight = 1;\\n for (let i = length - 1; i >= 0; i--) {\\n result[i] *= cumulativeProductFromRight;  // Update result[i] by multiplying with cumulativeProductFromRight\\n cumulativeProductFromRight *= nums[i];   // Update the cumulative product from the right\\n // The \'*=\' operator multiplies the current value of result[i] \\n // by cumulativeProductFromRight and updates result[i] with the product.\\n // Equivalent to: result[i] = result[i] * cumulativeProductFromRight\\n }\\n\\n return result; // Return the result array\\n};\\n\\n// Examples:\\nconsole.log(productExceptSelf([1, 2, 3, 4])); // Output: [24, 12, 8, 6]\\nconsole.log(productExceptSelf([-1, 1, 0, -3, 3])); // Output: [0, 0, 9, 0, 0]\\n","explanation":"1. Initialization:<br/>   - Create an array `result` of the same size as `nums`, initialized with 1s.<br/>   - Use two variables, `cumulativeProductFromLeft` and `cumulativeProductFromRight`, to store the running product of elements from the left and right of the current element.<br/><br/>2. First Loop (Prefix Products):<br/>   - Traverse the array from left to right.<br/>   - For each index `i`, store the product of all elements to the left of `nums[i]` in `result[i]`.<br/>   - Update `cumulativeProductFromLeft` by multiplying it with the current element `nums[i]`.<br/>     - The `*=` operator is shorthand for multiplying a variable by a value and assigning the result back to the variable.<br/>       - Example: `x *= y` is equivalent to `x = x * y`.<br/><br/>3. Second Loop (Suffix Products):<br/>   - Traverse the array from right to left.<br/>   - For each index `i`, multiply `result[i]` (which already contains the prefix product) by the cumulative product of all elements to the right of `nums[i]`.<br/>   - Update `cumulativeProductFromRight` by multiplying it with the current element `nums[i]`.<br/>     - Again, `*=` updates the variable with the result of the multiplication.<br/><br/>4. Key Idea:<br/>   - The final value at `result[i]` is the product of all elements to the left of `nums[i]` (calculated in the first loop) and all elements to the right of `nums[i]` (calculated in the second loop).<br/>   - By avoiding division and performing two passes, the algorithm achieves O(n) time complexity.<br/><br/>5. Space Complexity:<br/>   - The algorithm uses O(1) additional space (excluding the output array) as it only requires two variables, `cumulativeProductFromLeft` and `cumulativeProductFromRight`.<br/><br/>6. Example Walkthrough:<br/>   - Input: `nums = [1, 2, 3, 4]`<br/>   <br/>   Prefix Pass:<br/>   - i = 0:<br/>     - result[0] = 1 (No elements to the left)<br/>     - cumulativeProductFromLeft = 1 * 1 = 1<br/>   - i = 1:<br/>     - result[1] = 1 (Product of elements to the left of 2: 1)<br/>     - cumulativeProductFromLeft = 1 * 2 = 2<br/>   - i = 2:<br/>     - result[2] = 2 (Product of elements to the left of 3: 1 * 2)<br/>     - cumulativeProductFromLeft = 2 * 3 = 6<br/>   - i = 3:<br/>     - result[3] = 6 (Product of elements to the left of 4: 1 * 2 * 3)<br/>     - cumulativeProductFromLeft = 6 * 4 = 24<br/>   <br/>   After the first loop (Prefix Pass):<br/>   - result = [1, 1, 2, 6]<br/>   <br/>   Suffix Pass:<br/>   - i = 3:<br/>     - result[3] = 6 * 1 (No elements to the right)<br/>     - cumulativeProductFromRight = 1 * 4 = 4<br/>   - i = 2:<br/>     - result[2] = 2 * 4 = 8 (Product of elements to the right of 3: 4)<br/>     - cumulativeProductFromRight = 4 * 3 = 12<br/>   - i = 1:<br/>     - result[1] = 1 * 12 = 12 (Product of elements to the right of 2: 3 * 4)<br/>     - cumulativeProductFromRight = 12 * 2 = 24<br/>   - i = 0:<br/>     - result[0] = 1 * 24 = 24 (Product of elements to the right of 1: 2 * 3 * 4)<br/>     - cumulativeProductFromRight = 24 * 1 = 24<br/>   <br/>   After the second loop (Suffix Pass):<br/>   - result = [24, 12, 8, 6]<br/>   - Output: `[24, 12, 8, 6]`<br/><br/>7. Edge Cases:<br/>   - Input: `nums = [-1, 1, 0, -3, 3]`<br/>     - Prefix Pass: `result = [1, -1, 0, 0, 0]`<br/>     - Suffix Pass: `result = [0, 0, 9, 0, 0]`<br/>     - Output: `[0, 0, 9, 0, 0]`<br/>   - Handles cases with zeros and negative numbers correctly.","category":"Array / String"},{"id":14,"topic":"Gas Station","code":"// Find the starting gas station\\nvar canCompleteCircuit = function(gas, cost) {\\n const numStations = gas.length;  // Number of gas stations\\n let totalGas = 0;  // Total gas available from all stations\\n let totalCost = 0;  // Total cost to travel around the circuit\\n let currentGas = 0;  // Current gas level while traveling\\n let startIndex = 0;  // Index of the current potential starting station\\n\\n // Traverse through all stations and calculate the total gas and cost\\n for (let station = 0; station < numStations; station++) {\\n totalGas += gas[station];  // Accumulate total available gas\\n totalCost += cost[station];  // Accumulate total cost to travel\\n\\n // Update the current gas level after traveling to the next station\\n currentGas += gas[station] - cost[station];\\n\\n // If the current gas level becomes negative, it means we cannot start from \'startIndex\'\\n if (currentGas < 0) {\\n // Reset the starting station to the next station\\n startIndex = station + 1;\\n currentGas = 0;  // Reset the current gas level for the next start attempt\\n }\\n }\\n\\n // If the total gas available is less than the total cost required, return -1 (impossible to complete the circuit)\\n if (totalGas < totalCost) {\\n return -1;\\n }\\n\\n // Return the index of the station from where the circuit can be completed\\n return startIndex;\\n};\\n\\n// Example 1\\nlet gas1 = [1, 2, 3, 4, 5];\\nlet cost1 = [3, 4, 5, 1, 2];\\nconsole.log(canCompleteCircuit(gas1, cost1));  // Output: 3\\n\\n// Example 2\\nlet gas2 = [2, 3, 4];\\nlet cost2 = [3, 4, 3];\\nconsole.log(canCompleteCircuit(gas2, cost2));  // Output: -1\\n\\n// Example 3\\nlet gas3 = [5, 1, 2, 3, 4];\\nlet cost3 = [4, 4, 4, 4, 5];\\nconsole.log(canCompleteCircuit(gas3, cost3));  // Output: 0\\n\\n// Example 4\\nlet gas4 = [2, 3, 4, 5, 6];\\nlet cost4 = [3, 4, 5, 6, 7];\\nconsole.log(canCompleteCircuit(gas4, cost4));  // Output: -1\\n","explanation":"The problem asks to determine if a car can travel around a circular route consisting of `n` gas stations. The car has an unlimited gas tank, but each station provides a certain amount of gas (`gas[i]`), and traveling from one station to the next requires a specific amount of gas (`cost[i]`). You need to find the starting gas station index from where the car can complete the full circuit, or return -1 if no such station exists.<br/><br/>Approach:<br/><br/>1. Initialization:<br/> - We start by defining some variables:<br/>   - `numStations`: The number of gas stations.<br/>   - `totalGas`: The sum of gas available at all stations.<br/>   - `totalCost`: The total gas required to travel through all stations.<br/>   - `currentGas`: The amount of gas the car currently has while trying to make the trip.<br/>   - `startIndex`: The index of the station that might be the valid starting point.<br/><br/>2. Iterating Through the Stations:<br/> - We loop over each station to compute the total gas and total cost required for the circuit. We also track the `currentGas` while attempting to travel from one station to the next.<br/> - At each station, we add the gas available at the station to `totalGas` and subtract the cost of traveling to the next station from `totalCost`.<br/> - We update `currentGas` by adding the available gas at the current station and subtracting the travel cost to the next station.<br/><br/>3. Checking Feasibility of Starting from Current Station:<br/> - If at any point `currentGas` becomes negative, it means we cannot complete the circuit starting from the current `startIndex`. In this case, we reset `startIndex` to the next station (`station + 1`) and reset `currentGas` to 0. This is because if we can\'t reach the next station from the current starting point, any station before it will also fail.<br/><br/>4. Final Check:<br/> - After the loop, we check if the total gas available (`totalGas`) is less than the total cost required (`totalCost`). If it is, then completing the circuit is impossible, and we return -1.<br/> - If `totalGas` is greater than or equal to `totalCost`, the circuit is possible, and we return `startIndex`, which represents the first station from which the car can complete the circuit.<br/><br/>Time Complexity:<br/>- O(n): We only loop through the stations once, making the time complexity linear.<br/><br/>Space Complexity:<br/>- O(1): We use a constant amount of space for the variables, regardless of the input size.","category":"Array / String"},{"id":15,"topic":"Candy","code":"var candy = function (ratings) {\\n const numChildren = ratings.length;  // Get the number of children\\n\\n // Initialize an array with one candy for each child.\\n let candyDistribution = new Array(numChildren).fill(1);  // Start with 1 candy per child\\n\\n // Left to right pass to ensure children with higher ratings get more candies.\\n for (let i = 1; i < numChildren; i++) {  // Loop through the ratings\\n if (ratings[i] > ratings[i - 1]) {  // If the current rating is higher\\n candyDistribution[i] = candyDistribution[i - 1] + 1;  // Give more candy than the previous child\\n }\\n }\\n\\n // Right to left pass to adjust candy for children with higher ratings than the next one.\\n for (let i = numChildren - 2; i >= 0; i--) {  // Loop backwards through the ratings\\n if (ratings[i] > ratings[i + 1]) {  // If the current rating is higher\\n candyDistribution[i] = Math.max(  // Take the higher candy count\\n candyDistribution[i],  // Keep the current count if higher\\n candyDistribution[i + 1] + 1  // Otherwise, add one more than the next child\\n );\\n }\\n }\\n\\n // Sum up the total candies.\\n return candyDistribution.reduce(  // Add up all the candies\\n (totalCandies, currentCandies) => totalCandies + currentCandies,  // Accumulate the total\\n 0  // Start the sum at 0\\n );\\n};\\n\\n// Example \\nlet ratings1 = [1, 0, 2];\\nconsole.log(\\"Example 1 - Ratings:\\", ratings1);\\nconsole.log(\\"Total Candies:\\", candy(ratings1));  // Output should be 5\\n\\n// Example 2\\nlet ratings2 = [1, 2, 2];\\nconsole.log(\\"Example 2 - Ratings:\\", ratings2);\\nconsole.log(\\"Total Candies:\\", candy(ratings2));  // Output should be 4\\n\\n// Example 3\\nlet ratings3 = [3, 2, 1, 4, 5, 2];\\nconsole.log(\\"Example 3 - Ratings:\\", ratings3);\\nconsole.log(\\"Total Candies:\\", candy(ratings3));  // Output should be 11\\n\\n// Example 4\\nlet ratings4 = [1, 3, 2, 2, 1];\\nconsole.log(\\"Example 4 - Ratings:\\", ratings4);\\nconsole.log(\\"Total Candies:\\", candy(ratings4));  // Output should be 7\\n","explanation":"This problem is a typical greedy approach where we need to distribute candies to children based on their ratings while satisfying certain conditions. The conditions are:<br/><br/>1. Each child must receive at least one candy.<br/>2. Children with higher ratings should receive more candies than their neighbors.<br/><br/>The solution is broken down into two passes over the ratings array:<br/><br/>1. Left to Right Pass:<br/> - We start by giving each child one candy.<br/> - As we iterate through the list, we check if the current child has a higher rating than the previous one.<br/> - If so, we increase their candy count to be one more than the previous child\u2019s candy count.<br/> - This ensures that children with higher ratings than their left neighbor receive more candies.<br/><br/>2. Right to Left Pass:<br/> - After the left to right pass, we perform another pass from right to left.<br/> - This ensures that children with higher ratings than their right neighbor get more candies, while respecting the candy distribution from the first pass.<br/> - If a child has a higher rating than the next one, we update their candy count to be the maximum of their current candy count or one more than the next child\'s candy count.<br/><br/>Finally, the total number of candies is the sum of all elements in the `candyDistribution` array.<br/><br/>Time Complexity:<br/> - O(n): We make two passes through the array, where `n` is the number of children (i.e., the length of the `ratings` array).<br/><br/>Space Complexity:<br/> - O(n): We use an array `candyDistribution` to store the candy count for each child, which requires space proportional to the number of children.","category":"Array / String"},{"id":16,"topic":"Trapping Rain Water","code":"// Calculate trapped rain water\\nvar trap = function (height) {\\n let left = 0,\\n right = height.length - 1; // Initialize two pointers\\n let left_max = 0,\\n right_max = 0; // Initialize the max heights from left and right\\n let waterTrapped = 0; // Variable to accumulate the water trapped\\n while (left <= right) {\\n if (height[left] <= height[right]) {\\n if (height[left] >= left_max) {\\n left_max = height[left]; // Update left_max\\n } else {\\n waterTrapped += left_max - height[left];\\n }\\n left++; // Move the left pointer to the right\\n } else {\\n if (height[right] >= right_max) {\\n right_max = height[right]; // Update right_max\\n } else {\\n waterTrapped += right_max - height[right];\\n }\\n right--; // Move the right pointer to the left\\n }\\n }\\n return waterTrapped; // Return the total trapped water\\n};\\n\\n// Example 1\\nlet height1 = [0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1];\\nconsole.log(\'Example 1 - Trapped Water:\', trap(height1)); // Output should be 6\\n\\n// Example 2\\nlet height2 = [4, 2, 0, 3, 2, 5];\\nconsole.log(\'Example 2 - Trapped Water:\', trap(height2)); // Output should be 9\\n","explanation":"This problem involves calculating the amount of water that can be trapped between bars after raining, given an array representing the heights of the bars. The goal is to find how much water can be trapped between the bars after a rainfall.<br/><br/>We use a two-pointer approach to solve this problem efficiently:<br/><br/>1. Two Pointers:<br/> - We initialize two pointers, `left` at the beginning of the array and `right` at the end. These pointers will move towards each other as we calculate the trapped water.<br/><br/>2. Tracking Max Heights:<br/> - We keep track of the maximum heights encountered so far from both the left (`left_max`) and the right (`right_max`). These values help determine how much water can be trapped at each position.<br/><br/>3. Water Trapping Logic:<br/> - We compare the heights at the `left` and `right` pointers:<br/> - If the height at `left` is smaller than or equal to the height at `right`, we check if the current height at `left` is smaller than `left_max`. If it is, water is trapped, and we add the difference between `left_max` and `height[left]` to the total trapped water. If not, we update `left_max` and move the `left` pointer to the right.<br/> - If the height at `right` is smaller, we perform the same logic but for the `right` pointer, updating `right_max` and moving the `right` pointer to the left.<br/><br/>4. Summing the Water:<br/> - The total trapped water is accumulated as we traverse the array from both ends to the center, ensuring that we calculate the trapped water based on the highest possible barriers on either side.<br/><br/>5. Termination:<br/> - The process continues until the `left` and `right` pointers meet, and the total trapped water is returned.<br/><br/>Time Complexity:<br/> - O(n), where `n` is the number of elements in the input array. We only need to make a single pass through the array.<br/><br/>Space Complexity:<br/> - O(1), since we only use a constant amount of extra space for the `left_max`, `right_max`, and `waterTrapped` variables.<br/><br/>The algorithm efficiently computes the total trapped water using a greedy approach with two pointers.","category":"Array / String"},{"id":17,"topic":"Roman to Integer","code":"// Convert Roman numeral to integer\\nvar romanToInt = function (s) {\\n // Define a mapping of Roman numerals to their integer values.\\n const romanMap = {\\n I: 1,\\n V: 5,\\n X: 10,\\n L: 50,\\n C: 100,\\n D: 500,\\n M: 1000,\\n };\\n let total = 0; // Initialize total to 0.\\n // Iterate through the string, checking each numeral.\\n for (let i = 0; i < s.length; i++) {\\n const current = romanMap[s[i]]; // Get the value of the current Roman numeral.\\n const next = romanMap[s[i + 1]]; // Get the value of the next Roman numeral (if it exists).\\n // If the current numeral is smaller than the next, subtract it. Otherwise, add it.\\n if (next && current < next) {\\n total -= current; // Subtract current from total.\\n } else {\\n total += current; // Add current to total.\\n }\\n }\\n return total; // Return the computed total.\\n};\\n\\nconsole.log(romanToInt(\\"III\\")); \\n// Output: 3\\n// Explanation: I = 1, I = 1, I = 1. Total = 3.\\n\\nconsole.log(romanToInt(\\"LVIII\\")); \\n// Output: 58\\n// Explanation: L = 50, V = 5, I = 1, I = 1, I = 1. Total = 58.\\n\\nconsole.log(romanToInt(\\"MCMXCIV\\")); \\n// Output: 1994\\n// Explanation: \\n// M = 1000, C = 100 (subtracted, because 100 < M),\\n// M = 1000 (add), X = 10 (subtracted, because 10 < C),\\n// C = 100 (add), I = 1 (subtracted, because 1 < V), V = 5 (add). \\n// Total = 1994.\\n\\nconsole.log(romanToInt(\\"IX\\")); \\n// Output: 9\\n// Explanation: I = 1, X = 10 (subtracted, because 1 < 10). Total = 9.\\n\\nconsole.log(romanToInt(\\"XL\\")); \\n// Output: 40\\n// Explanation: X = 10, L = 50 (subtracted, because 10 < 50). Total = 40.\\n\\nconsole.log(romanToInt(\\"CDXLIV\\")); \\n// Output: 444\\n// Explanation:\\n// C = 100, D = 500 (subtracted, because 100 < 500),\\n// X = 10, L = 50 (subtracted, because 10 < 50),\\n// I = 1, V = 5 (subtracted, because 1 < 5). Total = 444.\\n","explanation":"The function `romanToInt` converts a Roman numeral string into its integer representation by following these steps:<br/><br/>1. Mapping Roman Numerals to Values:<br/> - A dictionary `romanMap` is used to map each Roman numeral to its corresponding integer value.<br/><br/>2. Iterating Through the Input String:<br/> - The function loops through each character in the Roman numeral string.<br/> - For each character, it retrieves the value of the current numeral (`current`) and the value of the next numeral (`next`).<br/><br/>3. Handling Subtractive Notation:<br/> - If the current numeral is smaller than the next numeral (e.g., `I` before `V` in \\"IV\\"), it represents a subtractive case.<br/> - In such cases, subtract the `current` value from the total.<br/><br/>4. Adding Standard Values:<br/> - If the current numeral is not part of a subtractive pair, add its value to the total.<br/><br/>5. Returning the Result:<br/> - After completing the loop, the accumulated total is returned, representing the integer value of the Roman numeral.<br/><br/>Example Walkthrough:<br/><br/>Example 1:<br/>Input: `\\"III\\"`<br/><br/>- `current = 1`, `next = 1`. Add `1`.<br/>- `current = 1`, `next = 1`. Add `1`.<br/>- `current = 1`, no `next`. Add `1`.<br/><br/>Output: `3`.<br/><br/>Example 2:<br/>Input: `\\"LVIII\\"`<br/><br/>- `L = 50`, `V = 5`. Add `50`.<br/>- `V = 5`, `I = 1`. Add `5`.<br/>- `I = 1`, `I = 1`. Add `1`.<br/>- `I = 1`, no `next`. Add `1`.<br/><br/>Output: `58`.<br/><br/>Example 3:<br/>Input: `\\"MCMXCIV\\"`<br/><br/>- `M = 1000`, `C = 100`. Add `1000`.<br/>- `C = 100`, `M = 1000`. Subtract `100`.<br/>- `M = 1000`, `X = 10`. Add `900`.<br/>- `X = 10`, `C = 100`. Subtract `10`.<br/>- `C = 100`, `I = 1`. Add `90`.<br/>- `I = 1`, `V = 5`. Subtract `1`.<br/>- `V = 5`, no `next`. Add `4`.<br/><br/>Output: `1994`.<br/><br/>Complexity:<br/><br/>- Time Complexity: O(n), where n is the length of the input string, as we iterate through it once.<br/>- Space Complexity: O(1), since the memory usage is constant regardless of input size (only the `romanMap` and a few variables are used).","category":"Array / String"},{"id":18,"topic":"Integer to Roman","code":"// Convert integer to Roman numeral\\nvar intToRoman = function(num) {\\n    // Define the Roman numeral values and symbols\\n    const romanValues = [\\n        [1000, \\"M\\"],\\n        [900, \\"CM\\"],\\n        [500, \\"D\\"],\\n        [400, \\"CD\\"],\\n        [100, \\"C\\"],\\n        [90, \\"XC\\"],\\n        [50, \\"L\\"],\\n        [40, \\"XL\\"],\\n        [10, \\"X\\"],\\n        [9, \\"IX\\"],\\n        [5, \\"V\\"],\\n        [4, \\"IV\\"],\\n        [1, \\"I\\"]\\n    ];\\n    \\n    let result = \\"\\";\\n\\n    // Loop through each value in the romanValues array\\n    for (const [value, symbol] of romanValues) {\\n        // Check how many times the symbol can be used\\n        while (num >= value) {\\n            result += symbol;  // Append the Roman numeral symbol\\n            num -= value;      // Subtract the value from the number\\n        }\\n    }\\n    \\n    return result;\\n};\\n\\n// Example usage\\nconsole.log(intToRoman(3749)); // Output: \\"MMMDCCXLIX\\"\\nconsole.log(intToRoman(58));   // Output: \\"LVIII\\"\\nconsole.log(intToRoman(1994)); // Output: \\"MCMXCIV\\"\\nconsole.log(intToRoman(9));    // Output: \\"IX\\"\\nconsole.log(intToRoman(40));   // Output: \\"XL\\"\\n","explanation":"This function converts an integer to its Roman numeral equivalent.<br/><br/>1. Roman Numeral Values: <br/>   The `romanValues` array contains pairs of integer values and their corresponding Roman numeral symbols. The array is ordered from the largest value (1000, \\"M\\") to the smallest (1, \\"I\\") to ensure that the conversion starts with the largest possible Roman numeral.<br/><br/>2. Main Loop:<br/>   The function iterates through each pair of integer and Roman numeral symbol. For each pair:<br/>   - It checks how many times the Roman numeral symbol can be used by comparing the integer `num` with the current value in the `romanValues` array.<br/>   - If `num` is greater than or equal to the value, it appends the corresponding symbol to the result string and subtracts the value from `num`.<br/><br/>3. Result Construction:<br/>   This continues until `num` is reduced to 0. The result string will contain the Roman numeral representation of the integer.<br/><br/>4. Final Output:<br/>   Once the loop completes, the function returns the constructed Roman numeral as a string.<br/><br/>For example:<br/>- If the input is `num = 3749`, the function produces `\\"MMMDCCXLIX\\"`.<br/>- For `num = 58`, it returns `\\"LVIII\\"`.<br/><br/>The time complexity is O(1) because the number of Roman numeral symbols is fixed and the function loops through them at most once.","category":"Array / String"},{"id":19,"topic":"Length of Last Word","code":"// Find length of last word\\nvar lengthOfLastWord = function(s) {\\n    // Trim any trailing spaces from the string to handle cases with extra spaces at the end.\\n    s = s.trim(); // \\"   Hello world!   \\" ==> \\"Hello world!\\"\\n\\n    // Find the last space in the trimmed string.\\n    let lastSpaceIndex = s.lastIndexOf(\' \');\\n\\n    // The length of the last word is the difference between the string length and the index of the last space.\\n    return s.length - lastSpaceIndex - 1;\\n};\\n\\n// Examples\\nconsole.log(lengthOfLastWord(\\" Hello World \\"));\\n// Output: 5\\n// Explanation: Last word is \\"World\\", length = 5.\\n\\nconsole.log(lengthOfLastWord(\\"   fly me   to   the moon  \\"));\\n// Output: 4\\n// Explanation: Last word is \\"moon\\", length = 4.\\n\\nconsole.log(lengthOfLastWord(\\"luffy is still joyboy\\"));\\n// Output: 6\\n// Explanation: Last word is \\"joyboy\\", length = 6.\\n\\nconsole.log(lengthOfLastWord(\\"a\\"));\\n// Output: 1\\n// Explanation: Single word \\"a\\", length = 1.\\n\\nconsole.log(lengthOfLastWord(\\"a \\"));\\n// Output: 1\\n// Explanation: Last word is \\"a\\", trailing space is ignored.\\n","explanation":"1. Trim the String:<br/>   - Use `s.trim()` to remove leading and trailing spaces, ensuring we only consider meaningful content.<br/><br/>2. Find the Last Space:<br/>   - Use `s.lastIndexOf(\' \')` to locate the position of the last space in the string. If no space is found, it returns `-1`.<br/><br/>3. Calculate the Last Word\'s Length:<br/>   - Subtract the index of the last space (`lastSpaceIndex`) from the total string length (`s.length`) and subtract one more to exclude the space itself.<br/><br/>4. Return the Result:<br/>   - The result represents the length of the last word.<br/><br/>Complexity:<br/><br/>- Time Complexity: O(n), where n is the length of the string. The `trim` and `lastIndexOf` operations both iterate through the string.<br/>- Space Complexity: O(1), as no additional data structures are used.","category":"Array / String"},{"id":20,"topic":"Longest Common Prefix","code":"// Find longest common prefix\\nvar longestCommonPrefix = function (strs) {\\n if (strs.length === 0) return \'\';\\n let prefix = strs[0];\\n for (let i = 1; i < strs.length; i++) {\\n while (strs[i].indexOf(prefix) !== 0) {\\n prefix = prefix.slice(0, -1);\\n if (prefix === \'\') return \'\';\\n }\\n }\\n return prefix;\\n};\\n\\n// Examples:\\nconsole.log(longestCommonPrefix([\'flower\', \'flow\', \'flight\']));\\n// Output: \\"fl\\"\\n\\nconsole.log(longestCommonPrefix([\'dog\', \'racecar\', \'car\']));\\n// Output: \\"\\"\\n\\nconsole.log(longestCommonPrefix([\'interstellar\', \'internet\', \'interval\']));\\n// Output: \\"inte\\"\\n\\nconsole.log(longestCommonPrefix([\'a\']));\\n// Output: \\"a\\"\\n\\nconsole.log(longestCommonPrefix([\'\']));\\n// Output: \\"\\"\\n\\nconsole.log(longestCommonPrefix([\'prefix\', \'prefixing\', \'prefecture\']));\\n// Output: \\"prefix\\"\\n","explanation":"1. Start with the First String:<br/>   - Assume the first string in the array is the longest common prefix.<br/><br/>2. Compare the Prefix with Each String:<br/>   - Use `indexOf(prefix) === 0` to check if the current string starts with the prefix.<br/><br/>3. Adjust the Prefix:<br/>   - If a string does not start with the prefix, remove the last character from the prefix (`prefix.slice(0, -1)`) until a match is found.<br/><br/>4. Stop Early:<br/>   - If the prefix becomes empty during any comparison, return `\\"\\"`, as there is no common prefix.<br/><br/>Example Walkthrough:<br/><br/>Example 1:<br/>Input: `[\\"flower\\", \\"flow\\", \\"flight\\"]`<br/>- Start with `prefix = \\"flower\\"`.<br/>  - Compare with `\\"flow\\"`. `\\"flow\\".indexOf(\\"flower\\") !== 0`, so reduce:<br/>    - Remove \\"r\\" \u2192 `prefix = \\"flowe\\"`.<br/>    - Remove \\"e\\" \u2192 `prefix = \\"flow\\"`.<br/>  - `\\"flow\\".indexOf(\\"flow\\") === 0`, so keep `\\"flow\\"`.<br/>- Compare with `\\"flight\\"`. `\\"flight\\".indexOf(\\"flow\\") !== 0`, so reduce:<br/>    - Remove \\"w\\" \u2192 `prefix = \\"flo\\"`.<br/>    - Remove \\"o\\" \u2192 `prefix = \\"fl\\"`.<br/>  - `\\"flight\\".indexOf(\\"fl\\") === 0`, so keep `\\"fl\\"`.<br/>Output: `\\"fl\\"`.<br/><br/>Example 2:<br/>Input: `[\\"dog\\", \\"racecar\\", \\"car\\"]`<br/>- Start with `prefix = \\"dog\\"`.<br/>  - Compare with `\\"racecar\\"`. `\\"racecar\\".indexOf(\\"dog\\") !== 0`, so reduce:<br/>    - Remove \\"g\\" \u2192 `prefix = \\"do\\"`.<br/>    - Remove \\"o\\" \u2192 `prefix = \\"d\\"`.<br/>    - Remove \\"d\\" \u2192 `prefix = \\"\\"`.<br/>Output: `\\"\\"`.<br/><br/>Example 3:<br/>Input: `[\\"interstellar\\", \\"internet\\", \\"interval\\"]`<br/>- Start with `prefix = \\"interstellar\\"`.<br/>  - Compare with `\\"internet\\"`. Reduce:<br/>    - Remove \\"r\\" \u2192 `prefix = \\"interstella\\"`.<br/>    - Remove \\"a\\" \u2192 `prefix = \\"interstell\\"`.<br/>    - Continue reducing until `prefix = \\"inter\\"`.<br/>  - Compare with `\\"interval\\"`. `\\"interval\\".indexOf(\\"inter\\") === 0`, so keep `\\"inter\\"`.<br/>Output: `\\"inter\\"`.<br/><br/>Complexity:<br/><br/>- Time Complexity: O(n \\\\cdot m), where n is the number of strings and m is the length of the shortest string. Each string may require up to m reductions.<br/>- Space Complexity: O(1), as no additional data structures are used.","category":"Array / String"},{"id":21,"topic":"Reverse Words in a String","code":"var reverseWords = function(s) {\\n    // Step 1: Trim the string to remove leading and trailing spaces\\n    // This ensures we don\'t have extra spaces that could affect our word separation.\\n    // Example: \\"  hello world  \\" becomes \\"hello world\\"\\n    const trimmedString = s.trim();\\n\\n    // Step 2: Split the string into words based on spaces\\n    // We use the split() method with a regular expression that matches one or more whitespace characters.\\n    // The regex /\\\\s+/ will handle multiple spaces and convert them into an array of words,\\n    // effectively filtering out empty strings that might result from consecutive spaces.\\n    // Example: \\"a good   example\\" becomes [\\"a\\", \\"good\\", \\"example\\"]\\n    const words = trimmedString.split(/\\\\s+/);\\n\\n    // Step 3: Reverse the array of words\\n    // By calling reverse(), we change the order of elements in the array,\\n    // so the last word becomes the first and vice versa.\\n    // Example: [\\"a\\", \\"good\\", \\"example\\"] becomes [\\"example\\", \\"good\\", \\"a\\"]\\n    const reversedWords = words.reverse();\\n\\n    // Step 4: Join the reversed array back into a string with a single space\\n    // Using join(\\" \\"), we concatenate the elements of the array into a single string,\\n    // ensuring that words are separated by exactly one space.\\n    // Example: [\\"example\\", \\"good\\", \\"a\\"] becomes \\"example good a\\"\\n    return reversedWords.join(\\" \\");\\n};\\n\\n// Example usage:\\nconst input1 = \\"the sky is blue\\";\\nconst output1 = reverseWords(input1);\\nconsole.log(output1); // Output: \\"blue is sky the\\"\\n","explanation":"Function Definition: The function `reverseWords` takes a single parameter `s`, which is the input string containing words separated by spaces.<br/>- Trimming the String: <br/>  - We use the `trim()` method to remove any extra spaces from the start and end of the string. <br/>  - This is crucial because leading or trailing spaces do not contribute to the meaningful content of the string and would result in incorrect word splitting.<br/>- Splitting into Words:<br/>  - The `split(/\\\\s+/)` method takes advantage of a regular expression that matches one or more whitespace characters.<br/>  - This means that any sequence of spaces (including tabs or multiple spaces) between words is treated as a single delimiter.<br/>  - The result is an array of words, with no empty strings, even if there were multiple spaces between them.<br/>- Reversing the Words:<br/>  - The `reverse()` method modifies the original array in place, reversing the order of its elements.<br/>  - This effectively turns the last word into the first one, aligning with the requirement of returning the words in reverse order.<br/>- Joining the Words:<br/>  - Finally, we use `join(\\" \\")` to combine the elements of the reversed array into a single string, inserting a single space between each word.<br/>  - This ensures that the output format is correct, with only one space separating the words and no extra spaces at the beginning or end.<br/>### Example Cases:<br/>- For the input `\\"the sky is blue\\"`, the function first trims the string (no change here), splits it into `[\\"the\\", \\"sky\\", \\"is\\", \\"blue\\"]`, reverses it to `[\\"blue\\", \\"is\\", \\"sky\\", \\"the\\"]`, and joins it to form `\\"blue is sky the\\"`.<br/>  <br/>- For the input `\\"  hello world  \\"`, trimming results in `\\"hello world\\"`, which splits into `[\\"hello\\", \\"world\\"]`, reverses to `[\\"world\\", \\"hello\\"]`, and finally joins to produce `\\"world hello\\"`.<br/>- For the input `\\"a good   example\\"`, trimming yields `\\"a good   example\\"`, which splits into `[\\"a\\", \\"good\\", \\"example\\"]`, reverses to `[\\"example\\", \\"good\\", \\"a\\"]`, and joins to give `\\"example good a\\"`.<br/>This approach is efficient, leveraging built-in JavaScript methods to manipulate strings and arrays while maintaining clarity and conciseness in the code.","category":"Array / String"},{"id":22,"topic":"Zigzag Conversion","code":"// Convert string to zigzag pattern\\nvar convert = function (s, numRows) {\\n if (numRows === 1 || s.length <= numRows) return s; // Handle edge cases.\\n const rows = Array.from({ length: numRows }, () => \'\');\\n let currentRow = 0;\\n let goingDown = false;\\n for (let char of s) {\\n rows[currentRow] += char;\\n if (currentRow === 0 || currentRow === numRows - 1) {\\n goingDown = !goingDown;\\n }\\n currentRow += goingDown ? 1 : -1;\\n }\\n return rows.join(\'\');\\n};\\n\\n// Examples:\\nconsole.log(convert(\'PAYPALISHIRING\', 3));\\n// Output: \\"PAHNAPLSIIGYIR\\"\\n\\nconsole.log(convert(\'PAYPALISHIRING\', 4));\\n// Output: \\"PINALSIGYAHRPI\\"\\n\\nconsole.log(convert(\'A\', 1));\\n// Output: \\"A\\"\\n\\nconsole.log(convert(\'HELLO\', 2));\\n// Output: \\"HLOEL\\"\\n\\nconsole.log(convert(\'ABCDEF\', 5));\\n// Output: \\"ABDFC\\"\\n","explanation":"1. Handle Edge Cases:<br/>   - If `numRows` is 1 or the string length is less than or equal to `numRows`, return the string directly.<br/><br/>2. Create Row Storage:<br/>   - Use an array of strings, where each string corresponds to a row in the zigzag pattern.<br/><br/>3. Traverse the String:<br/>   - Iterate through each character in the input string.<br/>   - Append the character to the appropriate row based on the current row index.<br/><br/>4. Adjust Row Direction:<br/>   - Use a flag `goingDown` to track whether the row index should increase or decrease.<br/>   - Flip the direction at the topmost (`currentRow === 0`) and bottommost (`currentRow === numRows - 1`) rows.<br/><br/>5. Combine the Rows:<br/>   - After constructing the zigzag pattern, concatenate all rows to produce the final result.<br/><br/>Example Walkthrough:<br/><br/>Example 1:<br/>Input: `s = \\"PAYPALISHIRING\\"`, `numRows = 3`<br/>- Rows: [\\"P   A   H   N\\", \\"A P L S I I G\\", \\"Y   I   R\\"]<br/>- Output: `\\"PAHNAPLSIIGYIR\\"`<br/><br/>Example 2:<br/>Input: `s = \\"PAYPALISHIRING\\"`, `numRows = 4`<br/>- Rows: [\\"P     I    N\\", \\"A   L S  I G\\", \\"Y A   H R\\", \\"P     I\\"]<br/>- Output: `\\"PINALSIGYAHRPI\\"`<br/><br/>Example 3:<br/>Input: `s = \\"A\\"`, `numRows = 1`<br/>- Rows: [\\"A\\"]<br/>- Output: `\\"A\\"`<br/><br/>Complexity:<br/>- Time Complexity: O(n), where n is the length of the string. Each character is visited once.<br/>- Space Complexity: O(n), for storing the rows.","category":"Array / String"},{"id":23,"topic":"Find the Index of the First Occurrence in a String","code":"// Find the index of the first occurrence in a string\\nvar strStr = function (haystack, needle) {\\n const haystackLength = haystack.length;\\n const needleLength = needle.length;\\n if (needleLength === 0) return 0;\\n for (let i = 0; i <= haystackLength - needleLength; i++) {\\n if (haystack.substring(i, i + needleLength) === needle) {\\n return i;\\n }\\n }\\n return -1;\\n};\\n\\n// Examples:\\nconsole.log(strStr(\\"sadbutsad\\", \\"sad\\"));\\n// Output: 0\\n\\nconsole.log(strStr(\\"leetcode\\", \\"leeto\\"));\\n// Output: -1\\n\\nconsole.log(strStr(\\"hello\\", \\"ll\\"));\\n// Output: 2\\n\\nconsole.log(strStr(\\"aaaaa\\", \\"bba\\"));\\n// Output: -1\\n\\nconsole.log(strStr(\\"a\\", \\"a\\"));\\n// Output: 0\\n","explanation":"1. Length Variables:<br/>   - Define `haystackLength` and `needleLength` to avoid redundant `length` property calls.<br/><br/>2. Edge Case:<br/>   - If `needle` is empty, return `0` as per the problem description.<br/><br/>3. Iterate Through `haystack`:<br/>   - Start from index `0` and go up to `haystackLength - needleLength` because a valid `needle` cannot exist beyond this range.<br/><br/>4. Substring Comparison:<br/>   - Use the `substring` method to extract a substring from `haystack` with the same length as `needle` and compare it to `needle`.<br/><br/>5. Return the Index:<br/>   - If a match is found, return the starting index `i`.<br/><br/>6. Return `-1`:<br/>   - If the loop completes without finding a match, return `-1`.<br/><br/>Complexity:<br/>- Time Complexity: O(n \\\\cdot m), where n is `haystackLength` and m is `needleLength`. For each position in `haystack`, a substring of length m is compared to `needle`.<br/>- Space Complexity: O(1), as no additional space is used beyond the variables.","category":"Array / String"},{"id":24,"topic":"Text Justification","code":"// Justify text\\nvar fullJustify = function (words, maxWidth) {\\n const result = [];\\n let line = [];\\n let lineLength = 0;\\n for (let word of words) {\\n if (lineLength + line.length + word.length > maxWidth) {\\n for (let i = 0; i < maxWidth - lineLength; i++) {\\n line[i % (line.length - 1 || 1)] += \' \';\\n }\\n result.push(line.join(\'\'));\\n line = [];\\n lineLength = 0;\\n }\\n line.push(word);\\n lineLength += word.length;\\n }\\n result.push(line.join(\' \') + \' \'.repeat(maxWidth - lineLength - (line.length - 1)));\\n return result;\\n};\\n\\n// Examples:\\nconsole.log(fullJustify([\'This\', \'is\', \'an\', \'example\', \'of\', \'text\', \'justification.\'], 16));\\n// Output:\\n// [\\n//   \\"This    is    an\\",\\n//   \\"example  of text\\",\\n//   \\"justification.  \\"\\n// ]\\n\\nconsole.log(fullJustify([\'What\', \'must\', \'be\', \'acknowledgment\', \'shall\', \'be\'], 16));\\n// Output:\\n// [\\n//   \\"What   must   be\\",\\n//   \\"acknowledgment  \\",\\n//   \\"shall be        \\"\\n// ]\\n\\nconsole.log(fullJustify([\'Science\', \'is\', \'what\', \'we\', \'understand\', \'well\', \'enough\', \'to\', \'explain\', \'to\', \'a\', \'computer.\', \'Art\', \'is\', \'everything\', \'else\', \'we\', \'do\'], 20));\\n// Output:\\n// [\\n//   \\"Science  is  what we\\",\\n//   \\"understand      well\\",\\n//   \\"enough to explain to\\",\\n//   \\"a  computer.  Art is\\",\\n//   \\"everything  else  we\\",\\n//   \\"do                  \\"\\n// ]\\n","explanation":"1. Line Construction:<br/>   - Words are added to a line until adding another word would exceed `maxWidth`.<br/>   - `lineLength` tracks the total number of characters in the current line, excluding spaces.<br/><br/>2. Space Distribution:<br/>   - For fully justified lines:<br/>     - Calculate the total extra spaces needed: `maxWidth - lineLength`.<br/>     - Distribute these spaces evenly between words:<br/>       - Use the `%` operator to cycle through gaps when distributing unevenly.<br/>     - For lines with only one word, all extra spaces are added to the end.<br/><br/>3. Last Line:<br/>   - The last line is left-justified:<br/>     - Words are joined with a single space.<br/>     - Remaining spaces are added to the end to match `maxWidth`.<br/><br/>4. Output:<br/>   - Once all words are processed, the `result` contains all justified lines.<br/><br/>Complexity:<br/><br/>- Time Complexity: O(n), where n is the total number of characters in `words`. Each word is processed once.<br/>- Space Complexity: O(1) additional space, excluding the output array.","category":"Array / String"},{"id":25,"topic":"Valid Palindrome","code":"var isPalindrome = function(s) {\\n    // Remove non-alphanumeric characters and convert to lowercase\\n    let cleaned = s.replace(/[^a-z0-9]/gi, \'\').toLowerCase();\\n    \\n    // Check if the cleaned string is the same as its reverse\\n    return cleaned === cleaned.split(\'\').reverse().join(\'\');\\n};\\n","explanation":"Explanation:<br/><br/>1. Cleaning the String:<br/>   - The function removes all non-alphanumeric characters using the regular expression /[^a-z0-9]/gi and converts the string to lowercase.<br/>   - /[^a-z0-9]/: Matches any character that is not a letter (a-z) or digit (0-9).<br/>   - g: Global flag ensures all matches are replaced.<br/>   - i: Case-insensitive flag ensures both uppercase and lowercase characters are matched.<br/><br/>2. Palindrome Check:<br/>   - The cleaned string is compared with its reversed version.<br/>   - cleaned.split(\'\'): Splits the string into an array of characters.<br/>   - .reverse(): Reverses the order of characters in the array.<br/>   - .join(\'\'): Joins the reversed characters back into a string.<br/>   - The function returns true if the cleaned string matches its reverse; otherwise, it returns false.","category":"Two Pointers"},{"id":26,"topic":"Is Subsequence","code":"// Check if s is a subsequence of t\\nvar isSubsequence = function(s, t) {\\n let i = 0, j = 0;\\n \\n // Traverse string t to find characters of string s in order\\n while (i < s.length && j < t.length) {\\n console.log(`Comparing s[${i}] = \'${s[i]}\' with t[${j}] = \'${t[j]}\'`);\\n \\n if (s[i] === t[j]) {\\n console.log(`Match found! Incrementing i to ${i + 1}`);\\n i++; // Move pointer for s when there\'s a match\\n }\\n \\n // Always move pointer for t\\n j++;\\n console.log(`Incrementing j to ${j}`);\\n }\\n \\n // If all characters in s are found in order in t, return true\\n console.log(`Final value of i: ${i}, length of s: ${s.length}`);\\n return i === s.length;\\n};\\n\\n// Optimized solution\\n// Preprocess t and store the positions of each character\\nvar preprocess = function(t) {\\nconst positions = new Map();\\nfor (let i = 0; i < t.length; i++) {\\nif (!positions.has(t[i])) {\\npositions.set(t[i], []);\\n}\\npositions.get(t[i]).push(i);\\n}\\nreturn positions;\\n};\\n\\n// Check if s is a subsequence of t using binary search\\nvar isSubsequence = function(s, t) {\\nconst positions = preprocess(t);\\nlet prevIndex = -1;\\n\\nTraverse each character in s\\nfor (let char of s) {\\nif (!positions.has(char)) {\\nreturn false; // If t doesn\'t contain this character, return false\\n// }\\n\\nconst indices = positions.get(char);\\n\\n// Use binary search to find the smallest index in indices that is greater than prevIndex\\nlet left = 0, right = indices.length - 1;\\nlet found = false;\\n\\nwhile (left <= right) {\\nconst mid = Math.floor((left + right) / 2);\\nif (indices[mid] > prevIndex) {\\nfound = true;\\nprevIndex = indices[mid];\\nright = mid - 1;\\n} else {\\nleft = mid + 1;\\n}\\n}\\n\\n// If no valid index is found, return false\\nif (!found) {\\nreturn false;\\n}\\n}\\n\\nreturn true;\\n};\\n","explanation":"Explanation:<br/><br/>- We start by initializing two pointers: `i` for string `s` and `j` for string `t`.<br/>- We loop through string `t` using the pointer `j`. For each character in `t`, we check if it matches the current character in `s` (pointed to by `i`).<br/>- If a match is found (`s[i] === t[j]`), we increment `i` to check the next character in `s`.<br/>- Regardless of a match, we always increment `j` to continue traversing `t`.<br/>- If we manage to find all characters of `s` in order within `t`, `i` will reach the end of `s`, and we return `true`.<br/>- If not, we return `false`.<br/><br/>Time Complexity:<br/>- The time complexity is O(n), where `n` is the length of string `t`, since we only traverse string `t` once.<br/><br/>Space Complexity:<br/>- The space complexity is O(1), since we only use a few variables (`i` and `j`) for the pointers.<br/><br/><br/>Optimized Explanation:<br/><br/>1. We preprocess `t` into a map where the key is the character and the value is a list of indices where that character appears in `t`.<br/>2. For each string `s`, we use binary search to find the next available position in `t` where each character in `s` appears after the previously found character.<br/>3. If we can\'t find a character in the required order, return `false`.<br/>4. If we find all characters of `s` in order, return `true`.<br/><br/>Time Complexity:<br/>- Preprocessing `t`: O(n), where `n` is the length of `t`.<br/>- For each string `s`, checking if it\u2019s a subsequence takes O(m * log n), where `m` is the length of `s` and `n` is the length of `t`. This is because we use binary search on the list of indices for each character of `s`.<br/><br/>Space Complexity:<br/>- O(n), where `n` is the length of `t`, for storing the positions of characters.","category":"Two Pointers"},{"id":27,"topic":"Two Sum II - Input Array Is Sorted","code":"// Find two numbers that add up to a specific target\\nvar twoSum = function(numbers, target) {\\n // Initialize two pointers: one at the start, one at the end of the array\\n let left = 0;\\n let right = numbers.length - 1;\\n\\n // Loop until the pointers meet\\n while (left < right) {\\n // Calculate the sum of the numbers at the two pointers\\n const sum = numbers[left] + numbers[right];\\n\\n // Check if the sum matches the target\\n if (sum === target) {\\n // Return the indices (1-indexed)\\n return [left + 1, right + 1];\\n } else if (sum < target) {\\n // If the sum is less than the target, move the left pointer to the right\\n left++;\\n } else {\\n // If the sum is greater than the target, move the right pointer to the left\\n right--;\\n }\\n }\\n};\\n\\n// Examples\\nconsole.log(twoSum([2,7,11,15], 9)); // Output: [1, 2]\\nconsole.log(twoSum([2,3,4], 6));     // Output: [1, 3]\\nconsole.log(twoSum([-1,0], -1));     // Output: [1, 2]\\n","explanation":"1. Two Pointers Approach:<br/> - Since the array is already sorted in non-decreasing order, we can use a two-pointer approach to find the pair efficiently.<br/> - The `left` pointer starts at the beginning of the array, and the `right` pointer starts at the end of the array.<br/><br/>2. Logic:<br/> - Calculate the sum of the numbers at the two pointers (`numbers[left]` and `numbers[right]`).<br/> - If the sum equals the target, return the indices (adding 1 to convert from 0-based to 1-based indexing).<br/> - If the sum is less than the target, move the `left` pointer to the right to increase the sum.<br/> - If the sum is greater than the target, move the `right` pointer to the left to decrease the sum.<br/><br/>3. Optimal Solution:<br/> - This approach runs in O(n) time complexity, where `n` is the length of the array, as each element is visited at most once.<br/> - The space complexity is O(1), as no additional data structures are used.<br/><br/>4. Examples:<br/> - Input: `numbers = [2,7,11,15], target = 9`<br/>   - Start: `left = 0` (`2`), `right = 3` (`15`), sum = 17 (too large, move `right`).<br/>   - Next: `left = 0` (`2`), `right = 1` (`7`), sum = 9 (match, return `[1, 2]`).<br/> - Input: `numbers = [2,3,4], target = 6`<br/>   - Start: `left = 0` (`2`), `right = 2` (`4`), sum = 6 (match, return `[1, 3]`).<br/> - Input: `numbers = [-1,0], target = -1`<br/>   - Start: `left = 0` (`-1`), `right = 1` (`0`), sum = -1 (match, return `[1, 2]`).","category":"Two Pointers"},{"id":28,"topic":"Container With Most Water","code":"// Find the container with the most water\\nvar maxArea = function (height) {\\n let left = 0; // Initialize the left pointer\\n let right = height.length - 1; // Initialize the right pointer\\n let maxArea = 0; // Variable to store the maximum area found\\n while (left < right) {\\n const currentHeight = Math.min(height[left], height[right]);\\n const currentWidth = right - left;\\n const currentArea = currentHeight * currentWidth;\\n maxArea = Math.max(maxArea, currentArea);\\n if (height[left] < height[right]) {\\n left++;\\n } else {\\n right--;\\n }\\n }\\n return maxArea;\\n};\\n\\n// Examples:\\nconsole.log(maxArea([1, 8, 6, 2, 5, 4, 8, 3, 7]));\\n// Output: 49\\n\\nconsole.log(maxArea([1, 1]));\\n// Output: 1\\n\\nconsole.log(maxArea([4, 3, 2, 1, 4]));\\n// Output: 16\\n\\nconsole.log(maxArea([1, 2, 1]));\\n// Output: 2\\n","explanation":"1. Two-pointer Approach:<br/>   - Start with two pointers, one at the beginning (`left`) and one at the end (`right`) of the array.<br/>   - Calculate the area between the two lines as:<br/>     \\\\[<br/>     \\\\text{Area} = \\\\min(\\\\text{height}[left], \\\\text{height}[right]) \\\\times (\\\\text{right} - \\\\text{left})<br/>     \\\\]<br/><br/>2. Move the Pointer:<br/>   - To maximize the area, the shorter line is the limiting factor.<br/>   - Move the pointer pointing to the shorter line inward, as it might lead to a taller line and potentially a larger area.<br/><br/>3. Update maxArea:<br/>   - Keep track of the largest area found so far.<br/><br/>4. Stop Condition:<br/>   - The loop stops when the two pointers meet.<br/><br/>Complexity:<br/>- Time Complexity: \\\\(O(n)\\\\), where \\\\(n\\\\) is the length of the `height` array. Each element is processed at most once.<br/>- Space Complexity: \\\\(O(1)\\\\), as only a few variables are used.<br/><br/>Example Walkthrough:<br/><br/>Example 1:<br/>Input: `height = [1, 8, 6, 2, 5, 4, 8, 3, 7]`<br/>- Initial: `left = 0`, `right = 8`<br/>- Iterations:<br/>  - Calculate area between heights `1` and `7`: \\\\( \\\\min(1, 7) \\\\times 8 = 8 \\\\).<br/>  - Move `left` to `1`, as `height[left] < height[right]`.<br/>  - Calculate area between `8` and `7`: \\\\( \\\\min(8, 7) \\\\times 7 = 49 \\\\).<br/>  - Update `maxArea` to `49`.<br/>  - Continue shrinking the window.<br/>- Output: `49`<br/><br/>Example 2:<br/>Input: `height = [1, 1]`<br/>- Initial: `left = 0`, `right = 1`<br/>- Calculate area: \\\\( \\\\min(1, 1) \\\\times 1 = 1 \\\\).<br/>- Output: `1`","category":"Two Pointers"},{"id":29,"topic":"3Sum","code":"var threeSum = function(nums) {\\n    console.log(\\"Input array:\\", nums);\\n    \\n    // Sort the array to simplify finding duplicates and using the two-pointer approach\\n    nums.sort((a, b) => a - b);\\n    console.log(\\"Sorted array:\\", nums);\\n\\n    const result = [];\\n    const n = nums.length;\\n\\n    // Iterate through the array, fixing the first number of the triplet\\n    for (let i = 0; i < n - 2; i++) {\\n        // Explanation: We use `i < n - 2` because we need at least two numbers after `nums[i]`\\n        // to form a triplet. If `i` were to reach `n - 2`, there wouldn\'t be enough numbers \\n        // remaining in the array to form a valid triplet.\\n        \\n        // Skip duplicates for the first number\\n        if (i > 0 && nums[i] === nums[i - 1]) {\\n            // console.log(`Skipping duplicate for nums[${i}] = ${nums[i]}`);\\n            continue;\\n        }\\n\\n        // Create two pointers: one at the element right after the current one (left)\\n        // and one at the last element (right). These pointers will be used to find pairs\\n        // that, together with nums[i], sum up to zero.\\n        let left = i + 1;\\n        let right = n - 1;\\n\\n        // console.log(`Processing nums[${i}] = ${nums[i]}`);\\n\\n        while (left < right) {\\n            // Combination of current triplet\\n            const sum = nums[i] + nums[left] + nums[right];\\n            // console.log(`Checking combination: ${nums[i]}, ${nums[left]}, ${nums[right]} (sum = ${sum})`);\\n\\n            if (sum === 0) {\\n                // console.log(`Found triplet: [${nums[i]}, ${nums[left]}, ${nums[right]}]`);\\n                \\n                // Found a valid triplet: add it to the result array\\n                result.push([nums[i], nums[left], nums[right]]);\\n                // Move the left pointer to the right, skipping any duplicates\\n                left++;\\n                // Move the right pointer to the left, skipping any duplicates\\n                right--;\\n\\n                // Skip duplicates for the second number\\n                while (left < right && nums[left] === nums[left - 1]) {\\n                    // console.log(`Skipping duplicate for nums[${left}] = ${nums[left]}`);\\n                    left++;\\n                }\\n                \\n                // Skip duplicates for the third number\\n                while (left < right && nums[right] === nums[right + 1]) {\\n                    // console.log(`Skipping duplicate for nums[${right}] = ${nums[right]}`);\\n                    right--;\\n                }\\n            } else if (sum < 0) {\\n                // console.log(`Sum < 0, incrementing left pointer from ${left} to ${left + 1}`);\\n                \\n                // If the sum is less than 0, we need a larger number to increase the sum\\n                // So, move the left pointer to the right (left++)\\n                left++;\\n            } else {\\n                // console.log(`Sum > 0, decrementing right pointer from ${right} to ${right - 1}`);\\n                \\n                // If the sum is greater than 0, we need a smaller number to decrease the sum\\n                // So, move the right pointer to the left (right--)\\n                right--;\\n            }\\n        }\\n    }\\n\\n    console.log(\\"Final result:\\", result);\\n    return result;\\n};\\n","explanation":"Explanation:<br/><br/>1. Input array: [-1, 0, 1, 2, -1, -4]<br/>   After sorting: [-4, -1, -1, 0, 1, 2]<br/><br/>2. Iterate through the array and fix the first number of the triplet.<br/><br/>3. Use two pointers (left and right) to find pairs of numbers that, when added to the first number, result in zero:<br/>   - Left pointer:<br/>     - Starts just after the current index `i` (`left = i + 1`).<br/>     - Moves forward (`left++`) if the sum of the triplet is less than zero, since the sorted order means larger numbers are needed to increase the sum.<br/>   - Right pointer:<br/>     - Starts at the last index (`right = n - 1`).<br/>     - Moves backward (`right--`) if the sum of the triplet is greater than zero, since the sorted order means smaller numbers are needed to decrease the sum.<br/>   - Together:<br/>     - `left` and `right` explore all possible pairs for the current `nums[i]`.<br/>     - If the sum of the triplet matches zero, the combination is valid, and both pointers adjust to skip duplicates.<br/>     - The process continues until `left` and `right` pointers overlap, completing all pair possibilities for the current `nums[i]`.<br/><br/>4. If a triplet is found, store it in the result array and adjust the pointers while skipping duplicates.<br/><br/>5. If the sum is less than zero, increment the left pointer to increase the sum.<br/><br/>6. If the sum is greater than zero, decrement the right pointer to decrease the sum.<br/><br/>7. Repeat this process for all elements in the array.<br/><br/>8. Return the final list of unique triplets: [[-1, -1, 2], [-1, 0, 1]].","category":"Two Pointers"},{"id":30,"topic":"Minimum Size Subarray Sum","code":"var minSubArrayLen = function(target, nums) {\\n    // Start of the sliding window\\n    let left = 0;\\n    // Current sum of the numbers within the window\\n    let sum = 0; \\n    // To store the minimum length of a valid subarray\\n    let minLength = Infinity; \\n\\n    // Iterate through the array with the right pointer\\n    for (let right = 0; right < nums.length; right++) {\\n        // Add the current element to the sum\\n        sum += nums[right]; \\n\\n        // While the current sum is greater than or equal to the target\\n        while (sum >= target) {\\n            // Calculate the length of the current subarray\\n            let currentLength = right - left + 1;\\n            // Update minLength with the smaller value between currentLength and minLength\\n            minLength = Math.min(minLength, currentLength);\\n            // Shrink the window from the left\\n            sum -= nums[left];\\n            // Move the left pointer forward\\n            left++; \\n        }\\n    }\\n\\n    // If no valid subarray was found, return 0; otherwise, return minLength\\n    return minLength === Infinity ? 0 : minLength;\\n};\\n","explanation":"Explanation:<br/><br/>1. **Definition of a window**:<br/>   - A **window** refers to a contiguous segment of the array defined by two pointers: the `left` pointer (start of the window) and the `right` pointer (end of the window).<br/>   - The elements within the window are those between the `left` and `right` indices, inclusive.<br/><br/>2. **How the window works**:<br/>   - The `right` pointer expands the window by including new elements from the array into the sum.<br/>   - The `left` pointer shrinks the window by excluding elements from the sum when the condition (sum >= target) is met.<br/>   - This dynamic adjustment ensures the algorithm considers all possible valid subarrays efficiently.<br/><br/>3. **Algorithm steps**:<br/>   - Start with an empty window (`left = 0` and `right = 0`) and a `sum = 0`.<br/>   - Expand the window by moving the `right` pointer and adding elements to `sum`.<br/>   - If the `sum` of the window meets or exceeds the `target`, calculate the window\'s length (`right - left + 1`).<br/>   - Update `minLength` if the current window is shorter than the previously found windows.<br/>   - Shrink the window by moving the `left` pointer forward and subtracting the excluded element from `sum`.<br/>   - Continue until the entire array is processed.<br/><br/>4. **Final result**:<br/>   - If no valid subarray is found (i.e., `minLength` remains `Infinity`), return 0.<br/>   - Otherwise, return the smallest length found.<br/><br/>Time Complexity: O(n) - Each element is visited at most twice (once by `right` and once by `left`).<br/>Space Complexity: O(1) - Only constant space is used.","category":"Sliding Window"},{"id":31,"topic":"Longest Substring Without Repeating Characters","code":"// Find the length of the longest substring without repeating characters\\nvar lengthOfLongestSubstring = function (s) {\\n let charSet = new Set();\\n let left = 0;\\n let maxLength = 0;\\n for (let right = 0; right < s.length; right++) {\\n while (charSet.has(s[right])) {\\n charSet.delete(s[left]);\\n left++;\\n }\\n charSet.add(s[right]);\\n maxLength = Math.max(maxLength, right - left + 1);\\n }\\n return maxLength;\\n};\\n\\n// Examples:\\nconsole.log(lengthOfLongestSubstring(\'abcabcbb\')); // Output: 3\\nconsole.log(lengthOfLongestSubstring(\'bbbbb\')); // Output: 1\\nconsole.log(lengthOfLongestSubstring(\'pwwkew\')); // Output: 3\\nconsole.log(lengthOfLongestSubstring(\'\')); // Output: 0\\nconsole.log(lengthOfLongestSubstring(\'au\')); // Output: 2\\n","explanation":"1. What is the problem asking?<br/>   - The task is to find the longest substring in a given string `s` where no characters repeat.<br/><br/>2. How are we solving this?<br/>   - We\'ll use the sliding window technique:<br/>     - Two pointers (`left` and `right`) represent the boundaries of a window.<br/>     - A set (`charSet`) keeps track of the unique characters in the current window.<br/>     - Expand the window by moving the `right` pointer.<br/>     - If a duplicate is encountered, shrink the window by moving the `left` pointer.<br/><br/>3. Why does this work?<br/>   - By maintaining a set of unique characters in the current window, we ensure that each substring between the `left` and `right` pointers contains no duplicates.<br/>   - The window is adjusted efficiently, ensuring that each character is processed at most twice (once when added and once when removed).<br/><br/>4. Complexity Analysis:<br/>   - Time Complexity: \\\\(O(n)\\\\), where \\\\(n\\\\) is the length of the string. Each character is added and removed from the set at most once.<br/>   - Space Complexity: \\\\(O(k)\\\\), where \\\\(k\\\\) is the size of the character set (for ASCII, at most 128).<br/><br/>5. Example Walkthroughs:<br/><br/>   Example 1: `s = \\"abcabcbb\\"`<br/>   - `left = 0`, `right = 0`, `charSet = {}`<br/>   - Add `\\"a\\"`, `\\"b\\"`, `\\"c\\"` -> Current substring: `\\"abc\\"`, length = 3.<br/>   - Duplicate `\\"a\\"` is found. Shrink window: Remove characters until `\\"a\\"` is removed.<br/>   - Continue expanding the window.<br/>   - Max length = 3.<br/><br/>   Example 2: `s = \\"bbbbb\\"`<br/>   - Window always contains one `\\"b\\"`.<br/>   - Max length = 1.<br/><br/>   Example 3: `s = \\"pwwkew\\"`<br/>   - Expand the window to `\\"pw\\"`, then `\\"wke\\"`.<br/>   - Duplicate `\\"w\\"` is found. Shrink and continue.<br/>   - Max length = 3.<br/><br/>6. Edge Cases:<br/>   - Empty string: `\\"\\"` -> Output: `0`.<br/>   - Single character: `\\"a\\"` -> Output: `1`.","category":"Sliding Window"},{"id":32,"topic":"Substring with Concatenation of All Words","code":"// Find all starting indices of substring(s) in s that is a concatenation of each word in words exactly once\\nvar findSubstring = function (s, words) {\\n if (!s || words.length === 0) return [];\\n const wordLength = words[0].length;\\n const wordCount = words.length;\\n const substringLength = wordLength * wordCount;\\n const wordMap = new Map();\\n for (let word of words) {\\n wordMap.set(word, (wordMap.get(word) || 0) + 1);\\n }\\n const result = [];\\n for (let i = 0; i <= s.length - substringLength; i++) {\\n const seen = new Map();\\n let j = 0;\\n while (j < wordCount) {\\n const wordStart = i + j * wordLength;\\n const word = s.substring(wordStart, wordStart + wordLength);\\n if (!wordMap.has(word)) break;\\n seen.set(word, (seen.get(word) || 0) + 1);\\n if (seen.get(word) > wordMap.get(word)) break;\\n j++;\\n }\\n if (j === wordCount) result.push(i);\\n }\\n return result;\\n};\\n\\n// Examples:\\nconsole.log(findSubstring(\'barfoothefoobarman\', [\'foo\', \'bar\'])); // Output: [0, 9]\\nconsole.log(findSubstring(\'wordgoodgoodgoodbestword\', [\'word\', \'good\', \'best\', \'word\'])); // Output: []\\nconsole.log(findSubstring(\'barfoofoobarthefoobarman\', [\'bar\', \'foo\', \'the\'])); // Output: [6, 9, 12]\\n","explanation":"1. What is the problem asking?<br/>   - Find all starting indices of substrings in `s` that are concatenations of all strings in `words`.<br/><br/>2. How do we solve this?<br/>   - Use a sliding window approach:<br/>     - Calculate the total length of the concatenated substring.<br/>     - For each possible starting index `i`, check if the substring is a valid concatenation.<br/>     - Maintain a frequency map of the words in `words` and compare it with the frequency of words in the current substring.<br/><br/>3. Key steps:<br/>   - Calculate `wordLength` (length of a single word) and `substringLength` (length of all words concatenated).<br/>   - Slide through `s` in increments of `wordLength`.<br/>   - Use a `seen` map to track the frequency of words in the current window and compare with the `wordMap`.<br/><br/>4. Complexity Analysis:<br/>   - Time Complexity: \\\\(O(n \\\\cdot k)\\\\), where \\\\(n\\\\) is the length of the string and \\\\(k\\\\) is the number of words.<br/>     - For each starting index, we iterate over all words in `words`.<br/>   - Space Complexity: \\\\(O(k)\\\\), where \\\\(k\\\\) is the number of unique words in `words`.<br/><br/>5. Edge Cases:<br/>   - Empty string `s` or `words`: Return an empty array.<br/>   - No valid substrings: Return an empty array.<br/>   - Overlapping substrings: The algorithm handles overlapping cases correctly.<br/><br/>6. Walkthrough with Example:<br/>   - Input: `s = \\"barfoothefoobarman\\", words = [\\"foo\\", \\"bar\\"]`<br/>   - `wordLength = 3`, `substringLength = 6`.<br/>   - Valid substrings:<br/>     - At index `0`: Substring = `\\"barfoo\\"`.<br/>     - At index `9`: Substring = `\\"foobar\\"`.<br/>   - Result: `[0, 9]`.","category":"Sliding Window"},{"id":33,"topic":"Minimum Window Substring","code":"// Find the minimum window substring\\nvar minWindow = function (s, t) {\\n // If `s` is shorter than `t`, it is impossible to form a valid substring.\\n if (s.length < t.length) return \'\';\\n // Create a frequency map for characters in `t`\\n const tMap = new Map();\\n for (let char of t) {\\n tMap.set(char, (tMap.get(char) || 0) + 1);\\n }\\n // Variables for sliding window technique\\n let left = 0, right = 0;\\n let required = tMap.size;\\n let formed = 0;\\n const windowCounts = new Map();\\n let minLength = Infinity;\\n let result = [0, 0];\\n // Expand the sliding window by moving the `right` pointer\\n while (right < s.length) {\\n const char = s[right];\\n windowCounts.set(char, (windowCounts.get(char) || 0) + 1);\\n if (tMap.has(char) && windowCounts.get(char) === tMap.get(char)) {\\n formed++;\\n }\\n // Shrink the window from the left while it contains all required characters\\n while (formed === required) {\\n const windowSize = right - left + 1;\\n if (windowSize < minLength) {\\n minLength = windowSize;\\n result = [left, right];\\n }\\n const leftChar = s[left];\\n windowCounts.set(leftChar, windowCounts.get(leftChar) - 1);\\n if (tMap.has(leftChar) && windowCounts.get(leftChar) < tMap.get(leftChar)) {\\n formed--;\\n }\\n left++;\\n }\\n right++;\\n }\\n return minLength === Infinity ? \'\' : s.slice(result[0], result[1] + 1);\\n};\\n\\n// Examples:\\nconsole.log(minWindow(\'ADOBECODEBANC\', \'ABC\')); // Output: \\"BANC\\"\\nconsole.log(minWindow(\'a\', \'a\')); // Output: \\"a\\"\\nconsole.log(minWindow(\'a\', \'aa\')); // Output: \\"\\"\\n","explanation":"1. Goal:<br/>   - Find the smallest substring in `s` that contains all characters of `t` (including duplicates).<br/><br/>2. Approach:<br/>   - Use the sliding window technique with two pointers (`left` and `right`).<br/>   - Maintain a frequency map (`tMap`) for characters in `t`.<br/>   - Track the number of unique characters in the current window that match the required frequency using `formed`.<br/><br/>3. Steps:<br/>   - Expand the window by moving the `right` pointer.<br/>   - When all characters in `t` are present in the window (`formed === required`), try shrinking the window by moving the `left` pointer.<br/>   - Update the result when a smaller valid window is found.<br/><br/>4. Time Complexity:<br/>   - \\\\(O(m + n)\\\\): Iterating over `s` with `right` and at most once with `left`, plus constructing `tMap`.<br/><br/>5. Space Complexity:<br/>   - \\\\(O(m + n)\\\\): Space for `tMap` and `windowCounts`.<br/><br/>6. Edge Cases:<br/>   - If `s` is shorter than `t`, return an empty string.<br/>   - If characters in `t` are not in `s`, return an empty string.<br/><br/>7. Walkthrough:<br/>   - Input: `s = \\"ADOBECODEBANC\\", t = \\"ABC\\"`<br/>   - Initial `tMap`: `{A: 1, B: 1, C: 1}`<br/>   - Sliding window:<br/>     - Expand: `ADOBE` (not valid)<br/>     - Expand: `ADOBEC` (valid, size = 6)<br/>     - Shrink: `DOBEC` (still valid, size = 5)<br/>     - Expand: Continue until finding `BANC` (size = 4).<br/>   - Output: `\\"BANC\\"`.","category":"Sliding Window"},{"id":34,"topic":"Valid Sudoku","code":"var isValidSudoku = function(board) {\\n    // Create sets to track seen numbers in rows, columns, and sub-boxes\\n    let rows = new Array(9).fill(null).map(() => new Set());\\n    let cols = new Array(9).fill(null).map(() => new Set());\\n    let boxes = new Array(9).fill(null).map(() => new Set());\\n    \\n    // Iterate through each cell in the 9x9 board\\n    for (let i = 0; i < 9; i++) {\\n        for (let j = 0; j < 9; j++) {\\n            let num = board[i][j];\\n            \\n            // If the cell is not empty\\n            if (num !== \'.\') {\\n                // Calculate the index of the sub-box (0-8)\\n                let boxIndex = Math.floor(i / 3) * 3 + Math.floor(j / 3);\\n                \\n                // Log the current number and its position\\n                console.log(`Checking number ${num} at position [${i}, ${j}]`);\\n                \\n                // Check if the number has already appeared in the row, column, or sub-box\\n                if (rows[i].has(num)) {\\n                    console.log(`Duplicate found in row ${i}: ${num}`);\\n                    return false;\\n                }\\n                if (cols[j].has(num)) {\\n                    console.log(`Duplicate found in column ${j}: ${num}`);\\n                    return false;\\n                }\\n                if (boxes[boxIndex].has(num)) {\\n                    console.log(`Duplicate found in box ${boxIndex}: ${num}`);\\n                    return false;\\n                }\\n                \\n                // Add the number to the respective row, column, and sub-box sets\\n                rows[i].add(num);\\n                cols[j].add(num);\\n                boxes[boxIndex].add(num);\\n                \\n                // Log the addition of the number\\n                console.log(`Added number ${num} to row ${i}, column ${j}, box ${boxIndex}`);\\n            }\\n        }\\n    }\\n    \\n    // If no duplicates are found, the board is valid\\n    console.log(\'The board is valid\');\\n    return true;\\n};\\n\\n// Test case 1: Valid Sudoku\\nlet board1 = [\\n    [\\"5\\", \\"3\\", \\".\\", \\".\\", \\"7\\", \\".\\", \\".\\", \\".\\", \\".\\"],\\n    [\\"6\\", \\".\\", \\".\\", \\"1\\", \\"9\\", \\"5\\", \\".\\", \\".\\", \\".\\"],\\n    [\\".\\", \\"9\\", \\"8\\", \\".\\", \\".\\", \\".\\", \\".\\", \\"6\\", \\".\\"],\\n    [\\"8\\", \\".\\", \\".\\", \\".\\", \\"6\\", \\".\\", \\".\\", \\".\\", \\"3\\"],\\n    [\\"4\\", \\".\\", \\".\\", \\"8\\", \\".\\", \\"3\\", \\".\\", \\".\\", \\"1\\"],\\n    [\\"7\\", \\".\\", \\".\\", \\".\\", \\"2\\", \\".\\", \\".\\", \\".\\", \\"6\\"],\\n    [\\".\\", \\"6\\", \\".\\", \\".\\", \\".\\", \\".\\", \\"2\\", \\"8\\", \\".\\"],\\n    [\\".\\", \\".\\", \\".\\", \\"4\\", \\"1\\", \\"9\\", \\".\\", \\".\\", \\"5\\"],\\n    [\\".\\", \\".\\", \\".\\", \\".\\", \\"8\\", \\".\\", \\".\\", \\"7\\", \\"9\\"]\\n];\\nconsole.log(isValidSudoku(board1));  // Expected output: true\\n","explanation":"Explanation:<br/><br/>1. Sets Creation:<br/>   - Creates sets for each row, column, and 3x3 sub-box to track seen numbers.<br/><br/>2. Loop through the Board:<br/>   - Iterates through each cell in the 9x9 Sudoku grid.<br/><br/>3. Check for Duplicates:<br/>   - For each non-empty cell, checks if the number has already appeared in the same row, column, or sub-box.<br/><br/>4. Return False on Duplicate:<br/>   - If a duplicate is found, logs the duplicate\'s position and returns false (indicating an invalid Sudoku board).<br/><br/>5. Track Seen Numbers:<br/>   - If no duplicates are found, adds the number to the respective row, column, and sub-box set.<br/><br/>6. Return True if Valid:<br/>   - If the entire board is checked without finding duplicates, returns true (indicating a valid Sudoku board).","category":"Matrix"},{"id":35,"topic":"Spiral Matrix","code":"// Return all elements of the matrix in spiral order\\nfunction spiralOrder(matrix) {\\n let result = [];\\n if (matrix.length === 0) return result;\\n let top = 0, bottom = matrix.length - 1;\\n let left = 0, right = matrix[0].length - 1;\\n while (top <= bottom && left <= right) {\\n for (let i = left; i <= right; i++) result.push(matrix[top][i]);\\n top++;\\n for (let i = top; i <= bottom; i++) result.push(matrix[i][right]);\\n right--;\\n if (top <= bottom) {\\n for (let i = right; i >= left; i--) result.push(matrix[bottom][i]);\\n bottom--;\\n }\\n if (left <= right) {\\n for (let i = bottom; i >= top; i--) result.push(matrix[i][left]);\\n left++;\\n }\\n }\\n return result;\\n}\\n","explanation":"This function returns all elements of the matrix in spiral order.","category":"Matrix"},{"id":36,"topic":"Rotate Image","code":"// Rotate the image by 90 degrees (clockwise)\\nfunction rotate(matrix) {\\n let n = matrix.length;\\n for (let i = 0; i < n; i++) {\\n for (let j = i; j < n; j++) {\\n [matrix[i][j], matrix[j][i]] = [matrix[j][i], matrix[i][j]];\\n }\\n }\\n for (let i = 0; i < n; i++) {\\n matrix[i].reverse();\\n }\\n}\\n","explanation":"This function rotates the image (matrix) by 90 degrees clockwise.","category":"Matrix"},{"id":37,"topic":"Set Matrix Zeroes","code":"// Set matrix zeroes\\nfunction setZeroes(matrix) {\\n let rows = new Set(), cols = new Set();\\n for (let r = 0; r < matrix.length; r++) {\\n for (let c = 0; c < matrix[0].length; c++) {\\n if (matrix[r][c] === 0) {\\n rows.add(r);\\n cols.add(c);\\n }\\n }\\n }\\n for (let r of rows) {\\n for (let c = 0; c < matrix[0].length; c++) {\\n matrix[r][c] = 0;\\n }\\n }\\n for (let c of cols) {\\n for (let r = 0; r < matrix.length; r++) {\\n matrix[r][c] = 0;\\n }\\n }\\n}\\n","explanation":"This function sets the entire row and column to zeroes if an element is zero.","category":"Matrix"},{"id":38,"topic":"Game of Life","code":"// Implement the Game of Life\\nfunction gameOfLife(board) {\\n const directions = [[0, 1], [1, 0], [1, 1], [1, -1], [-1, 0], [-1, 1], [-1, -1], [0, -1]];\\n const copyBoard = board.map(arr => [...arr]);\\n for (let r = 0; r < board.length; r++) {\\n for (let c = 0; c < board[0].length; c++) {\\n let liveNeighbors = 0;\\n for (let [dr, dc] of directions) {\\n let nr = r + dr, nc = c + dc;\\n if (nr >= 0 && nr < board.length && nc >= 0 && nc < board[0].length && copyBoard[nr][nc] === 1) {\\n liveNeighbors++;\\n }\\n }\\n if (copyBoard[r][c] === 1 && (liveNeighbors < 2 || liveNeighbors > 3)) {\\n board[r][c] = 0;\\n }\\n if (copyBoard[r][c] === 0 && liveNeighbors === 3) {\\n board[r][c] = 1;\\n }\\n }\\n }\\n}\\n","explanation":"This function implements the Game of Life according to the rules.","category":"Matrix"},{"id":39,"topic":"Ransom Note","code":"// Check if ransom note can be constructed from magazine\\nfunction canConstruct(ransomNote, magazine) {\\n let map = new Map();\\n for (let char of magazine) {\\n map.set(char, (map.get(char) || 0) + 1);\\n }\\n for (let char of ransomNote) {\\n if (!map.has(char) || map.get(char) === 0) return false;\\n map.set(char, map.get(char) - 1);\\n }\\n return true;\\n}\\n","explanation":"This function checks if a ransom note can be constructed from the letters in a magazine.","category":"Hashmap"},{"id":40,"topic":"Isomorphic Strings","code":"// Check if two strings are isomorphic\\nfunction isIsomorphic(s, t) {\\n let mapS = new Map(), mapT = new Map();\\n for (let i = 0; i < s.length; i++) {\\n let charS = s[i], charT = t[i];\\n if ((mapS.has(charS) && mapS.get(charS) !== charT) || (mapT.has(charT) && mapT.get(charT) !== charS)) return false;\\n mapS.set(charS, charT);\\n mapT.set(charT, charS);\\n }\\n return true;\\n}\\n","explanation":"This function checks if two strings are isomorphic.","category":"Hashmap"},{"id":41,"topic":"Word Pattern","code":"function wordPattern(pattern, s) {\\n // Split the string s into an array of words. This creates an array where each element is a word from the input string.\\n const words = s.split(\' \');\\n // If the number of elements in the pattern does not match the number of words, return false.\\n // This is a quick check to ensure that the one-to-one mapping can exist.\\n if (pattern.length !== words.length) { // If lengths are different, the pattern cannot match the words.\\n return false; \\n }\\n // Initialize two maps to store the character-to-word and word-to-character correspondences.\\n // These maps will help track what each character in the pattern maps to and vice versa.\\n const charToWordMap = new Map();\\n const wordToCharMap = new Map();\\n // This loop goes through each character in the pattern and its corresponding word in the words array.\\n for (let i = 0; i < pattern.length; ++i) {\\n const char = pattern[i]; // Current character from the pattern.\\n const word = words[i]; // Current word from the string.\\n // Check if the current character is already associated with a different word. If the character is already in the charToWordMap and it maps \\n // to a word different from the current one, it indicates a conflict in mapping and thus the pattern cannot match.\\n if (charToWordMap.has(char)) {\\n if (charToWordMap.get(char) !== word) {\\n return false; // Mismatch found, return false.\\n }\\n }\\n // Check if the current word is already associated with a different character. Similar to the previous check, if the word is already mapped \\n // to a character different from the current one,this also indicates a conflict.\\n if (wordToCharMap.has(word)) {\\n if (wordToCharMap.get(word) !== char) {\\n return false; // Mismatch found, return false.\\n }\\n }\\n // Add the current character-to-word and word-to-character association to the maps. If no conflicts were found, we can safely set the \\n //mapping for both the character and the word.\\n charToWordMap.set(char, word);\\n wordToCharMap.set(word, char);\\n }\\n // If no mismatch was found, return true. This means all characters and words have been successfully mapped without any conflicts.\\n return true;\\n}\\n// Example usage\\nconsole.log(wordPattern(\\"abba\\", \\"dog cat cat dog\\")); // Output: true\\nconsole.log(wordPattern(\\"abba\\", \\"dog cat cat fish\\")); // Output: false\\nconsole.log(wordPattern(\\"aaaa\\", \\"dog cat cat dog\\")); // Output: false\\nconsole.log(wordPattern(\\"abba\\", \\"dog constructor constructor dog\\")); // Output: true\\n","explanation":"1. Input Parameters:<br/>   - `pattern`: A string where each character represents a pattern to match.<br/>   - `s`: A string where words are expected to correspond to characters in `pattern`.<br/><br/>2. Splitting the Input String:<br/>   - `s.split(\' \')` splits the string `s` into an array of words using spaces as separators.<br/><br/>3. Quick Length Check:<br/>   - If the length of the `pattern` does not match the number of words in `s`, we return `false` immediately, as no one-to-one mapping can exist.<br/><br/>4. Maps for Mappings:<br/>   - `charToWordMap`: A map that tracks the mapping of characters from `pattern` to words.<br/>   - `wordToCharMap`: A map that tracks the reverse mapping, ensuring no word is assigned to more than one character.<br/><br/>5. Iteration over the Pattern:<br/>   - The function iterates through each character in `pattern` and its corresponding word in `words`:<br/>     - If the character is already mapped to a different word, it returns `false`.<br/>     - If the word is already mapped to a different character, it also returns `false`.<br/><br/>6. Returning the Result:<br/>   - If no conflicts are found after checking all the mappings, the function returns `true`, indicating a consistent one-to-one mapping exists between the pattern and the words.<br/><br/>7. Example Outputs:<br/>   - `\\"abba\\", \\"dog cat cat dog\\"` \u2192 `true`: The mapping is consistent (a \u2192 dog, b \u2192 cat).<br/>   - `\\"abba\\", \\"dog cat cat fish\\"` \u2192 `false`: The word \\"fish\\" doesn\'t match the expected \\"dog\\" for the first \\"a\\".<br/>   - `\\"aaaa\\", \\"dog cat cat dog\\"` \u2192 `false`: The word \\"cat\\" can\'t map to multiple characters.","category":"Hashmap"},{"id":42,"topic":"Valid Anagram","code":"// Check if two strings are anagrams\\nfunction isAnagram(s, t) {\\n if (s.length !== t.length) return false;\\n let map = new Map();\\n for (let char of s) {\\n map.set(char, (map.get(char) || 0) + 1);\\n }\\n for (let char of t) {\\n if (!map.has(char) || map.get(char) === 0) return false;\\n map.set(char, map.get(char) - 1);\\n }\\n return true;\\n}\\n","explanation":"This function checks if two strings are anagrams.","category":"Hashmap"},{"id":43,"topic":"Group Anagrams","code":"// Group anagrams\\nfunction groupAnagrams(strs) {\\n let map = new Map();\\n for (let str of strs) {\\n let sortedStr = str.split(\'\').sort().join(\'\');\\n if (!map.has(sortedStr)) map.set(sortedStr, []);\\n map.get(sortedStr).push(str);\\n }\\n return Array.from(map.values());\\n}\\n","explanation":"This function groups anagrams together.","category":"Hashmap"},{"id":44,"topic":"Two Sum","code":"var twoSum = function (nums, target) {\\n    // Initialize a hash map to store elements and their indices\\n    const map = new Map();\\n\\n    // Loop through the array with index `i`\\n    for (let i = 0; i < nums.length; i++) {\\n        // Calculate the complement that we need to reach the target\\n        const complement = target - nums[i];\\n\\n        // Check if the complement is in the map\\n        if (map.has(complement)) {\\n            // If found, return the indices [map.get(complement), i]\\n            return [map.get(complement), i];\\n        }\\n\\n        // Store the current element with its index in the map\\n        map.set(nums[i], i);\\n    }\\n\\n    // Return an empty array if no solution is found (though the problem guarantees one solution exists)\\n    return [];\\n};\\n","explanation":"Explanation of Each Step:<br/><br/>1. Hash Map Initialization:<br/>   - We initialize an empty map to store each number and its index as we iterate through `nums`.<br/><br/>2. Looping Through nums:<br/>   - For each number `nums[i]`, we calculate the `complement`, which is the difference between the `target` and `nums[i]`.<br/>   - We check if this `complement` exists in the map. If it does, it means that we have previously encountered a number that pairs with `nums[i]` to reach the target.<br/><br/>3. Returning the Solution:<br/>   - If the complement is found in the map, we return the indices of the two numbers: `[map.get(complement), i]`.<br/>   - If the complement is not found, we store the current number and its index in the map to check against future elements.<br/><br/>4. Complexity:<br/>   - **Time Complexity**: O(n) since we only iterate through the array once.<br/>   - **Space Complexity**: O(n) due to the hash map storing up to n elements.","category":"Hashmap"},{"id":45,"topic":"Happy Number","code":"var isHappy = function(n) {\\n    // A set to track previously encountered numbers to detect cycles\\n    let seen = new Set();\\n\\n    // Loop until n becomes 1 (happy) or we detect a cycle (repeated number)\\n    while (n !== 1) {\\n        console.log(`Current number: ${n}`);\\n\\n        // If the number has been seen before, it means we\'re in a cycle\\n        if (seen.has(n)) {\\n            console.log(`Cycle detected: ${n} has already been seen.`);\\n            return false;\\n        }\\n\\n        // Add the current number to the set to track it\\n        seen.add(n);\\n\\n        // Calculate the sum of the squares of the digits of n\\n        let sumOfSquares = 0;\\n        let temp = n; // Temporary variable to calculate sum of squares\\n        while (temp > 0) {\\n            let digit = temp % 10;            // Extract the last digit of n\\n            sumOfSquares += digit * digit;    // Add the square of the digit to the sum\\n            temp = Math.floor(temp / 10);     // Remove the last digit from n\\n        }\\n\\n        // Log the sum of squares of digits\\n        console.log(`Sum of squares of digits: ${sumOfSquares}`);\\n\\n        // Update n to the sum of the squares of its digits\\n        n = sumOfSquares;\\n    }\\n\\n    // If n reaches 1, it\'s a happy number\\n    console.log(`Happy number found: ${n}`);\\n    return true;\\n};\\n","explanation":"Explanation:<br/><br/>1. The set `seen` is used to track numbers we\'ve already encountered, allowing us to detect cycles.<br/><br/>2. The number `n` is repeatedly replaced with the sum of the squares of its digits.<br/><br/>3. If `n` becomes 1, the function returns true, indicating it is a happy number.<br/><br/>4. If `n` repeats (cycle detected), the function returns false, indicating it\'s not a happy number.","category":"Hashmap"},{"id":46,"topic":"Contains Duplicate II","code":"// Check if the array contains duplicates within k distance\\nfunction containsNearbyDuplicate(nums, k) {\\n let map = new Map();\\n for (let i = 0; i < nums.length; i++) {\\n if (map.has(nums[i]) && i - map.get(nums[i]) <= k) return true;\\n map.set(nums[i], i);\\n }\\n return false;\\n}\\n","explanation":"This function checks if the array contains duplicates within k distance.","category":"Hashmap"},{"id":47,"topic":"Longest Consecutive Sequence","code":"// Find the length of the longest consecutive sequence\\nfunction longestConsecutive(nums) {\\n let set = new Set(nums);\\n let maxLength = 0;\\n for (let num of nums) {\\n if (!set.has(num - 1)) {\\n let length = 0;\\n while (set.has(num + length)) length++;\\n maxLength = Math.max(maxLength, length);\\n }\\n }\\n return maxLength;\\n}\\n","explanation":"This function finds the length of the longest consecutive sequence in an array.","category":"Hashmap"},{"id":48,"topic":"Summary Ranges","code":"// Find summary ranges\\nvar summaryRanges = function(nums) {\\n    // Edge case: If the input array is empty, return an empty array.\\n    if (nums.length === 0) return [];\\n\\n    let result = []; // Array to store the resulting ranges.\\n    let start = nums[0]; // Starting number of the current range.\\n\\n    // Log initial values.\\n    console.log(\\"Initial nums array:\\", nums);\\n\\n    // Iterate through the array starting from the second element.\\n    for (let i = 1; i <= nums.length; i++) {\\n        // Log the current iteration details.\\n        console.log(`Iteration ${i}: Current number = ${nums[i-1]}, Start = ${start}`);\\n\\n        // Check if we are at the end of the array or if the current number is not consecutive.\\n        if (i === nums.length || nums[i] !== nums[i - 1] + 1) {\\n            // Log range detection.\\n            console.log(`Range detected from ${start} to ${nums[i - 1]}`);\\n\\n            // Determine the range and add it to the result.\\n            if (start === nums[i - 1]) {\\n                result.push(`${start}`); // Single number range.\\n                console.log(`Added single number: ${start}`);\\n            } else {\\n                result.push(`${start}->${nums[i - 1]}`); // Continuous range.\\n                console.log(`Added range: ${start}->${nums[i - 1]}`);\\n            }\\n\\n            // Update `start` for the next range.\\n            if (i < nums.length) start = nums[i];\\n            console.log(`Updated start for next range: ${start}`);\\n        }\\n    }\\n    console.log(\\"Final result:\\", result);\\n\\n    return result;\\n};\\n","explanation":"Explanation:<br/>1. Initialization:<br/>   - We set `start` to the first element of the `nums` array, marking the beginning of the first range.<br/><br/>2. Loop through the Array:<br/>   - We iterate through the `nums` array starting from the second element.<br/>   - In each iteration:<br/>     - We check if the current number is consecutive to the previous one. If not, this indicates the end of the current range.<br/>     - We construct the range and add it to the `result` array in the appropriate format:<br/>       - If `start` equals `nums[i - 1]`, we add the single number range `start`.<br/>       - Otherwise, we add the continuous range in the format `start->nums[i - 1]`.<br/>     - We update `start` to `nums[i]` if `i < nums.length` to prepare for the next range.<br/><br/>3. Edge Case Handling:<br/>   - If the array is empty, we return an empty array.<br/><br/>Example Walkthrough:<br/>- For input `nums = [0,1,2,4,5,7]`:<br/>  - We start with `start = 0` and form the range \\"0->2\\".<br/>  - Next, `4, 5` form the range \\"4->5\\".<br/>  - Finally, `7` is a single number, so we add \\"7\\" to the result.<br/>  - The resulting array is [\\"0->2\\", \\"4->5\\", \\"7\\"].<br/><br/>- For input `nums = [0,2,3,4,6,8,9]`:<br/>  - The first number is `0`, so the range is \\"0\\".<br/>  - `2, 3, 4` form the range \\"2->4\\".<br/>  - `6` is a single number, so we add \\"6\\" to the result.<br/>  - `8, 9` form the range \\"8->9\\".<br/>  - The resulting array is [\\"0\\", \\"2->4\\", \\"6\\", \\"8->9\\"].<br/><br/>Time and Space Complexity:<br/>- Time Complexity: O(n), where `n` is the number of elements in `nums`. We iterate through the array once.<br/>- Space Complexity: O(k), where `k` is the number of ranges in the result array. In the worst case, this is O(n) if there are no consecutive numbers.","category":"Intervals"},{"id":49,"topic":"Merge Intervals","code":"// Merge overlapping intervals\\nfunction merge(intervals) {\\n if (!intervals.length) return [];\\n intervals.sort((a, b) => a[0] - b[0]);\\n let merged = [intervals[0]];\\n for (let i = 1; i < intervals.length; i++) {\\n let [prevStart, prevEnd] = merged[merged.length - 1];\\n let [currStart, currEnd] = intervals[i];\\n if (currStart <= prevEnd) {\\n merged[merged.length - 1][1] = Math.max(prevEnd, currEnd);\\n } else {\\n merged.push(intervals[i]);\\n }\\n }\\n return merged;\\n}\\n","explanation":"This function merges overlapping intervals in an array.","category":"Intervals"},{"id":50,"topic":"Insert Interval","code":"// Insert a new interval into a list of non-overlapping intervals\\nfunction insert(intervals, newInterval) {\\n let result = [];\\n let i = 0;\\n while (i < intervals.length && intervals[i][1] < newInterval[0]) {\\n result.push(intervals[i++]);\\n }\\n while (i < intervals.length && intervals[i][0] <= newInterval[1]) {\\n newInterval[0] = Math.min(newInterval[0], intervals[i][0]);\\n newInterval[1] = Math.max(newInterval[1], intervals[i][1]);\\n i++;\\n }\\n result.push(newInterval);\\n while (i < intervals.length) {\\n result.push(intervals[i++]);\\n }\\n return result;\\n}\\n","explanation":"This function inserts a new interval into a list of non-overlapping intervals and merges if necessary.","category":"Intervals"},{"id":51,"topic":"Minimum Number of Arrows to Burst Balloons","code":"// Find the minimum number of arrows to burst all balloons\\nfunction findMinArrowShots(points) {\\n if (!points.length) return 0;\\n points.sort((a, b) => a[1] - b[1]);\\n let arrows = 1, end = points[0][1];\\n for (let i = 1; i < points.length; i++) {\\n if (points[i][0] > end) {\\n arrows++;\\n end = points[i][1];\\n }\\n }\\n return arrows;\\n}\\n","explanation":"This function finds the minimum number of arrows required to burst all balloons represented as intervals.","category":"Intervals"},{"id":52,"topic":"Valid Parentheses","code":"// Check if the parentheses are valid\\nconst isValid = function(s) {\\n     console.log(\\"Initial Stack:\\", s);\\n    // Stack to keep track of opening brackets\\n    const stack = [];\\n    // Map to match closing brackets with their respective opening brackets\\n    const matchingBrackets = {\\n        \')\': \'(\',\\n        \'}\': \'{\',\\n        \']\': \'[\'\\n    };\\n    \\n    for (let char of s) {\\n        if (char === \'(\' || char === \'{\' || char === \'[\') {\\n            // Push opening brackets onto the stack\\n            stack.push(char);\\n            console.log(`Pushed ${char} onto the stack:`, stack);\\n        } else {\\n            // Check if the stack is empty or if the top of the stack doesn\'t match\\n            if (stack.length === 0) {\\n                console.log(`Stack is empty when encountering ${char}`);\\n                return false;\\n            }\\n            if (stack[stack.length - 1] !== matchingBrackets[char]) {\\n                console.log(`Mismatch found: expected ${matchingBrackets[char]}, found ${char}`);\\n                return false;\\n            }\\n            // Pop the matched opening bracket\\n            console.log(`Popped ${stack[stack.length - 1]} for ${char}`);\\n            stack.pop();\\n        }\\n    }\\n    \\n    // Final state of the stack\\n    console.log(\\"Final stack state:\\", stack);\\n    // If the stack is empty, all brackets were matched correctly\\n    return stack.length === 0;\\n};\\n\\n// Example usage\\nconsole.log(\\"true?: \\", isValid(\\"()[]{}\\"));  // Expected output: true\\nconsole.log(\\"false?: \\", isValid(\\"(]\\"));      // Expected output: false\\nconsole.log(\\"true?: \\", isValid(\\"([{}])\\"));  // Expected output: true\\nconsole.log(\\"false?: \\", isValid(\\"((()))]\\")); // Expected output: false\\n","explanation":"Explanation<br/>Initial Logging:<br/><br/>console.log(\\"Initial Stack:\\", s); logs the input string to give context about the input before processing.<br/>Setting Up the Stack:<br/><br/>const stack = []; initializes an empty stack to keep track of opening brackets. This stack helps ensure that each opening bracket has a corresponding and correctly ordered closing bracket.<br/>Matching Map for Closing Brackets:<br/><br/>const matchingBrackets = { \')\': \'(\', \'}\': \'{\', \']\': \'[\' }; defines a dictionary mapping each closing bracket to its respective opening bracket. This will make it easy to check if each closing bracket has a corresponding opening bracket in the correct order.<br/>Iterating through the Characters in the String:<br/><br/>The function iterates through each character in the input string s with for (let char of s).<br/><br/>If the character is an opening bracket ((, {, or [):<br/><br/>stack.push(char); pushes the character onto the stack.<br/>console.log(...) logs that the character has been pushed, displaying the current stack\u2019s state.<br/>If the character is a closing bracket (), }, or ]):<br/><br/>Empty Stack Check:<br/>if (stack.length === 0) checks if the stack is empty. If true, it logs this and returns false because there\u2019s no opening bracket for this closing bracket, making the string invalid.<br/>Mismatched Brackets Check:<br/>if (stack[stack.length - 1] !== matchingBrackets[char]) compares the last pushed opening bracket (top of the stack) with the expected matching bracket from matchingBrackets. If they don\u2019t match, it logs this mismatch and returns false.<br/>Matching Brackets:<br/>If the closing bracket matches the top opening bracket, stack.pop() removes this opening bracket from the stack, effectively \u201cmatching\u201d this pair of brackets.<br/>console.log(...) logs this successful pop, showing which bracket was removed from the stack for the matched closing bracket.<br/>Final Stack Check:<br/><br/>After the loop, console.log(\\"Final stack state:\\", stack); logs the state of the stack. For the string to be valid, the stack should be empty; this would mean all opening brackets were properly closed and matched.<br/>return stack.length === 0; returns true if the stack is empty (valid string) and false otherwise (invalid string).","category":"Stack"},{"id":53,"topic":"Simplify Path","code":"// Simplify the file path\\nfunction simplifyPath(path) {\\n let stack = [];\\n let parts = path.split(\'/\');\\n for (let part of parts) {\\n if (part === \'\' || part === \'.\') continue;\\n if (part === \'..\') stack.pop();\\n else stack.push(part);\\n }\\n return \'/\' + stack.join(\'/\');\\n}\\n","explanation":"This function simplifies a given file path.","category":"Stack"},{"id":54,"topic":"Min Stack","code":"// Implement a stack that supports push, pop, top, and retrieving the minimum element\\nclass MinStack {\\n constructor() {\\n this.stack = [];\\n this.minStack = [];\\n }\\n push(val) {\\n this.stack.push(val);\\n if (this.minStack.length === 0 || val <= this.minStack[this.minStack.length - 1]) {\\n this.minStack.push(val);\\n }\\n }\\n pop() {\\n let val = this.stack.pop();\\n if (val === this.minStack[this.minStack.length - 1]) {\\n this.minStack.pop();\\n }\\n }\\n top() {\\n return this.stack[this.stack.length - 1];\\n }\\n getMin() {\\n return this.minStack[this.minStack.length - 1];\\n }\\n}\\n","explanation":"This class implements a stack that supports push, pop, top, and retrieving the minimum element in constant time.","category":"Stack"},{"id":55,"topic":"Evaluate Reverse Polish Notation","code":"// Evaluate the value of an arithmetic expression in Reverse Polish Notation\\nfunction evalRPN(tokens) {\\n let stack = [];\\n for (let token of tokens) {\\n if (!isNaN(token)) stack.push(Number(token));\\n else {\\n let b = stack.pop(), a = stack.pop();\\n switch (token) {\\n case \'+\': stack.push(a + b); break;\\n case \'-\': stack.push(a - b); break;\\n case \'*\': stack.push(a * b); break;\\n case \'/\': stack.push(Math.trunc(a / b)); break;\\n }\\n }\\n }\\n return stack[0];\\n}\\n","explanation":"This function evaluates the value of an arithmetic expression in Reverse Polish Notation.","category":"Stack"},{"id":56,"topic":"Basic Calculator","code":"// Implement a basic calculator to evaluate a simple expression string\\nfunction calculate(s) {\\n let stack = [], num = 0, sign = 1, result = 0;\\n for (let char of s) {\\n if (!isNaN(char) && char !== \' \') num = num * 10 + Number(char);\\n else if (char === \'+\') {\\n result += sign * num;\\n num = 0;\\n sign = 1;\\n } else if (char === \'-\') {\\n result += sign * num;\\n num = 0;\\n sign = -1;\\n } else if (char === \'(\') {\\n stack.push(result);\\n stack.push(sign);\\n result = 0;\\n sign = 1;\\n } else if (char === \')\') {\\n result += sign * num;\\n num = 0;\\n result *= stack.pop();\\n result += stack.pop();\\n }\\n }\\n return result + (sign * num);\\n}\\n","explanation":"This function implements a basic calculator to evaluate a simple expression string.","category":"Stack"},{"id":57,"topic":"Linked List Cycle","code":"// Check if a linked list has a cycle\\nvar hasCycle = function(head) {\\n // Edge case: A list with no nodes or only one node cannot have a cycle.\\n if (!head || !head.next) return false;\\n \\n // Initialize two pointers: \\n // \'slow\' moves one step at a time, while \'fast\' moves two steps at a time.\\n let slow = head;\\n let fast = head;\\n \\n // Traverse the list using the two pointers.\\n while (fast && fast.next) {\\n slow = slow.next; // Move \'slow\' one step forward.\\n fast = fast.next.next; // Move \'fast\' two steps forward.\\n \\n // If \'slow\' and \'fast\' meet, a cycle exists in the list.\\n if (slow === fast) {\\n return true;\\n }\\n }\\n \\n // If the loop ends, it means \'fast\' reached the end of the list (no cycle).\\n return false;\\n};\\n","explanation":"Explanation:<br/><br/>1. Edge Case Handling:<br/>   - If the list is empty (`head` is null) or has only one node (`head.next` is null), <br/>     it cannot contain a cycle, so we return false.<br/><br/>2. Pointer Initialization:<br/>   - \'slow\' pointer moves one step at a time.<br/>   - \'fast\' pointer moves two steps at a time.<br/><br/>3. Cycle Detection:<br/>   - As \'fast\' moves faster, if a cycle exists, \'slow\' and \'fast\' will eventually <br/>     meet within the cycle.<br/>   - If \'fast\' or \'fast.next\' becomes null, it means the list has no cycle.<br/><br/>4. Return Value:<br/>   - If the two pointers meet, return true (a cycle is detected).<br/>   - If the loop terminates without the pointers meeting, return false (no cycle).<br/><br/>Example Use Cases:<br/>- Input: [3, 2, 0, -4] with pos = 1 (tail connects to the node at index 1)<br/>  Output: true (cycle detected).<br/>- Input: [1, 2] with pos = 0 (tail connects to the head)<br/>  Output: true (cycle detected).<br/>- Input: [1] with pos = -1 (no cycle)<br/>  Output: false (no cycle).","category":"Linked List"},{"id":58,"topic":"Add Two Numbers","code":"// Add two numbers represented by linked lists\\nfunction addTwoNumbers(l1, l2) {\\n let dummy = new ListNode(0);\\n let p = l1, q = l2, current = dummy;\\n let carry = 0;\\n while (p || q) {\\n let x = p ? p.val : 0;\\n let y = q ? q.val : 0;\\n let sum = carry + x + y;\\n carry = Math.floor(sum / 10);\\n current.next = new ListNode(sum % 10);\\n current = current.next;\\n if (p) p = p.next;\\n if (q) q = q.next;\\n }\\n if (carry > 0) {\\n current.next = new ListNode(carry);\\n }\\n return dummy.next;\\n}\\n","explanation":"This function adds two numbers represented by linked lists and returns the sum as a linked list.","category":"Linked List"},{"id":59,"topic":"Merge Two Sorted Lists","code":"// Merge two sorted linked lists\\nfunction mergeTwoLists(l1, l2) {\\n let dummy = new ListNode(0);\\n let current = dummy;\\n while (l1 && l2) {\\n if (l1.val < l2.val) {\\n current.next = l1;\\n l1 = l1.next;\\n } else {\\n current.next = l2;\\n l2 = l2.next;\\n }\\n current = current.next;\\n }\\n current.next = l1 ? l1 : l2;\\n return dummy.next;\\n}\\n","explanation":"This function merges two sorted linked lists and returns the merged list.","category":"Linked List"},{"id":60,"topic":"Copy List with Random Pointer","code":"// Copy a linked list with random pointer\\nfunction copyRandomList(head) {\\n if (!head) return null;\\n let map = new Map();\\n let current = head;\\n while (current) {\\n map.set(current, new ListNode(current.val));\\n current = current.next;\\n }\\n current = head;\\n while (current) {\\n map.get(current).next = map.get(current.next) || null;\\n map.get(current).random = map.get(current.random) || null;\\n current = current.next;\\n }\\n return map.get(head);\\n}\\n","explanation":"This function copies a linked list with random pointers and returns the deep copy.","category":"Linked List"},{"id":61,"topic":"Reverse Linked List II","code":"// Reverse a linked list from position m to n\\nfunction reverseBetween(head, m, n) {\\n if (!head) return null;\\n let dummy = new ListNode(0);\\n dummy.next = head;\\n let prev = dummy;\\n for (let i = 1; i < m; i++) prev = prev.next;\\n let start = prev.next;\\n let then = start.next;\\n for (let i = 0; i < n - m; i++) {\\n start.next = then.next;\\n then.next = prev.next;\\n prev.next = then;\\n then = start.next;\\n }\\n return dummy.next;\\n}\\n","explanation":"This function reverses a linked list from position m to n.","category":"Linked List"},{"id":62,"topic":"Reverse Nodes in k-Group","code":"// Reverse nodes in k-group\\nfunction reverseKGroup(head, k) {\\n let count = 0;\\n let node = head;\\n while (node && count < k) {\\n node = node.next;\\n count++;\\n }\\n if (count === k) {\\n let reversedHead = reverse(head, k);\\n head.next = reverseKGroup(node, k);\\n return reversedHead;\\n }\\n return head;\\n}\\nfunction reverse(head, k) {\\n let prev = null, current = head;\\n while (k--) {\\n let next = current.next;\\n current.next = prev;\\n prev = current;\\n current = next;\\n }\\n return prev;\\n}\\n","explanation":"This function reverses nodes in k-group in a linked list.","category":"Linked List"},{"id":63,"topic":"Remove Nth Node From End of List","code":"// Remove the nth node from the end of the list\\nfunction removeNthFromEnd(head, n) {\\n let dummy = new ListNode(0);\\n dummy.next = head;\\n let first = dummy, second = dummy;\\n for (let i = 0; i <= n; i++) first = first.next;\\n while (first) {\\n first = first.next;\\n second = second.next;\\n }\\n second.next = second.next.next;\\n return dummy.next;\\n}\\n","explanation":"This function removes the nth node from the end of the list.","category":"Linked List"},{"id":64,"topic":"Remove Duplicates from Sorted List II","code":"// Remove duplicates from sorted list\\nfunction deleteDuplicates(head) {\\n let dummy = new ListNode(0);\\n dummy.next = head;\\n let prev = dummy;\\n while (head) {\\n if (head.next && head.val === head.next.val) {\\n while (head.next && head.val === head.next.val) head = head.next;\\n prev.next = head.next;\\n } else {\\n prev = prev.next;\\n }\\n head = head.next;\\n }\\n return dummy.next;\\n}\\n","explanation":"This function removes duplicates from a sorted linked list.","category":"Linked List"},{"id":65,"topic":"Rotate List","code":"// Rotate a linked list to the right by k places\\nfunction rotateRight(head, k) {\\n if (!head || !head.next) return head;\\n let length = 1;\\n let tail = head;\\n while (tail.next) {\\n tail = tail.next;\\n length++;\\n }\\n k = k % length;\\n if (k === 0) return head;\\n tail.next = head;\\n for (let i = 0; i < length - k; i++) tail = tail.next;\\n let newHead = tail.next;\\n tail.next = null;\\n return newHead;\\n}\\n","explanation":"This function rotates a linked list to the right by k places.","category":"Linked List"},{"id":66,"topic":"Partition List","code":"// Partition a linked list around a value x\\nfunction partition(head, x) {\\n let before = new ListNode(0), after = new ListNode(0);\\n let beforeHead = before, afterHead = after;\\n while (head) {\\n if (head.val < x) {\\n before.next = head;\\n before = before.next;\\n } else {\\n after.next = head;\\n after = after.next;\\n }\\n head = head.next;\\n }\\n after.next = null;\\n before.next = afterHead.next;\\n return beforeHead.next;\\n}\\n","explanation":"This function partitions a linked list around a value x.","category":"Linked List"},{"id":67,"topic":"LRU Cache","code":"// Implement LRU Cache\\nclass LRUCache {\\n constructor(capacity) {\\n this.capacity = capacity;\\n this.cache = new Map();\\n }\\n get(key) {\\n if (!this.cache.has(key)) return -1;\\n let value = this.cache.get(key);\\n this.cache.delete(key);\\n this.cache.set(key, value);\\n return value;\\n }\\n put(key, value) {\\n if (this.cache.has(key)) this.cache.delete(key);\\n this.cache.set(key, value);\\n if (this.cache.size > this.capacity) this.cache.delete(this.cache.keys().next().value);\\n }\\n}\\n","explanation":"This class implements an LRU Cache.","category":"Linked List"},{"id":68,"topic":"Maximum Depth of Binary Tree","code":"var maxDepth = function(root) {\\n    // Base case: if the node is null, the depth is 0\\n    if (root === null) {\\n        console.log(\\"Reached a null node, returning depth of 0.\\");\\n        return 0;\\n    }\\n\\n    // Log the current node being processed\\n    console.log(`Processing node with value: ${root.val}`);\\n\\n    // Recursively find the depth of the left and right subtrees\\n    const leftDepth = maxDepth(root.left);\\n    const rightDepth = maxDepth(root.right);\\n\\n    // Log the depths of the left and right subtrees\\n    console.log(`At node ${root.val}: Left Subtree Depth: ${leftDepth}, Right Subtree Depth: ${rightDepth}`);\\n\\n    // The depth of the current node is the maximum depth of the left and right subtrees, plus 1 for the current node\\n    const currentDepth = Math.max(leftDepth, rightDepth) + 1;\\n\\n    // Log the calculated depth for the current node\\n    console.log(`At node ${root.val}: Returning Depth: ${currentDepth}`);\\n\\n    return currentDepth;\\n};\\n\\n// Test 1: Tree: [3,9,20,null,null,15,7]\\n// ERD: \\n//      3\\n//     / \\\\\\n//    9   20\\n//        /  \\\\\\n//       15   7\\nconst testTree1 = new TreeNode(3);\\ntestTree1.left = new TreeNode(9);\\ntestTree1.right = new TreeNode(20);\\ntestTree1.right.left = new TreeNode(15);\\ntestTree1.right.right = new TreeNode(7);\\n\\nconsole.log(\\"Test 1 - Expected: 3, Result:\\", maxDepth(testTree1)); // Expected: 3\\n","explanation":"This function finds the maximum depth of a binary tree.","category":"Binary Tree General"},{"id":69,"topic":"Same Tree","code":"// Check if two binary trees are the same\\nfunction isSameTree(p, q) {\\n if (!p && !q) return true;\\n if (!p || !q || p.val !== q.val) return false;\\n return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);\\n}\\n","explanation":"This function checks if two binary trees are the same.","category":"Binary Tree General"},{"id":70,"topic":"Invert Binary Tree","code":"// Invert a binary tree\\nfunction invertTree(root) {\\n if (!root) return null;\\n let left = invertTree(root.left);\\n let right = invertTree(root.right);\\n root.left = right;\\n root.right = left;\\n return root;\\n}\\n","explanation":"This function inverts a binary tree.","category":"Binary Tree General"},{"id":71,"topic":"Symmetric Tree","code":"// Check if a binary tree is symmetric\\nfunction isSymmetric(root) {\\n if (!root) return true;\\n function isMirror(t1, t2) {\\n if (!t1 && !t2) return true;\\n if (!t1 || !t2 || t1.val !== t2.val) return false;\\n return isMirror(t1.left, t2.right) && isMirror(t1.right, t2.left);\\n }\\n return isMirror(root.left, root.right);\\n}\\n","explanation":"This function checks if a binary tree is symmetric.","category":"Binary Tree General"},{"id":72,"topic":"Construct Binary Tree from Preorder and Inorder Traversal","code":"// Construct binary tree from preorder and inorder traversal\\nfunction buildTree(preorder, inorder) {\\n if (!preorder.length || !inorder.length) return null;\\n let root = new TreeNode(preorder[0]);\\n let mid = inorder.indexOf(preorder[0]);\\n root.left = buildTree(preorder.slice(1, mid + 1), inorder.slice(0, mid));\\n root.right = buildTree(preorder.slice(mid + 1), inorder.slice(mid + 1));\\n return root;\\n}\\n","explanation":"This function constructs a binary tree from preorder and inorder traversal.","category":"Binary Tree General"},{"id":73,"topic":"Construct Binary Tree from Inorder and Postorder Traversal","code":"// Construct binary tree from inorder and postorder traversal\\nfunction buildTree(inorder, postorder) {\\n if (!inorder.length || !postorder.length) return null;\\n let root = new TreeNode(postorder.pop());\\n let mid = inorder.indexOf(root.val);\\n root.right = buildTree(inorder.slice(mid + 1), postorder);\\n root.left = buildTree(inorder.slice(0, mid), postorder);\\n return root;\\n}\\n","explanation":"This function constructs a binary tree from inorder and postorder traversal.","category":"Binary Tree General"},{"id":74,"topic":"Populating Next Right Pointers in Each Node II","code":"// Populate next right pointers in each node\\nfunction connect(root) {\\n if (!root) return null;\\n let queue = [root];\\n while (queue.length) {\\n let size = queue.length;\\n for (let i = 0; i < size; i++) {\\n let node = queue.shift();\\n if (i < size - 1) node.next = queue[0];\\n if (node.left) queue.push(node.left);\\n if (node.right) queue.push(node.right);\\n }\\n }\\n return root;\\n}\\n","explanation":"This function populates each next pointer to point to its next right node.","category":"Binary Tree General"},{"id":75,"topic":"Flatten Binary Tree to Linked List","code":"// Flatten binary tree to linked list\\nfunction flatten(root) {\\n if (!root) return;\\n flatten(root.left);\\n flatten(root.right);\\n let left = root.left;\\n let right = root.right;\\n root.left = null;\\n root.right = left;\\n let current = root;\\n while (current.right) current = current.right;\\n current.right = right;\\n}\\n","explanation":"This function flattens a binary tree to a linked list in-place.","category":"Binary Tree General"},{"id":76,"topic":"Path Sum","code":"// Find if there is a root-to-leaf path with a given sum\\nfunction hasPathSum(root, sum) {\\n if (!root) return false;\\n if (!root.left && !root.right) return root.val === sum;\\n return hasPathSum(root.left, sum - root.val) || hasPathSum(root.right, sum - root.val);\\n}\\n","explanation":"This function checks if there is a root-to-leaf path with a given sum.","category":"Binary Tree General"},{"id":77,"topic":"Sum Root to Leaf Numbers","code":"// Find the sum of all root-to-leaf numbers\\nfunction sumNumbers(root) {\\n function dfs(node, currentSum) {\\n if (!node) return 0;\\n currentSum = currentSum * 10 + node.val;\\n if (!node.left && !node.right) return currentSum;\\n return dfs(node.left, currentSum) + dfs(node.right, currentSum);\\n }\\n return dfs(root, 0);\\n}\\n","explanation":"This function finds the sum of all root-to-leaf numbers.","category":"Binary Tree General"},{"id":78,"topic":"Binary Tree Maximum Path Sum","code":"// Find the maximum path sum in a binary tree\\nfunction maxPathSum(root) {\\n let maxSum = -Infinity;\\n function dfs(node) {\\n if (!node) return 0;\\n let left = Math.max(dfs(node.left), 0);\\n let right = Math.max(dfs(node.right), 0);\\n let newPathSum = node.val + left + right;\\n maxSum = Math.max(maxSum, newPathSum);\\n return node.val + Math.max(left, right);\\n }\\n dfs(root);\\n return maxSum;\\n}\\n","explanation":"This function finds the maximum path sum in a binary tree.","category":"Binary Tree General"},{"id":79,"topic":"Binary Search Tree Iterator","code":"// Implement a binary search tree iterator\\nclass BSTIterator {\\n constructor(root) {\\n this.stack = [];\\n this.pushAll(root);\\n }\\n next() {\\n let node = this.stack.pop();\\n this.pushAll(node.right);\\n return node.val;\\n }\\n hasNext() {\\n return this.stack.length > 0;\\n }\\n pushAll(node) {\\n while (node) {\\n this.stack.push(node);\\n node = node.left;\\n }\\n }\\n}\\n","explanation":"This class implements a binary search tree iterator with next and hasNext methods.","category":"Binary Tree General"},{"id":80,"topic":"Count Complete Tree Nodes","code":"// Count the number of nodes in a complete binary tree\\nfunction countNodes(root) {\\n if (!root) return 0;\\n let leftDepth = getDepth(root.left);\\n let rightDepth = getDepth(root.right);\\n if (leftDepth === rightDepth) {\\n return (1 << leftDepth) + countNodes(root.right);\\n } else {\\n return (1 << rightDepth) + countNodes(root.left);\\n }\\n}\\nfunction getDepth(node) {\\n let depth = 0;\\n while (node) {\\n depth++;\\n node = node.left;\\n }\\n return depth;\\n}\\n","explanation":"This function counts the number of nodes in a complete binary tree.","category":"Binary Tree General"},{"id":81,"topic":"Lowest Common Ancestor of a Binary Tree","code":"// Find the lowest common ancestor of two nodes in a binary tree\\nfunction lowestCommonAncestor(root, p, q) {\\n if (!root || root === p || root === q) return root;\\n let left = lowestCommonAncestor(root.left, p, q);\\n let right = lowestCommonAncestor(root.right, p, q);\\n if (left && right) return root;\\n return left ? left : right;\\n}\\n","explanation":"This function finds the lowest common ancestor of two nodes in a binary tree.","category":"Binary Tree General"},{"id":82,"topic":"Binary Tree Right Side View","code":"// Find the right side view of a binary tree\\nvar rightSideView = function(root) {\\n // Return empty array if the tree is empty\\n if (!root) return [];\\n \\n // Initialize queue for BFS and result array for the right-side view\\n let queue = [root];\\n let result = [];\\n\\n // Perform level-order traversal using BFS\\n while (queue.length > 0) {\\n let levelSize = queue.length; // Number of nodes at the current level\\n \\n for (let i = 0; i < levelSize; i++) {\\n let currentNode = queue.shift(); // Dequeue the front node\\n \\n // If it\'s the last node in this level, add its value to the result\\n if (i === levelSize - 1) {\\n result.push(currentNode.val);\\n }\\n \\n // Enqueue left and right children (if they exist)\\n if (currentNode.left) queue.push(currentNode.left);\\n if (currentNode.right) queue.push(currentNode.right);\\n }\\n }\\n\\n return result;\\n};\\n","explanation":"Explanation:<br/> 1. Edge Case:<br/>    - If the root is null, return an empty array [].<br/> <br/> 2. BFS Traversal:<br/>    - Use a queue to perform a level-order traversal.<br/>    - For each level, iterate through all nodes.<br/>    - Keep track of the last node\'s value at each level and add it to the result array.<br/> <br/> 3. Enqueue Children:<br/>    - After processing a node, enqueue its left and right children (if they exist)<br/>      for processing in the next level.","category":"Binary Tree BFS"},{"id":83,"topic":"Average of Levels in Binary Tree","code":"// Find the average of levels in a binary tree\\nfunction averageOfLevels(root) {\\n let result = [], queue = [root];\\n while (queue.length) {\\n let sum = 0, count = 0, nextQueue = [];\\n for (let node of queue) {\\n sum += node.val;\\n count++;\\n if (node.left) nextQueue.push(node.left);\\n if (node.right) nextQueue.push(node.right);\\n }\\n result.push(sum / count);\\n queue = nextQueue;\\n }\\n return result;\\n}\\n","explanation":"This function finds the average of levels in a binary tree.","category":"Binary Tree BFS"},{"id":84,"topic":"Binary Tree Level Order Traversal","code":"// Perform level order traversal of a binary tree\\nfunction levelOrder(root) {\\n let result = [], queue = [root];\\n while (queue.length) {\\n let level = [], nextQueue = [];\\n for (let node of queue) {\\n level.push(node.val);\\n if (node.left) nextQueue.push(node.left);\\n if (node.right) nextQueue.push(node.right);\\n }\\n result.push(level);\\n queue = nextQueue;\\n }\\n return result;\\n}\\n","explanation":"This function performs level order traversal of a binary tree.","category":"Binary Tree BFS"},{"id":85,"topic":"Binary Tree Zigzag Level Order Traversal","code":"// Perform zigzag level order traversal of a binary tree\\nfunction zigzagLevelOrder(root) {\\n let result = [], queue = [root], leftToRight = true;\\n while (queue.length) {\\n let level = [], nextQueue = [];\\n for (let node of queue) {\\n if (leftToRight) level.push(node.val);\\n else level.unshift(node.val);\\n if (node.left) nextQueue.push(node.left);\\n if (node.right) nextQueue.push(node.right);\\n }\\n result.push(level);\\n queue = nextQueue;\\n leftToRight = !leftToRight;\\n }\\n return result;\\n}\\n","explanation":"This function performs zigzag level order traversal of a binary tree.","category":"Binary Tree BFS"},{"id":86,"topic":"Minimum Absolute Difference in BST","code":"// Find the minimum absolute difference in a BST\\nvar getMinimumDifference = function (root) {\\n let prev = null; // Tracks the previous value in the in-order traversal\\n let minDiff = Infinity; // Initialize the minimum difference to a very large number\\n\\n // Helper function for in-order traversal\\n const inOrderTraversal = (node) => {\\n if (!node) return;\\n\\n // Traverse the left subtree\\n inOrderTraversal(node.left);\\n\\n // Process the current node\\n if (prev !== null) {\\n // Update the minimum difference\\n minDiff = Math.min(minDiff, Math.abs(node.val - prev));\\n }\\n // Update the previous value to the current node\'s value\\n prev = node.val;\\n\\n // Traverse the right subtree\\n inOrderTraversal(node.right);\\n };\\n\\n // Perform in-order traversal starting from the root\\n inOrderTraversal(root);\\n\\n return minDiff;\\n};\\n","explanation":"Explanation:\\n\\n1. In-order Traversal:\\nThe recursive function `inOrderTraversal` processes nodes in ascending order for a BST.\\n\\n2. `prev` Variable:\\nKeeps track of the previously visited node\'s value during traversal.\\n\\n3. Minimum Difference Calculation:\\nAt each node, the absolute difference between the current node\'s value and `prev` is calculated.\\nThe `minDiff` is updated if the new difference is smaller.\\n\\n4. Return Value:\\nAfter the traversal, `minDiff` contains the smallest absolute difference between any two nodes.\\n\\nComplexity Analysis:\\n- Time Complexity: O(n), where `n` is the number of nodes. Each node is visited once.\\n- Space Complexity: O(h), where `h` is the height of the BST. This accounts for the recursion stack.","category":"Binary Search Tree"},{"id":87,"topic":"Kth Smallest Element in a BST","code":"// Find the kth smallest element in a BST\\nvar kthSmallest = function(root, k) {\\n console.log(\\"root\\", root);\\n console.log(\\"k\\", k);\\n let count = 0; // Keeps track of how many nodes we\'ve visited during the in-order traversal.\\n let result = null; // Stores the kth smallest element when found.\\n\\n // Helper function to perform in-order traversal of the BST.\\n function inorder(node) {\\n if (node === null) return; // Base case: if the node is null, just return.\\n\\n // 1. Traverse the left subtree first, as it contains smaller values.\\n inorder(node.left); // Example: for node with value 3, it will first visit the left child (node with value 1).\\n // If node is 3, the left child is 1, and the traversal will move to 1 first.\\n\\n // 2. Visit the current node.\\n count++; // Increment count because we\'ve visited a new node.\\n if (count === k) {\\n result = node.val; // If count equals k, we\u2019ve found the kth smallest value.\\n return; // Stop the traversal since we found the result.\\n }\\n // Example: After visiting node 1 (left child), count becomes 1, then it moves back to 3.\\n\\n // 3. Traverse the right subtree after visiting the node.\\n inorder(node.right); // After visiting node 3, it will move to its right child (node with value 4).\\n // Example: Node 3 visits right child 4 after visiting itself.\\n }\\n\\n inorder(root); // Start in-order traversal from the root of the tree.\\n return result; // Return the kth smallest element found during the traversal.\\n};\\n\\n// Example usage:\\n// console.log(kthSmallest([3,1,4,null,2], 1)); // Output: 1\\n// console.log(kthSmallest([5,3,6,2,4,null,null,1], 3)); // Output: 3\\n","explanation":"1. In-order Traversal:<br/> - In-order traversal visits nodes in ascending order in a binary search tree (BST). The order of traversal is:<br/> 1) Traverse the left subtree.<br/> - Example: For the tree [3,1,4,null,2], first it traverses left subtree, visiting node 1.<br/> 2) Visit the current node.<br/> - Example: After node 1, the current node is 3. We count 3 and move to the next.<br/> 3) Then traverse the right subtree.<br/> - Example: After visiting node 3, it moves to the right child, which is node 4.<br/> - This order guarantees that if we visit nodes one by one, we\u2019ll visit the smallest node first, the second smallest next, and so on.<br/> - For example, in the tree `root = [3,1,4,null,2]`, the in-order traversal visits nodes in this order: `[1, 2, 3, 4]`. Therefore, the 1st smallest element is 1, and the 3rd smallest element is 3.<br/><br/>2. Recursive Approach:<br/> - The `inorder` function is defined to traverse the tree recursively. This means we will explore the left child, visit the node, and then explore the right child, following a depth-first traversal.<br/> - We maintain a `count` variable to track how many nodes we\'ve visited so far. When `count` reaches `k`, we\'ve found the kth smallest element, and we store its value in `result`.<br/> - The traversal stops early once we find the kth smallest element, which helps to save time by avoiding unnecessary exploration of the tree.<br/><br/>3. Time Complexity:<br/> - O(n), where `n` is the number of nodes in the tree. In the worst case, we may need to traverse all nodes in the tree, especially if `k` is large or if the kth smallest element is near the last visited node.<br/><br/>4. Space Complexity:<br/> - O(h), where `h` is the height of the tree. This represents the space needed for the recursive call stack. In the worst case (e.g., for a skewed tree), the height `h` can be equal to `n` (i.e., O(n)).","category":"Binary Search Tree"},{"id":88,"topic":"Validate Binary Search Tree","code":"// Validate if a tree is a binary search tree\\nfunction isValidBST(root) {\\n function validate(node, low = -Infinity, high = Infinity) {\\n if (!node) return true;\\n if (node.val <= low || node.val >= high) return false;\\n return validate(node.left, low, node.val) && validate(node.right, node.val, high);\\n }\\n return validate(root);\\n}\\n","explanation":"This function validates if a tree is a binary search tree.","category":"Binary Search Tree"},{"id":89,"topic":"Number of Islands","code":"// Find the number of islands\\nvar numIslands = function(grid) {\\n // Helper function to mark all connected land cells of an island\\n function markIsland(i, j) {\\n // Base case: if the cell is out of bounds or water, return\\n if (i < 0 || i >= grid.length || j < 0 || j >= grid[0].length || grid[i][j] === \'0\') {\\n return;\\n }\\n\\n // Mark the current cell as visited by setting it to \'0\'\\n grid[i][j] = \'0\';\\n\\n // Recursively visit the neighboring cells (up, down, left, right)\\n console.log(`Visiting cell: (${i}, ${j})`);\\n markIsland(i - 1, j); // up\\n markIsland(i + 1, j); // down\\n markIsland(i, j - 1); // left\\n markIsland(i, j + 1); // right\\n }\\n\\n let islandCount = 0;\\n\\n // Loop through the entire grid\\n for (let i = 0; i < grid.length; i++) {\\n for (let j = 0; j < grid[0].length; j++) {\\n // If we find a land cell (\'1\'), we have found a new island\\n if (grid[i][j] === \'1\') {\\n console.log(`Found a new island at: (${i}, ${j})`);\\n islandCount++;\\n // Start exploring the island and mark all connected land cells as visited\\n markIsland(i, j);\\n }\\n }\\n }\\n\\n return islandCount;\\n};\\n\\n// Test example 1\\nconst grid1 = [\\n [\\"1\\",\\"1\\",\\"1\\",\\"1\\",\\"0\\"],\\n [\\"1\\",\\"1\\",\\"0\\",\\"1\\",\\"0\\"],\\n [\\"1\\",\\"1\\",\\"0\\",\\"0\\",\\"0\\"],\\n [\\"0\\",\\"0\\",\\"0\\",\\"0\\",\\"0\\"]\\n];\\nconsole.log(\\"Number of Islands (Test 1):\\", numIslands(grid1));\\n\\n// Test example 2\\nconst grid2 = [\\n [\\"1\\",\\"1\\",\\"0\\",\\"0\\",\\"0\\"],\\n [\\"1\\",\\"1\\",\\"0\\",\\"0\\",\\"0\\"],\\n [\\"0\\",\\"0\\",\\"1\\",\\"0\\",\\"0\\"],\\n [\\"0\\",\\"0\\",\\"0\\",\\"1\\",\\"1\\"]\\n];\\nconsole.log(\\"Number of Islands (Test 2):\\", numIslands(grid2));\\n","explanation":"Explanation:<br/><br/>1. `numIslands` Function:<br/>   - This function takes a 2D grid (a map of land \'1\' and water \'0\') as input and returns the total number of islands in the grid.<br/><br/>2. Grid Exploration:<br/>   - We iterate through each cell of the grid.<br/>   - When a \'1\' (land) is found, we have encountered a new island and increment the `islandCount`.<br/>   - The `markIsland` helper function is then called to explore all connected land cells (i.e., to \\"mark\\" the entire island as visited).<br/><br/>3. Depth-First Search (DFS) - `markIsland`:<br/>   - This function performs a Depth-First Search (DFS) to explore the entire island.<br/>   - It works by recursively marking all adjacent land cells (up, down, left, right) as visited by setting them to \'0\' (water).<br/>   - The recursion ensures that all cells belonging to the same island are visited and marked.<br/><br/>4. Termination of Depth-First Search (DFS):<br/>   - The Depth-First Search (DFS) terminates if a cell is out of bounds or if it is water (\'0\').<br/><br/>5. Example 1 (grid1):<br/>   - In the first test case, the grid represents a single island, so the function will find one island.<br/>   - The DFS will visit all connected \'1\'s and mark them as \'0\'.<br/>   - The output will be `1`.<br/><br/>6. Example 2 (grid2):<br/>   - In the second test case, the grid contains three separate islands.<br/>   - The function will detect and count all three islands individually.<br/>   - The output will be `3`.<br/><br/>7. **Log Statements:**<br/>   - **`console.log(\'Visiting cell:\')`** shows each cell visited during the DFS traversal.<br/>   - **`console.log(\'Found a new island at:\')`** indicates the starting point of a new island being discovered.<br/><br/>Output Example:<br/>Found a new island at: (0, 0)<br/>Visiting cell: (0, 0)<br/>Visiting cell: (1, 0)<br/>Visiting cell: (2, 0)<br/>Visiting cell: (2, 1)<br/>Visiting cell: (1, 1)<br/>Visiting cell: (0, 1)<br/>Visiting cell: (0, 2)<br/>Visiting cell: (1, 2)<br/>Number of Islands (Test 1): 1<br/><br/>Found a new island at: (0, 0)<br/>Visiting cell: (0, 0)<br/>Visiting cell: (1, 0)<br/>Visiting cell: (2, 0)<br/>Visiting cell: (2, 1)<br/>Visiting cell: (1, 1)<br/>Visiting cell: (0, 1)<br/>Visiting cell: (0, 2)<br/>Visiting cell: (1, 2)<br/>Found a new island at: (2, 2)<br/>Visiting cell: (2, 2)<br/>Visiting cell: (3, 2)<br/>Visiting cell: (3, 3)<br/>Found a new island at: (3, 3)<br/>Visiting cell: (3, 3)<br/>Number of Islands (Test 2): 3","category":"Graph General"},{"id":90,"topic":"Surrounded Regions","code":"// Capture all regions surrounded by \'X\'\\nfunction solve(board) {\\n if (!board.length) return;\\n let m = board.length, n = board[0].length;\\n function dfs(i, j) {\\n if (i < 0 || i >= m || j < 0 || j >= n || board[i][j] !== \'O\') return;\\n board[i][j] = \'T\';\\n dfs(i + 1, j);\\n dfs(i - 1, j);\\n dfs(i, j + 1);\\n dfs(i, j - 1);\\n }\\n for (let i = 0; i < m; i++) {\\n if (board[i][0] === \'O\') dfs(i, 0);\\n if (board[i][n - 1] === \'O\') dfs(i, n - 1);\\n }\\n for (let j = 0; j < n; j++) {\\n if (board[0][j] === \'O\') dfs(0, j);\\n if (board[m - 1][j] === \'O\') dfs(m - 1, j);\\n }\\n for (let i = 0; i < m; i++) {\\n for (let j = 0; j < n; j++) {\\n if (board[i][j] === \'O\') board[i][j] = \'X\';\\n if (board[i][j] === \'T\') board[i][j] = \'O\';\\n }\\n }\\n}\\n","explanation":"This function captures all regions surrounded by \'X\' in a board.","category":"Graph General"},{"id":91,"topic":"Clone Graph","code":"// Clone a graph\\nfunction cloneGraph(node) {\\n if (!node) return null;\\n let map = new Map();\\n function clone(node) {\\n if (!map.has(node)) {\\n map.set(node, new Node(node.val));\\n map.get(node).neighbors = node.neighbors.map(clone);\\n }\\n return map.get(node);\\n }\\n return clone(node);\\n}\\n","explanation":"This function clones a graph using DFS.","category":"Graph General"},{"id":92,"topic":"Evaluate Division","code":"// Evaluate division\\nfunction calcEquation(equations, values, queries) {\\n let graph = new Map();\\n function buildGraph(equations, values) {\\n for (let i = 0; i < equations.length; i++) {\\n let [a, b] = equations[i];\\n if (!graph.has(a)) graph.set(a, new Map());\\n if (!graph.has(b)) graph.set(b, new Map());\\n graph.get(a).set(b, values[i]);\\n graph.get(b).set(a, 1 / values[i]);\\n }\\n }\\n function dfs(start, end, visited) {\\n if (!graph.has(start) || !graph.has(end)) return -1;\\n if (start === end) return 1;\\n visited.add(start);\\n for (let [neighbor, value] of graph.get(start)) {\\n if (!visited.has(neighbor)) {\\n let product = dfs(neighbor, end, visited);\\n if (product !== -1) return product * value;\\n }\\n }\\n return -1;\\n }\\n buildGraph(equations, values);\\n let results = [];\\n for (let [a, b] of queries) {\\n results.push(dfs(a, b, new Set()));\\n }\\n return results;\\n}\\n","explanation":"This function evaluates division using a graph and DFS.","category":"Graph General"},{"id":93,"topic":"Course Schedule","code":"// Determine if you can finish all courses\\nfunction canFinish(numCourses, prerequisites) {\\n let graph = new Map();\\n let indegree = Array(numCourses).fill(0);\\n for (let [course, prereq] of prerequisites) {\\n if (!graph.has(prereq)) graph.set(prereq, []);\\n graph.get(prereq).push(course);\\n indegree[course]++;\\n }\\n let queue = [];\\n for (let i = 0; i < numCourses; i++) {\\n if (indegree[i] === 0) queue.push(i);\\n }\\n let count = 0;\\n while (queue.length) {\\n let course = queue.shift();\\n count++;\\n if (graph.has(course)) {\\n for (let nextCourse of graph.get(course)) {\\n indegree[nextCourse]--;\\n if (indegree[nextCourse] === 0) queue.push(nextCourse);\\n }\\n }\\n }\\n return count === numCourses;\\n}\\n","explanation":"This function determines if you can finish all courses given the prerequisites.","category":"Graph General"},{"id":94,"topic":"Course Schedule II","code":"// Find the order of courses to finish all courses\\nfunction findOrder(numCourses, prerequisites) {\\n let graph = new Map();\\n let indegree = Array(numCourses).fill(0);\\n for (let [course, prereq] of prerequisites) {\\n if (!graph.has(prereq)) graph.set(prereq, []);\\n graph.get(prereq).push(course);\\n indegree[course]++;\\n }\\n let queue = [];\\n for (let i = 0; i < numCourses; i++) {\\n if (indegree[i] === 0) queue.push(i);\\n }\\n let order = [];\\n while (queue.length) {\\n let course = queue.shift();\\n order.push(course);\\n if (graph.has(course)) {\\n for (let nextCourse of graph.get(course)) {\\n indegree[nextCourse]--;\\n if (indegree[nextCourse] === 0) queue.push(nextCourse);\\n }\\n }\\n }\\n return order.length === numCourses ? order : [];\\n}\\n","explanation":"This function finds the order of courses to finish all courses given the prerequisites.","category":"Graph General"},{"id":95,"topic":"Snakes and Ladders","code":"// Find the minimum number of moves to reach the last square\\nvar snakesAndLadders = function(board) {\\n console.log(\'Original board:\', board);\\n const boardSize = board.length; // The size of the board (n x n)\\n const totalSquares = boardSize * boardSize; // The total number of squares on the board (n^2)\\n\\n // Flatten the 2D board into a 1D array representing the board\\n // We iterate over each row and alternate the direction for odd rows\\n let flattenedBoard = new Array(totalSquares).fill(-1); // 0-based array\\n let index = 0;\\n\\n console.log(\'Flattening the board...\');\\n\\n // Traverse each row from bottom to top\\n for (let row = boardSize - 1; row >= 0; row--) {\\n if (row % 2 === boardSize % 2) { // Right to left direction for odd rows\\n for (let col = boardSize - 1; col >= 0; col--) {\\n flattenedBoard[index++] = board[row][col];\\n }\\n } else { // Left to right direction for even rows\\n for (let col = 0; col < boardSize; col++) {\\n flattenedBoard[index++] = board[row][col];\\n }\\n }\\n }\\n\\n // 0-based array\\n console.log(\'Flattened Board (0-based array):\', flattenedBoard);\\n \\n // BFS (Breadth-First Search) setup to find the shortest path to the last square\\n let queue = [[0, 0]]; // Start from square 1 (index 0)\\n let visitedSquares = new Array(totalSquares).fill(false); // Array to keep track of visited squares\\n visitedSquares[0] = true; // Mark the first square as visited\\n\\n console.log(\'Starting BFS to find the shortest path to the last square...\');\\n\\n while (queue.length > 0) {\\n // Remove the first element from the queue and get the current square and dice rolls\\n let [currentSquare, diceRolls] = queue.shift();\\n \\n // Inside the BFS loop, where you\'re processing squares:\\n console.log(`Landed on square ${currentSquare + 1} (Index: ${currentSquare}), Dice rolls: ${diceRolls}`);\\n\\n \\n // If we\'ve reached the last square (n^2 - 1), return the number of dice rolls\\n if (currentSquare === totalSquares - 1) {\\n console.log(`Reached the last square! Total dice rolls: ${diceRolls}`);\\n return diceRolls;\\n }\\n \\n // Try all dice rolls from 1 to 6\\n for (let dice = 1; dice <= 6; dice++) {\\n let nextSquare = currentSquare + dice; // Calculate the next square based on the dice roll\\n \\n // Prevent going out of bounds of the board\\n if (nextSquare >= totalSquares) break;\\n \\n // Check if there\'s a snake or ladder at the next square\\n if (flattenedBoard[nextSquare] !== -1) {\\n // A snake or ladder sends the player directly to the destination square\\n nextSquare = flattenedBoard[nextSquare] - 1; // Adjust because the destination is 1-based\\n console.log(\\"nextSquare set\\", nextSquare + 1);\\n // convert from 0-based indexing to 1-based indexing\\n // console.log(`Landed on a snake/ladder, moving from square ${currentSquare + 1} to ${nextSquare + 1}`);\\n } else {\\n // No snake or ladder, move normally\\n // convert from 0-based indexing to 1-based indexing\\n // console.log(`Moving from square ${currentSquare + 1} to square ${nextSquare + 1}`);\\n }\\n \\n // If the next square hasn\'t been visited, mark it and add it to the queue\\n if (!visitedSquares[nextSquare]) {\\n visitedSquares[nextSquare] = true;\\n queue.push([nextSquare, diceRolls + 1]);\\n console.log(`Adding square ${nextSquare + 1} to the queue with ${diceRolls + 1} dice rolls.`);\\n }\\n }\\n }\\n \\n // If we can\'t reach the last square, return -1\\n console.log(\'Unable to reach the last square. Returning -1.\');\\n return -1;\\n};\\n\\n// Example board for testing\\nboard = [\\n [-1,-1,-1,-1,-1,-1],\\n [-1,-1,-1,-1,-1,-1],\\n [-1,-1,-1,-1,-1,-1],\\n [-1,35,-1,-1,13,-1],\\n [-1,-1,-1,-1,-1,-1],\\n [-1,15,-1,-1,-1,-1]\\n]\\n// Test the function with example board A\\nconsole.log(\'A Minimum number of dice rolls:\', snakesAndLadders(board));\\nconsole.log(\'-----\');\\n\\n// Test the function with example board B\\n// boardB = [\\n// [-1,-1],\\n// [-1,3]\\n// ]\\n\\n// console.log(\'B Minimum number of dice rolls:\', snakesAndLadders(boardB));\\n","explanation":"The problem asks to find the minimum number of dice rolls required to reach the last square on a snakes-and-ladders board, starting from the first square. The board is represented as a 2D array, where each element can either be:<br/>- -1, indicating an empty square.<br/>- A positive number, which indicates a ladder that takes you directly to the square at that position.<br/>- A negative number, representing a snake, which takes you to a square with the corresponding number.<br/><br/>We can treat the board as an unweighted graph, where each square is a node, and the dice rolls define possible edges to neighboring nodes. The objective is to find the shortest path from the first square to the last square.<br/><br/>1. Flattening the Board (2D to 1D transformation):<br/>   - The input board is a 2D array, but to simplify our logic (since BFS typically works with a 1D array for easier indexing), we convert the 2D board into a 1D array.<br/>   - The board is traversed in a \\"Boustrophedon\\" style, which means:<br/>     - For odd-indexed rows (from the bottom), we traverse from right to left.<br/>     - For even-indexed rows (from the bottom), we traverse from left to right.<br/>   - This transformation makes it easier to handle the board\'s unique structure and helps us index the board using a simple 1D array.<br/>   - The flattened array will have a length of `n^2` (where `n` is the side length of the square grid).<br/><br/>2. Breadth-First Search (BFS) for the Shortest Path:<br/>   - BFS is chosen because it efficiently finds the shortest path in an unweighted graph.<br/>   - We use a queue to explore the board level by level (i.e., dice roll by dice roll). Each element in the queue represents a square on the board, along with the number of dice rolls taken to reach that square.<br/>   - Starting from the first square (index 0), we try all possible dice rolls (1 through 6) to explore the next squares. For each dice roll, we calculate the destination square and check if it\u2019s a snake or ladder.<br/>     - If it\u2019s a ladder or snake, we adjust the destination to the corresponding square.<br/>     - If not, we simply move to the square resulting from the dice roll.<br/><br/>3. Tracking Visited Squares:<br/>   - To avoid revisiting squares and causing infinite loops, we maintain an array `visitedSquares` where each index corresponds to a square on the board. If a square has been visited before, it is skipped in future dice rolls.<br/>   - This ensures that the BFS doesn\u2019t waste time exploring already visited squares and guarantees that the shortest path is found.<br/><br/>4. Termination Condition:<br/>   - The BFS continues until the queue is empty or we reach the last square (`n^2 - 1`).<br/>   - If we reach the last square, we return the number of dice rolls taken to get there, as that represents the shortest path.<br/>   - If the BFS completes without reaching the last square (i.e., the queue is exhausted), we return `-1`, indicating that it\'s impossible to reach the last square (which should never happen with a valid board setup).<br/><br/>Time Complexity:<br/>   - The time complexity of this solution is O(n^2), where `n` is the side length of the square grid.<br/>   - BFS processes each square at most once, and for each square, we attempt to move in 6 possible directions (1 through 6 dice rolls).<br/>   - Since the number of squares is `n^2`, the total number of operations is proportional to `n^2`, making this approach efficient for typical board sizes.<br/><br/>In summary, we flatten the board to simplify movement logic, apply BFS to explore the shortest path using dice rolls, and track visited squares to ensure we don\u2019t process a square more than once. The BFS guarantees that we find the minimum number of rolls required to reach the last square.","category":"Graph BFS"},{"id":96,"topic":"Minimum Genetic Mutation","code":"// Find the minimum number of mutations to reach the end gene\\nfunction minMutation(start, end, bank) {\\n let bankSet = new Set(bank);\\n if (!bankSet.has(end)) return -1;\\n let queue = [[start, 0]];\\n let visited = new Set([start]);\\n let chars = [\'A\', \'C\', \'G\', \'T\'];\\n while (queue.length) {\\n let [gene, mutations] = queue.shift();\\n if (gene === end) return mutations;\\n for (let i = 0; i < gene.length; i++) {\\n for (let char of chars) {\\n let newGene = gene.slice(0, i) + char + gene.slice(i + 1);\\n if (bankSet.has(newGene) && !visited.has(newGene)) {\\n visited.add(newGene);\\n queue.push([newGene, mutations + 1]);\\n }\\n }\\n }\\n }\\n return -1;\\n}\\n","explanation":"This function finds the minimum number of mutations needed to reach the end gene from the start gene.","category":"Graph BFS"},{"id":97,"topic":"Word Ladder","code":"// Find the length of the shortest transformation sequence from beginWord to endWord\\nfunction ladderLength(beginWord, endWord, wordList) {\\n let wordSet = new Set(wordList);\\n if (!wordSet.has(endWord)) return 0;\\n let queue = [[beginWord, 1]];\\n while (queue.length) {\\n let [word, length] = queue.shift();\\n if (word === endWord) return length;\\n for (let i = 0; i < word.length; i++) {\\n for (let char of \'abcdefghijklmnopqrstuvwxyz\') {\\n let newWord = word.slice(0, i) + char + word.slice(i + 1);\\n if (wordSet.has(newWord)) {\\n wordSet.delete(newWord);\\n queue.push([newWord, length + 1]);\\n }\\n }\\n }\\n }\\n return 0;\\n}\\n","explanation":"This function finds the length of the shortest transformation sequence from beginWord to endWord.","category":"Graph BFS"},{"id":98,"topic":"Implement Trie (Prefix Tree)","code":"// Implement a Trie (Prefix Tree)\\nclass Trie {\\n constructor() {\\n this.children = {};\\n this.isEndOfWord = false;\\n }\\n insert(word) {\\n let node = this;\\n for (let char of word) {\\n if (!node.children[char]) node.children[char] = new Trie();\\n node = node.children[char];\\n }\\n node.isEndOfWord = true;\\n }\\n search(word) {\\n let node = this;\\n for (let char of word) {\\n if (!node.children[char]) return false;\\n node = node.children[char];\\n }\\n return node.isEndOfWord;\\n }\\n startsWith(prefix) {\\n let node = this;\\n for (let char of prefix) {\\n if (!node.children[char]) return false;\\n node = node.children[char];\\n }\\n return true;\\n }\\n}\\n","explanation":"This class implements a Trie (Prefix Tree) with insert, search, and startsWith methods.","category":"Trie"},{"id":99,"topic":"Design Add and Search Words Data Structure","code":"// Design a data structure that supports adding and searching words\\nclass WordDictionary {\\n constructor() {\\n this.children = {};\\n this.isEndOfWord = false;\\n }\\n addWord(word) {\\n let node = this;\\n for (let char of word) {\\n if (!node.children[char]) node.children[char] = new WordDictionary();\\n node = node.children[char];\\n }\\n node.isEndOfWord = true;\\n }\\n search(word) {\\n function dfs(node, i) {\\n if (i === word.length) return node.isEndOfWord;\\n if (word[i] === \'.\') {\\n for (let child in node.children) {\\n if (dfs(node.children[child], i + 1)) return true;\\n }\\n return false;\\n }\\n if (!node.children[word[i]]) return false;\\n return dfs(node.children[word[i]], i + 1);\\n }\\n return dfs(this, 0);\\n }\\n}\\n","explanation":"This class implements a data structure that supports adding and searching words with \'.\' as a wildcard character.","category":"Trie"},{"id":100,"topic":"Word Search II","code":"// Find all words in the board\\nfunction findWords(board, words) {\\n let result = [];\\n let trie = new Trie();\\n for (let word of words) trie.insert(word);\\n function dfs(node, i, j, path) {\\n if (node.isEndOfWord) {\\n result.push(path);\\n node.isEndOfWord = false;\\n }\\n if (i < 0 || i >= board.length || j < 0 || j >= board[0].length || !node.children[board[i][j]]) return;\\n let char = board[i][j];\\n board[i][j] = \'#\';\\n for (let [dx, dy] of [[0, 1], [1, 0], [0, -1], [-1, 0]]) {\\n dfs(node.children[char], i + dx, j + dy, path + char);\\n }\\n board[i][j] = char;\\n }\\n for (let i = 0; i < board.length; i++) {\\n for (let j = 0; j < board[0].length; j++) {\\n if (trie.children[board[i][j]]) dfs(trie, i, j, \'\');\\n }\\n }\\n return result;\\n}\\n","explanation":"This function finds all words in the board using a Trie and DFS.","category":"Trie"},{"id":101,"topic":"Letter Combinations of a Phone Number","code":"// Find all letter combinations of a phone number\\nvar letterCombinations = function(digits) {\\n // Map of digit to corresponding letters, similar to a phone keypad\\n const digitToLetters = {\\n \\"2\\": \\"abc\\",\\n \\"3\\": \\"def\\",\\n \\"4\\": \\"ghi\\",\\n \\"5\\": \\"jkl\\",\\n \\"6\\": \\"mno\\",\\n \\"7\\": \\"pqrs\\",\\n \\"8\\": \\"tuv\\",\\n \\"9\\": \\"wxyz\\"\\n };\\n \\n // Result array to store all possible letter combinations\\n const result = [];\\n \\n // Base case: If the input digits are empty, return an empty array\\n if (digits.length === 0) {\\n return result;\\n }\\n \\n const backtrack = (index, currentCombination) => {\\n // If the current combination length equals the number of digits, add it to the result\\n if (index === digits.length) {\\n result.push(currentCombination); // Valid combination completed\\n return;\\n }\\n \\n // Get the letters corresponding to the current digit\\n const letters = digitToLetters[digits[index]];\\n \\n // Loop through each letter for the current digit\\n for (const letter of letters) {\\n // Add the letter to the current combination and move to the next digit\\n backtrack(index + 1, currentCombination + letter);\\n }\\n };\\n \\n // Start the backtracking process with index 0 and an empty combination\\n backtrack(0, \\"\\");\\n \\n // Return the final list of all combinations\\n return result;\\n};\\n\\n// Example usage:\\nconst inputDigits = \\"23\\";\\nconsole.log(letterCombinations(inputDigits)); \\n// Output: [\\"ad\\", \\"ae\\", \\"af\\", \\"bd\\", \\"be\\", \\"bf\\", \\"cd\\", \\"ce\\", \\"cf\\"]\\n","explanation":"1. `digitToLetters`: Maps digits (2-9) to their corresponding letters. This allows quick lookup for any digit.<br/>2. `result`: Stores all valid letter combinations.<br/>3. Base Case: If the `digits` string is empty, no combinations can be formed, so return an empty array.<br/>4. `backtrack` function:<br/>   - Tracks progress using `index` (current digit position) and `currentCombination` (letters formed so far).<br/>   - Recursion explores all possible paths:<br/>     a. Add a letter to the current combination.<br/>     b. Move to the next digit using `index + 1`.<br/>     c. Stop recursion and add the combination to `result` once all digits are processed.<br/>5. Backtracking starts at index 0 with an empty string.<br/>6. Time Complexity: O(3^n * 4^m), where n is digits mapping to 3 letters (e.g., 2-6, 8), and m maps to 4 letters (e.g., 7, 9).<br/>7. Space Complexity: O(n), due to the recursion stack depth equal to the number of digits.","category":"Backtracking"},{"id":102,"topic":"Combinations","code":"// Find all combinations of k numbers out of 1 to n\\nfunction combine(n, k) {\\n let result = [];\\n function backtrack(start, path) {\\n if (path.length === k) {\\n result.push([...path]);\\n return;\\n }\\n for (let i = start; i <= n; i++) {\\n path.push(i);\\n backtrack(i + 1, path);\\n path.pop();\\n }\\n }\\n backtrack(1, []);\\n return result;\\n}\\n","explanation":"This function finds all combinations of k numbers out of 1 to n.","category":"Backtracking"},{"id":103,"topic":"Permutations","code":"// Generate all permutations of an array of numbers\\nfunction permute(nums) {\\n let result = [];\\n function backtrack(path = [], used = Array(nums.length).fill(false)) {\\n if (path.length === nums.length) {\\n result.push([...path]);\\n return;\\n }\\n for (let i = 0; i < nums.length; i++) {\\n if (used[i]) continue;\\n used[i] = true;\\n path.push(nums[i]);\\n backtrack(path, used);\\n path.pop();\\n used[i] = false;\\n }\\n }\\n backtrack();\\n return result;\\n}\\n","explanation":"This function generates all possible permutations of an array using backtracking.","category":"Backtracking"},{"id":104,"topic":"Combination Sum","code":"// Find all unique combinations that sum up to the target\\nfunction combinationSum(candidates, target) {\\n let result = [];\\n function backtrack(start = 0, path = [], remaining = target) {\\n if (remaining === 0) {\\n result.push([...path]);\\n return;\\n }\\n for (let i = start; i < candidates.length; i++) {\\n if (remaining < candidates[i]) continue;\\n path.push(candidates[i]);\\n backtrack(i, path, remaining - candidates[i]);\\n path.pop();\\n }\\n }\\n backtrack();\\n return result;\\n}\\n","explanation":"This function finds all unique combinations of numbers from the candidates array that sum up to the target.","category":"Backtracking"},{"id":105,"topic":"N-Queens II","code":"// Count all unique solutions to the N-Queens problem\\nfunction totalNQueens(n) {\\n let count = 0;\\n function backtrack(row = 0, cols = new Set(), diags1 = new Set(), diags2 = new Set()) {\\n if (row === n) {\\n count++;\\n return;\\n }\\n for (let col = 0; col < n; col++) {\\n let diag1 = row - col;\\n let diag2 = row + col;\\n if (cols.has(col) || diags1.has(diag1) || diags2.has(diag2)) continue;\\n cols.add(col);\\n diags1.add(diag1);\\n diags2.add(diag2);\\n backtrack(row + 1, cols, diags1, diags2);\\n cols.delete(col);\\n diags1.delete(diag1);\\n diags2.delete(diag2);\\n }\\n }\\n backtrack();\\n return count;\\n}\\n","explanation":"This function counts all distinct solutions to the N-Queens problem using backtracking.","category":"Backtracking"},{"id":106,"topic":"Generate Parentheses","code":"// Generate all combinations of well-formed parentheses\\nfunction generateParenthesis(n) {\\n let result = [];\\n function backtrack(s = \'\', left = 0, right = 0) {\\n if (s.length === 2 * n) {\\n result.push(s);\\n return;\\n }\\n if (left < n) backtrack(s + \'(\', left + 1, right);\\n if (right < left) backtrack(s + \')\', left, right + 1);\\n }\\n backtrack();\\n return result;\\n}\\n","explanation":"This function generates all combinations of well-formed parentheses.","category":"Backtracking"},{"id":107,"topic":"Word Search","code":"// Find if a word exists in the board\\nfunction exist(board, word) {\\n function dfs(i, j, k) {\\n if (k === word.length) return true;\\n if (i < 0 || i >= board.length || j < 0 || j >= board[0].length || board[i][j] !== word[k]) return false;\\n let temp = board[i][j];\\n board[i][j] = \'#\';\\n let found = dfs(i + 1, j, k + 1) || dfs(i - 1, j, k + 1) || dfs(i, j + 1, k + 1) || dfs(i, j - 1, k + 1);\\n board[i][j] = temp;\\n return found;\\n }\\n for (let i = 0; i < board.length; i++) {\\n for (let j = 0; j < board[0].length; j++) {\\n if (dfs(i, j, 0)) return true;\\n }\\n }\\n return false;\\n}\\n","explanation":"This function finds if a word exists in the board using DFS.","category":"Backtracking"},{"id":108,"topic":"Convert Sorted Array to Binary Search Tree","code":"// Convert sorted array to binary search tree\\nvar sortedArrayToBST = function(nums) {\\n // Helper function to recursively build the BST\\n const buildBST = (start, end) => {\\n if (start > end) {\\n return null; // Base case: no elements to process\\n }\\n // Choose the middle element as the root\\n const mid = Math.floor((start + end) / 2);\\n const root = new TreeNode(nums[mid]);\\n // Recursively build the left and right subtrees\\n root.left = buildBST(start, mid - 1);\\n root.right = buildBST(mid + 1, end);\\n return root;\\n };\\n // Start the recursion with the entire array range\\n return buildBST(0, nums.length - 1);\\n};\\n\\n// Helper function to print the tree in a readable format\\nconst printTree = (node) => {\\n if (node === null) {\\n return \\"null\\";\\n }\\n return `(${node.val}, ${printTree(node.left)}, ${printTree(node.right)})`;\\n};\\n\\n// Example\\nconst nums = [-10, -3, 0, 5, 9];\\nconst bst = sortedArrayToBST(nums);\\nconsole.log(\\"Generated BST:\\", printTree(bst));\\n","explanation":"The goal is to convert a sorted array into a height-balanced binary search tree (BST). A height-balanced BST is one where the depth of the two subtrees of every node never differs by more than one.<br/><br/>To achieve this, we recursively choose the middle element of the array (or subarray) as the root, ensuring balance. The left half of the array forms the left subtree, and the right half forms the right subtree. This process continues until all elements are placed in the tree.<br/><br/>1. We define a helper function `buildBST(start, end)` which:<br/> - Returns `null` when `start > end` (base case).<br/> - Chooses the middle element `nums[mid]` as the root.<br/> - Recursively builds the left subtree using elements before the middle and the right subtree using elements after the middle.<br/><br/>2. The function `sortedArrayToBST` starts the recursion with the full array range (`start = 0`, `end = nums.length - 1`).<br/><br/>3. A helper function `printTree(node)` is used to visualize the resulting tree in a readable format.<br/><br/>Time Complexity: O(n), as each element is processed once.<br/>Space Complexity: O(log n), due to recursion stack depth for a balanced tree.<br/><br/>Example - Tree Structure Explanation:<br/>For the input array `[-10, -3, 0, 5, 9]`, the output tree structure is as follows:<br/><br/>      0<br/>     / \\\\<br/>   -3   9<br/>   /   /<br/> -10   5<br/><br/>- The root node is `0` (middle element).<br/>- The left subtree of `0` is formed from the left half of the array `[-10, -3]`, with `-3` as the root and `-10` as its left child.<br/>- The right subtree of `0` is formed from the right half of the array `[5, 9]`, with `9` as the root and `5` as its left child.","category":"Divide & Conquer"},{"id":109,"topic":"Sort List","code":"// Sort a linked list in O(n log n) time\\nfunction sortList(head) {\\n if (!head || !head.next) return head;\\n let slow = head, fast = head, prev = null;\\n while (fast && fast.next) {\\n prev = slow;\\n slow = slow.next;\\n fast = fast.next.next;\\n }\\n prev.next = null;\\n let l1 = sortList(head);\\n let l2 = sortList(slow);\\n return merge(l1, l2);\\n}\\nfunction merge(l1, l2) {\\n let dummy = new ListNode(0), current = dummy;\\n while (l1 && l2) {\\n if (l1.val < l2.val) {\\n current.next = l1;\\n l1 = l1.next;\\n } else {\\n current.next = l2;\\n l2 = l2.next;\\n }\\n current = current.next;\\n }\\n current.next = l1 ? l1 : l2;\\n return dummy.next;\\n}\\n","explanation":"This function sorts a linked list in O(n log n) time using merge sort.","category":"Divide & Conquer"},{"id":110,"topic":"Construct Quad Tree","code":"// Construct a quad tree\\nfunction construct(grid) {\\n function build(x, y, length) {\\n if (length === 1) return new Node(grid[x][y] === 1, true);\\n let half = length / 2;\\n let topLeft = build(x, y, half);\\n let topRight = build(x, y + half, half);\\n let bottomLeft = build(x + half, y, half);\\n let bottomRight = build(x + half, y + half, half);\\n if (topLeft.isLeaf && topRight.isLeaf && bottomLeft.isLeaf && bottomRight.isLeaf && topLeft.val === topRight.val && topRight.val === bottomLeft.val && bottomLeft.val === bottomRight.val) {\\n return new Node(topLeft.val, true);\\n }\\n return new Node(\'*\', false, topLeft, topRight, bottomLeft, bottomRight);\\n }\\n return build(0, 0, grid.length);\\n}\\n","explanation":"This function constructs a quad tree from a grid.","category":"Divide & Conquer"},{"id":111,"topic":"Merge k Sorted Lists","code":"// Merge k sorted linked lists\\nfunction mergeKLists(lists) {\\n if (!lists.length) return null;\\n function mergeTwoLists(l1, l2) {\\n let dummy = new ListNode(0), current = dummy;\\n while (l1 && l2) {\\n if (l1.val < l2.val) {\\n current.next = l1;\\n l1 = l1.next;\\n } else {\\n current.next = l2;\\n l2 = l2.next;\\n }\\n current = current.next;\\n }\\n current.next = l1 ? l1 : l2;\\n return dummy.next;\\n }\\n while (lists.length > 1) {\\n let l1 = lists.shift();\\n let l2 = lists.shift();\\n let merged = mergeTwoLists(l1, l2);\\n lists.push(merged);\\n }\\n return lists[0];\\n}\\n","explanation":"This function merges k sorted linked lists into one sorted linked list.","category":"Divide & Conquer"},{"id":112,"topic":"Maximum Subarray","code":"// Find the contiguous subarray with the maximum sum\\nvar maxSubArray = function(nums) {\\n let maxSum = nums[0];  // Initialize maxSum with the first element\\n let currentSum = 0;    // Initialize currentSum to 0\\n\\n // Iterate through the array\\n for (let num of nums) {\\n // Decide whether to start a new subarray or continue adding the current number\\n currentSum = Math.max(num, currentSum + num);\\n\\n // Update maxSum if currentSum is greater\\n maxSum = Math.max(maxSum, currentSum);\\n }\\n\\n return maxSum;  // Return the largest sum found\\n};\\n\\n// Example\\nconst nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\\nconsole.log(\'Maximum Subarray Sum:\', maxSubArray(nums)); // Output: Maximum Subarray Sum: 6\\n","explanation":"The problem at hand is to find the contiguous subarray within an integer array `nums` that has the largest sum. This problem is efficiently solved using `Kadane\u2019s Algorithm`, which operates in linear time.<br/><br/>### Key Steps in Kadane\u2019s Algorithm:<br/><br/>1. Initialization:<br/> - We start by initializing `maxSum` with the first element of the array (`nums[0]`) since the subarray must have at least one element. This is also our starting point for comparison.<br/> - `currentSum` is initialized to 0, which will be used to track the sum of the current subarray as we iterate through the array.<br/><br/>2. Iterate through the array:<br/> - For each number in the array (`num`), we decide whether to:<br/> - Start a new subarray with the current number (`num`), or<br/> - Add the current number to the ongoing subarray sum (`currentSum + num`).<br/> - The decision is made by comparing `num` with `currentSum + num` and taking the larger value using `Math.max(num, currentSum + num)`. This allows us to effectively \\"reset\\" the sum if adding the current number leads to a smaller sum than just starting fresh with the current number.<br/><br/>3. Update `maxSum`:<br/> - After adjusting `currentSum` for each number, we check if `currentSum` is greater than the current `maxSum`. If it is, we update `maxSum` to be `currentSum`.<br/><br/>4. Return the result:<br/> - After iterating through the array, the `maxSum` will contain the largest sum of any contiguous subarray, which is our desired result.<br/><br/>### Example Walkthrough:<br/>Given the input `[-2, 1, -3, 4, -1, 2, 1, -5, 4]`:<br/>- Initially, `maxSum` is `-2` (the first element) and `currentSum` is `0`.<br/>- We begin iterating:<br/> - When `1` is encountered, `currentSum` becomes `1` (since `1 > 0 + 1`).<br/> - Next, when `-3` is encountered, `currentSum` becomes `-2` (since `1 + (-3)` is less than `-3`).<br/> - When `4` is encountered, `currentSum` becomes `4` (since `4 > -2 + 4`), and so on.<br/>- The algorithm identifies the subarray `[4, -1, 2, 1]` with the maximum sum of `6`.<br/><br/>### Time Complexity:<br/>- O(n) where `n` is the length of the array, because we only need to make one pass through the array.<br/><br/>### Space Complexity:<br/>- O(1) since we only use a constant amount of extra space (`maxSum` and `currentSum`).","category":"Kadane\'s Algorithm"},{"id":113,"topic":"Maximum Sum Circular Subarray","code":"// Find the maximum sum of a circular subarray\\nfunction maxSubarraySumCircular(A) {\\n let total = 0, maxSum = A[0], currentMax = 0, minSum = A[0], currentMin = 0;\\n for (let a of A) {\\n currentMax = Math.max(currentMax + a, a);\\n maxSum = Math.max(maxSum, currentMax);\\n currentMin = Math.min(currentMin + a, a);\\n minSum = Math.min(minSum, currentMin);\\n total += a;\\n }\\n return maxSum > 0 ? Math.max(maxSum, total - minSum) : maxSum;\\n}\\n","explanation":"This function finds the maximum sum of a circular subarray.","category":"Kadane\'s Algorithm"},{"id":114,"topic":"Search Insert Position","code":"// Find the index where a target should be inserted\\nvar searchInsert = function(nums, target) {\\n console.log(\\"nums:\\", nums);\\n console.log(\\"target:\\", target);\\n // Initializing two pointers, left and right, which will define the search range\\n let left = 0;\\n let right = nums.length - 1;\\n\\n // Binary search loop: Continue until the left pointer exceeds the right pointer\\n while (left <= right) {\\n // Find the middle index in the current search range\\n const mid = Math.floor((left + right) / 2);\\n\\n // Case 1: If the target is found at mid, return the mid index\\n if (nums[mid] === target) {\\n return mid;\\n }\\n // Case 2: If the target is greater than the mid value, search in the right half\\n else if (nums[mid] < target) {\\n left = mid + 1;  // Move the left pointer to mid + 1\\n }\\n // Case 3: If the target is smaller than the mid value, search in the left half\\n else {\\n right = mid - 1;  // Move the right pointer to mid - 1\\n }\\n }\\n\\n // If the target is not found, left will be the position where the target should be inserted\\n // This ensures the array remains sorted if the target were to be inserted\\n return left;\\n};\\n\\n// Example usage:\\nconsole.log(searchInsert([1, 3, 5, 6], 5)); // Output: 2\\nconsole.log(searchInsert([1, 3, 5, 6], 2)); // Output: 1\\nconsole.log(searchInsert([1, 3, 5, 6], 7)); // Output: 4\\nconsole.log(searchInsert([1, 3, 5, 6], 0)); // Output: 0\\nconsole.log(searchInsert([1, 3, 5, 6], 4)); // Output: 2\\n","explanation":"- `left` and `right` represent the current search boundaries within the array. Initially, `left` is at the start (0) and `right` is at the end (nums.length - 1).<br/><br/>- `mid` is the middle index of the current search range and is calculated by `(left + right) / 2`. It is used to compare the target with the element at that index.<br/><br/>- The three cases inside the while loop handle different situations:<br/> - If the element at `nums[mid]` equals the target, we return the `mid` index immediately, as we have found the target.<br/> - If `nums[mid]` is less than the target, the target must be on the right side of `mid`, so we move the `left` pointer to `mid + 1`.<br/> - If `nums[mid]` is greater than the target, the target must be on the left side of `mid`, so we move the `right` pointer to `mid - 1`.<br/><br/>- Once the binary search is complete and the target is not found, the `left` pointer will be positioned at the index where the target should be inserted to keep the array sorted. This is the key idea: if the target isn\'t present, `left` will point to the first position where the target can be inserted without disrupting the order.<br/><br/>Time Complexity:<br/><br/>- O(log n): The binary search halves the search range in each step, leading to a logarithmic time complexity. This is optimal for searching in a sorted array.<br/><br/>Space Complexity:<br/><br/>- O(1): The algorithm uses a constant amount of extra space, as it only stores a few variables (left, right, mid) and does not use any additional data structures.","category":"Binary Search"},{"id":115,"topic":"Search a 2D Matrix","code":"// Search a target in a 2D matrix\\nfunction searchMatrix(matrix, target) {\\n if (!matrix.length || !matrix[0].length) return false;\\n let rows = matrix.length, cols = matrix[0].length;\\n let left = 0, right = rows * cols - 1;\\n while (left <= right) {\\n let mid = Math.floor((left + right) / 2);\\n let midVal = matrix[Math.floor(mid / cols)][mid % cols];\\n if (midVal === target) return true;\\n if (midVal < target) left = mid + 1;\\n else right = mid - 1;\\n }\\n return false;\\n}\\n","explanation":"This function searches for a target in a 2D matrix.","category":"Binary Search"},{"id":116,"topic":"Find Peak Element","code":"// Find peak element\\nfunction findPeakElement(nums) {\\n let left = 0, right = nums.length - 1;\\n while (left < right) {\\n let mid = Math.floor((left + right) / 2);\\n if (nums[mid] > nums[mid + 1]) right = mid;\\n else left = mid + 1;\\n }\\n return left;\\n}\\n","explanation":"This function finds a peak element in an array.","category":"Binary Search"},{"id":117,"topic":"Search in Rotated Sorted Array","code":"// Search in rotated sorted array\\nfunction search(nums, target) {\\n let left = 0, right = nums.length - 1;\\n while (left <= right) {\\n let mid = Math.floor((left + right) / 2);\\n if (nums[mid] === target) return mid;\\n if (nums[left] <= nums[mid]) {\\n if (nums[left] <= target && target < nums[mid]) right = mid - 1;\\n else left = mid + 1;\\n } else {\\n if (nums[mid] < target && target <= nums[right]) left = mid + 1;\\n else right = mid - 1;\\n }\\n }\\n return -1;\\n}\\n","explanation":"This function searches for a target in a rotated sorted array.","category":"Binary Search"},{"id":118,"topic":"Find First and Last Position of Element in Sorted Array","code":"// Find first and last position of element in sorted array\\nfunction searchRange(nums, target) {\\n function findBound(isFirst) {\\n let left = 0, right = nums.length - 1;\\n while (left <= right) {\\n let mid = Math.floor((left + right) / 2);\\n if (nums[mid] === target) {\\n if (isFirst) {\\n if (mid === left || nums[mid - 1] !== target) return mid;\\n right = mid - 1;\\n } else {\\n if (mid === right || nums[mid + 1] !== target) return mid;\\n left = mid + 1;\\n }\\n } else if (nums[mid] < target) left = mid + 1;\\n else right = mid - 1;\\n }\\n return -1;\\n }\\n return [findBound(true), findBound(false)];\\n}\\n","explanation":"This function finds the first and last position of an element in a sorted array.","category":"Binary Search"},{"id":119,"topic":"Find Minimum in Rotated Sorted Array","code":"// Find minimum in rotated sorted array\\nfunction findMin(nums) {\\n let left = 0, right = nums.length - 1;\\n while (left < right) {\\n let mid = Math.floor((left + right) / 2);\\n if (nums[mid] > nums[right]) left = mid + 1;\\n else right = mid;\\n }\\n return nums[left];\\n}\\n","explanation":"This function finds the minimum element in a rotated sorted array.","category":"Binary Search"},{"id":120,"topic":"Median of Two Sorted Arrays","code":"// Find median of two sorted arrays\\nfunction findMedianSortedArrays(nums1, nums2) {\\n let m = nums1.length, n = nums2.length;\\n if (m > n) [nums1, nums2, m, n] = [nums2, nums1, n, m];\\n let imin = 0, imax = m, halfLen = Math.floor((m + n + 1) / 2);\\n while (imin <= imax) {\\n let i = Math.floor((imin + imax) / 2);\\n let j = halfLen - i;\\n if (i < m && nums1[i] < nums2[j - 1]) imin = i + 1;\\n else if (i > 0 && nums1[i - 1] > nums2[j]) imax = i - 1;\\n else {\\n let maxOfLeft = 0;\\n if (i === 0) maxOfLeft = nums2[j - 1];\\n else if (j === 0) maxOfLeft = nums1[i - 1];\\n else maxOfLeft = Math.max(nums1[i - 1], nums2[j - 1]);\\n if ((m + n) % 2 === 1) return maxOfLeft;\\n let minOfRight = 0;\\n if (i === m) minOfRight = nums2[j];\\n else if (j === n) minOfRight = nums1[i];\\n else minOfRight = Math.min(nums1[i], nums2[j]);\\n return (maxOfLeft + minOfRight) / 2;\\n }\\n }\\n return 0;\\n}\\n","explanation":"This function finds the median of two sorted arrays.","category":"Binary Search"},{"id":121,"topic":"Kth Largest Element in an Array","code":"// Find kth largest element in an array\\nfunction findKthLargest(nums, k) {\\n let heap = new MinHeap();\\n for (let num of nums) {\\n heap.add(num);\\n if (heap.size() > k) heap.poll();\\n }\\n return heap.peek();\\n}\\nclass MinHeap {\\n constructor() {\\n this.heap = [];\\n }\\n add(val) {\\n this.heap.push(val);\\n this.bubbleUp();\\n }\\n poll() {\\n if (this.size() === 1) return this.heap.pop();\\n let root = this.heap[0];\\n this.heap[0] = this.heap.pop();\\n this.bubbleDown();\\n return root;\\n }\\n peek() {\\n return this.heap[0];\\n }\\n size() {\\n return this.heap.length;\\n }\\n bubbleUp() {\\n let index = this.heap.length - 1;\\n while (index > 0) {\\n let parentIndex = Math.floor((index - 1) / 2);\\n if (this.heap[index] >= this.heap[parentIndex]) break;\\n [this.heap[index], this.heap[parentIndex]] = [this.heap[parentIndex], this.heap[index]];\\n index = parentIndex;\\n }\\n }\\n bubbleDown() {\\n let index = 0;\\n let length = this.heap.length;\\n let element = this.heap[0];\\n while (true) {\\n let leftChildIndex = 2 * index + 1;\\n let rightChildIndex = 2 * index + 2;\\n let leftChild, rightChild;\\n let swap = null;\\n if (leftChildIndex < length) {\\n leftChild = this.heap[leftChildIndex];\\n if (leftChild < element) swap = leftChildIndex;\\n }\\n if (rightChildIndex < length) {\\n rightChild = this.heap[rightChildIndex];\\n if ((swap === null && rightChild < element) || (swap !== null && rightChild < leftChild)) swap = rightChildIndex;\\n }\\n if (swap === null) break;\\n this.heap[index] = this.heap[swap];\\n this.heap[swap] = element;\\n index = swap;\\n }\\n }\\n}\\n","explanation":"This function finds the kth largest element in an array using a min heap.","category":"Heap"},{"id":122,"topic":"IPO","code":"// Find the maximum capital after k projects\\nfunction findMaximizedCapital(k, W, Profits, Capital) {\\n let minCapital = new MinHeap(), maxProfit = new MaxHeap();\\n for (let i = 0; i < Capital.length; i++) minCapital.add([Capital[i], Profits[i]]);\\n for (let i = 0; i < k; i++) {\\n while (minCapital.size() && minCapital.peek()[0] <= W) maxProfit.add(minCapital.poll()[1]);\\n if (!maxProfit.size()) break;\\n W += maxProfit.poll();\\n }\\n return W;\\n}\\nclass MinHeap {\\n constructor() {\\n this.heap = [];\\n }\\n add(val) {\\n this.heap.push(val);\\n this.bubbleUp();\\n }\\n poll() {\\n if (this.size() === 1) return this.heap.pop();\\n let root = this.heap[0];\\n this.heap[0] = this.heap.pop();\\n this.bubbleDown();\\n return root;\\n }\\n peek() {\\n return this.heap[0];\\n }\\n size() {\\n return this.heap.length;\\n }\\n bubbleUp() {\\n let index = this.heap.length - 1;\\n while (index > 0) {\\n let parentIndex = Math.floor((index - 1) / 2);\\n if (this.heap[index][0] >= this.heap[parentIndex][0]) break;\\n [this.heap[index], this.heap[parentIndex]] = [this.heap[parentIndex], this.heap[index]];\\n index = parentIndex;\\n }\\n }\\n bubbleDown() {\\n let index = 0;\\n let length = this.heap.length;\\n let element = this.heap[0];\\n while (true) {\\n let leftChildIndex = 2 * index + 1;\\n let rightChildIndex = 2 * index + 2;\\n let leftChild, rightChild;\\n let swap = null;\\n if (leftChildIndex < length) {\\n leftChild = this.heap[leftChildIndex];\\n if (leftChild[0] < element[0]) swap = leftChildIndex;\\n }\\n if (rightChildIndex < length) {\\n rightChild = this.heap[rightChildIndex];\\n if ((swap === null && rightChild[0] < element[0]) || (swap !== null && rightChild[0] < leftChild[0])) swap = rightChildIndex;\\n }\\n if (swap === null) break;\\n this.heap[index] = this.heap[swap];\\n this.heap[swap] = element;\\n index = swap;\\n }\\n }\\n}\\nclass MaxHeap {\\n constructor() {\\n this.heap = [];\\n }\\n add(val) {\\n this.heap.push(val);\\n this.bubbleUp();\\n }\\n poll() {\\n if (this.size() === 1) return this.heap.pop();\\n let root = this.heap[0];\\n this.heap[0] = this.heap.pop();\\n this.bubbleDown();\\n return root;\\n }\\n peek() {\\n return this.heap[0];\\n }\\n size() {\\n return this.heap.length;\\n }\\n bubbleUp() {\\n let index = this.heap.length - 1;\\n while (index > 0) {\\n let parentIndex = Math.floor((index - 1) / 2);\\n if (this.heap[index] <= this.heap[parentIndex]) break;\\n [this.heap[index], this.heap[parentIndex]] = [this.heap[parentIndex], this.heap[index]];\\n index = parentIndex;\\n }\\n }\\n bubbleDown() {\\n let index = 0;\\n let length = this.heap.length;\\n let element = this.heap[0];\\n while (true) {\\n let leftChildIndex = 2 * index + 1;\\n let rightChildIndex = 2 * index + 2;\\n let leftChild, rightChild;\\n let swap = null;\\n if (leftChildIndex < length) {\\n leftChild = this.heap[leftChildIndex];\\n if (leftChild > element) swap = leftChildIndex;\\n }\\n if (rightChildIndex < length) {\\n rightChild = this.heap[rightChildIndex];\\n if ((swap === null && rightChild > element) || (swap !== null && rightChild > leftChild)) swap = rightChildIndex;\\n }\\n if (swap === null) break;\\n this.heap[index] = this.heap[swap];\\n this.heap[swap] = element;\\n index = swap;\\n }\\n }\\n}\\n","explanation":"This function finds the maximum capital after k projects.","category":"Heap"},{"id":123,"topic":"Find K Pairs with Smallest Sums","code":"// Find k pairs with smallest sums\\nfunction kSmallestPairs(nums1, nums2, k) {\\n let heap = new MinHeap();\\n for (let i = 0; i < Math.min(nums1.length, k); i++) heap.add([nums1[i] + nums2[0], i, 0]);\\n let result = [];\\n while (k-- > 0 && heap.size()) {\\n let [sum, i, j] = heap.poll();\\n result.push([nums1[i], nums2[j]]);\\n if (j + 1 < nums2.length) heap.add([nums1[i] + nums2[j + 1], i, j + 1]);\\n }\\n return result;\\n}\\nclass MinHeap {\\n constructor() {\\n this.heap = [];\\n }\\n add(val) {\\n this.heap.push(val);\\n this.bubbleUp();\\n }\\n poll() {\\n if (this.size() === 1) return this.heap.pop();\\n let root = this.heap[0];\\n this.heap[0] = this.heap.pop();\\n this.bubbleDown();\\n return root;\\n }\\n peek() {\\n return this.heap[0];\\n }\\n size() {\\n return this.heap.length;\\n }\\n bubbleUp() {\\n let index = this.heap.length - 1;\\n while (index > 0) {\\n let parentIndex = Math.floor((index - 1) / 2);\\n if (this.heap[index][0] >= this.heap[parentIndex][0]) break;\\n [this.heap[index], this.heap[parentIndex]] = [this.heap[parentIndex], this.heap[index]];\\n index = parentIndex;\\n }\\n }\\n bubbleDown() {\\n let index = 0;\\n let length = this.heap.length;\\n let element = this.heap[0];\\n while (true) {\\n let leftChildIndex = 2 * index + 1;\\n let rightChildIndex = 2 * index + 2;\\n let leftChild, rightChild;\\n let swap = null;\\n if (leftChildIndex < length) {\\n leftChild = this.heap[leftChildIndex];\\n if (leftChild[0] < element[0]) swap = leftChildIndex;\\n }\\n if (rightChildIndex < length) {\\n rightChild = this.heap[rightChildIndex];\\n if ((swap === null && rightChild[0] < element[0]) || (swap !== null && rightChild[0] < leftChild[0])) swap = rightChildIndex;\\n }\\n if (swap === null) break;\\n this.heap[index] = this.heap[swap];\\n this.heap[swap] = element;\\n index = swap;\\n }\\n }\\n}\\n","explanation":"This function finds k pairs with the smallest sums.","category":"Heap"},{"id":124,"topic":"Find Median from Data Stream","code":"// Find median from data stream\\nclass MedianFinder {\\n constructor() {\\n this.small = new MaxHeap();\\n this.large = new MinHeap();\\n }\\n addNum(num) {\\n this.small.add(num);\\n this.large.add(this.small.poll());\\n if (this.small.size() < this.large.size()) this.small.add(this.large.poll());\\n }\\n findMedian() {\\n return this.small.size() > this.large.size() ? this.small.peek() : (this.small.peek() + this.large.peek()) / 2;\\n }\\n}\\nclass MinHeap {\\n constructor() {\\n this.heap = [];\\n }\\n add(val) {\\n this.heap.push(val);\\n this.bubbleUp();\\n }\\n poll() {\\n if (this.size() === 1) return this.heap.pop();\\n let root = this.heap[0];\\n this.heap[0] = this.heap.pop();\\n this.bubbleDown();\\n return root;\\n }\\n peek() {\\n return this.heap[0];\\n }\\n size() {\\n return this.heap.length;\\n }\\n bubbleUp() {\\n let index = this.heap.length - 1;\\n while (index > 0) {\\n let parentIndex = Math.floor((index - 1) / 2);\\n if (this.heap[index] >= this.heap[parentIndex]) break;\\n [this.heap[index], this.heap[parentIndex]] = [this.heap[parentIndex], this.heap[index]];\\n index = parentIndex;\\n }\\n }\\n bubbleDown() {\\n let index = 0;\\n let length = this.heap.length;\\n let element = this.heap[0];\\n while (true) {\\n let leftChildIndex = 2 * index + 1;\\n let rightChildIndex = 2 * index + 2;\\n let leftChild, rightChild;\\n let swap = null;\\n if (leftChildIndex < length) {\\n leftChild = this.heap[leftChildIndex];\\n if (leftChild < element) swap = leftChildIndex;\\n }\\n if (rightChildIndex < length) {\\n rightChild = this.heap[rightChildIndex];\\n if ((swap === null && rightChild < element) || (swap !== null && rightChild < leftChild)) swap = rightChildIndex;\\n }\\n if (swap === null) break;\\n this.heap[index] = this.heap[swap];\\n this.heap[swap] = element;\\n index = swap;\\n }\\n }\\n}\\nclass MaxHeap {\\n constructor() {\\n this.heap = [];\\n }\\n add(val) {\\n this.heap.push(val);\\n this.bubbleUp();\\n }\\n poll() {\\n if (this.size() === 1) return this.heap.pop();\\n let root = this.heap[0];\\n this.heap[0] = this.heap.pop();\\n this.bubbleDown();\\n return root;\\n }\\n peek() {\\n return this.heap[0];\\n }\\n size() {\\n return this.heap.length;\\n }\\n bubbleUp() {\\n let index = this.heap.length - 1;\\n while (index > 0) {\\n let parentIndex = Math.floor((index - 1) / 2);\\n if (this.heap[index] <= this.heap[parentIndex]) break;\\n [this.heap[index], this.heap[parentIndex]] = [this.heap[parentIndex], this.heap[index]];\\n index = parentIndex;\\n }\\n }\\n bubbleDown() {\\n let index = 0;\\n let length = this.heap.length;\\n let element = this.heap[0];\\n while (true) {\\n let leftChildIndex = 2 * index + 1;\\n let rightChildIndex = 2 * index + 2;\\n let leftChild, rightChild;\\n let swap = null;\\n if (leftChildIndex < length) {\\n leftChild = this.heap[leftChildIndex];\\n if (leftChild > element) swap = leftChildIndex;\\n }\\n if (rightChildIndex < length) {\\n rightChild = this.heap[rightChildIndex];\\n if ((swap === null && rightChild > element) || (swap !== null && rightChild > leftChild)) swap = rightChildIndex;\\n }\\n if (swap === null) break;\\n this.heap[index] = this.heap[swap];\\n this.heap[swap] = element;\\n index = swap;\\n }\\n }\\n}\\n","explanation":"This function finds the median from a data stream.","category":"Heap"},{"id":125,"topic":"Add Binary","code":"// Add two binary numbers\\nfunction addBinary(a, b) {\\n let result = \'\', carry = 0, i = a.length - 1, j = b.length - 1;\\n while (i >= 0 || j >= 0 || carry) {\\n let sum = carry;\\n if (i >= 0) sum += parseInt(a[i--], 2);\\n if (j >= 0) sum += parseInt(b[j--], 2);\\n result = (sum % 2) + result;\\n carry = Math.floor(sum / 2);\\n }\\n return result;\\n}\\n","explanation":"This function adds two binary numbers and returns the result as a binary string.","category":"Bit Manipulation"},{"id":126,"topic":"Reverse Bits","code":"// Reverse bits of a given 32 bits unsigned integer\\nfunction reverseBits(n) {\\n let result = 0;\\n for (let i = 0; i < 32; i++) {\\n result = (result << 1) | (n & 1);\\n n >>>= 1;\\n }\\n return result >>> 0;\\n}\\n","explanation":"This function reverses the bits of a given 32 bits unsigned integer.","category":"Bit Manipulation"},{"id":127,"topic":"Number of 1 Bits","code":"// Count the number of 1 bits\\nfunction hammingWeight(n) {\\n let count = 0;\\n while (n !== 0) {\\n count += n & 1;\\n n >>>= 1;\\n }\\n return count;\\n}\\n","explanation":"This function counts the number of 1 bits in a given integer.","category":"Bit Manipulation"},{"id":128,"topic":"Single Number","code":"// Find the single number\\nfunction singleNumber(nums) {\\n let result = 0;\\n for (let num of nums) {\\n result ^= num;\\n }\\n return result;\\n}\\n","explanation":"This function finds the single number in an array where every other number appears twice.","category":"Bit Manipulation"},{"id":129,"topic":"Single Number II","code":"// Find the single number that appears only once\\nfunction singleNumber(nums) {\\n let ones = 0, twos = 0;\\n for (let num of nums) {\\n ones = (ones ^ num) & ~twos;\\n twos = (twos ^ num) & ~ones;\\n }\\n return ones;\\n}\\n","explanation":"This function finds the single number that appears only once in an array where every other number appears three times.","category":"Bit Manipulation"},{"id":130,"topic":"Bitwise AND of Numbers Range","code":"// Find the bitwise AND of numbers range\\nfunction rangeBitwiseAnd(m, n) {\\n let shift = 0;\\n while (m < n) {\\n m >>= 1;\\n n >>= 1;\\n shift++;\\n }\\n return m << shift;\\n}\\n","explanation":"This function finds the bitwise AND of all numbers in a given range.","category":"Bit Manipulation"},{"id":131,"topic":"Palindrome Number","code":"// Check if a number is a palindrome\\nfunction isPalindrome(x) {\\n if (x < 0 || (x % 10 === 0 && x !== 0)) return false;\\n let revertedNumber = 0;\\n while (x > revertedNumber) {\\n revertedNumber = revertedNumber * 10 + x % 10;\\n x = Math.floor(x / 10);\\n }\\n return x === revertedNumber || x === Math.floor(revertedNumber / 10);\\n}\\n","explanation":"This function checks if a number is a palindrome.","category":"Math"},{"id":132,"topic":"Plus One","code":"// Increment a number represented as an array\\nfunction plusOne(digits) {\\n for (let i = digits.length - 1; i >= 0; i--) {\\n if (digits[i] < 9) {\\n digits[i]++;\\n return digits;\\n }\\n digits[i] = 0;\\n }\\n digits.unshift(1);\\n return digits;\\n}\\n","explanation":"This function increments a number represented as an array of digits by one.","category":"Math"},{"id":133,"topic":"Factorial Trailing Zeroes","code":"// Find the number of trailing zeroes in factorial\\nfunction trailingZeroes(n) {\\n let count = 0;\\n while (n > 0) {\\n n = Math.floor(n / 5);\\n count += n;\\n }\\n return count;\\n}\\n","explanation":"This function finds the number of trailing zeroes in the factorial of a given number.","category":"Math"},{"id":134,"topic":"Sqrt(x)","code":"// Calculate the square root of x\\nfunction mySqrt(x) {\\n if (x === 0) return 0;\\n let left = 1, right = x;\\n while (left <= right) {\\n let mid = Math.floor((left + right) / 2);\\n if (mid * mid === x) return mid;\\n if (mid * mid < x) left = mid + 1;\\n else right = mid - 1;\\n }\\n return right;\\n}\\n","explanation":"This function calculates the square root of x using binary search.","category":"Math"},{"id":135,"topic":"Pow(x, n)","code":"// Calculate x raised to the power n\\nfunction myPow(x, n) {\\n if (n === 0) return 1;\\n if (n < 0) return 1 / myPow(x, -n);\\n if (n % 2 === 0) return myPow(x * x, n / 2);\\n return x * myPow(x * x, (n - 1) / 2);\\n}\\n","explanation":"This function calculates x raised to the power n using recursion.","category":"Math"},{"id":136,"topic":"Max Points on a Line","code":"// Find the maximum number of points on a line\\nfunction maxPoints(points) {\\n if (points.length < 3) return points.length;\\n let max = 0;\\n for (let i = 0; i < points.length; i++) {\\n let map = new Map(), duplicates = 1;\\n for (let j = i + 1; j < points.length; j++) {\\n let dx = points[j][0] - points[i][0];\\n let dy = points[j][1] - points[i][1];\\n if (dx === 0 && dy === 0) {\\n duplicates++;\\n continue;\\n }\\n let gcd = getGCD(dx, dy);\\n dx /= gcd;\\n dy /= gcd;\\n let key = `${dx}/${dy}`;\\n map.set(key, (map.get(key) || 0) + 1);\\n }\\n max = Math.max(max, duplicates);\\n for (let count of map.values()) {\\n max = Math.max(max, count + duplicates);\\n }\\n }\\n return max;\\n}\\nfunction getGCD(a, b) {\\n if (b === 0) return a;\\n return getGCD(b, a % b);\\n}\\n","explanation":"This function finds the maximum number of points on a line.","category":"Math"},{"id":137,"topic":"Climbing Stairs","code":"// Find the number of ways to climb stairs\\nfunction climbStairs(n) {\\n if (n <= 2) return n;\\n let a = 1, b = 2;\\n for (let i = 3; i <= n; i++) {\\n let temp = a + b;\\n a = b;\\n b = temp;\\n }\\n return b;\\n}\\n","explanation":"This function finds the number of ways to climb a staircase with n steps.","category":"1D DP"},{"id":138,"topic":"House Robber","code":"// Find the maximum amount of money you can rob\\nvar rob = function(nums) {\\n // Handle edge cases\\n if (nums.length === 0) return 0; // No houses to rob\\n if (nums.length === 1) return nums[0]; // Only one house to rob\\n // Initialize variables for the maximum money robbed at two previous houses\\n let prevHouseMax = 0; // Represents the max money robbed from two houses ago (dp[i-2])\\n let lastHouseMax = nums[0]; // Represents the max money robbed from the last house (dp[i-1])\\n // Iterate through the houses starting from the second one\\n for (let i = 1; i < nums.length; i++) {\\n // Calculate the maximum money we can rob at this house\\n let currentMax = Math.max(lastHouseMax, nums[i] + prevHouseMax);\\n // Update the variables for the next iteration\\n prevHouseMax = lastHouseMax;\\n lastHouseMax = currentMax;\\n }\\n // The final `lastHouseMax` contains the maximum amount of money that can be robbed\\n return lastHouseMax;\\n};\\n\\n// Example usage:\\nconsole.log(rob([1,2,3,1])); // Output: 4\\nconsole.log(rob([2,7,9,3,1])); // Output: 12\\n","explanation":"1. Edge Cases:<br/> - If the list is empty, return 0 as there are no houses to rob.<br/> - If there is only one house, return its value (`nums[0]`).<br/><br/>2. Dynamic Programming Approach:<br/> - Use two variables, `prevHouseMax` and `lastHouseMax`, to keep track of the maximum money robbed from the last two houses.<br/> - For each house:<br/> - Decide between skipping the house (taking `lastHouseMax`) or robbing it (taking `nums[i] + prevHouseMax`).<br/> - Store the maximum of these two options in `currentMax`.<br/><br/>3. Space Optimization:<br/> - Instead of using an entire array to store intermediate results, we only track the last two states, reducing space complexity to O(1).<br/><br/>4. Final Result:<br/> - After processing all houses, `lastHouseMax` holds the maximum amount of money that can be robbed.<br/><br/>Time Complexity: O(n), where n is the number of houses. We only need to iterate through the list once.<br/>Space Complexity: O(1), as we only use a constant amount of extra space.","category":"1D DP"},{"id":139,"topic":"Word Break","code":"// Determine if you can segment the string into words\\nfunction wordBreak(s, wordDict) {\\n let dp = Array(s.length + 1).fill(false);\\n dp[0] = true;\\n for (let i = 1; i <= s.length; i++) {\\n for (let j = 0; j < i; j++) {\\n if (dp[j] && wordDict.includes(s.slice(j, i))) {\\n dp[i] = true;\\n break;\\n }\\n }\\n }\\n return dp[s.length];\\n}\\n","explanation":"This function determines if you can segment the string into words from the dictionary.","category":"1D DP"},{"id":140,"topic":"Coin Change","code":"// Find the minimum number of coins to make up a given amount\\nfunction coinChange(coins, amount) {\\n let dp = Array(amount + 1).fill(Infinity);\\n dp[0] = 0;\\n for (let coin of coins) {\\n for (let i = coin; i <= amount; i++) {\\n dp[i] = Math.min(dp[i], dp[i - coin] + 1);\\n }\\n }\\n return dp[amount] === Infinity ? -1 : dp[amount];\\n}\\n","explanation":"This function finds the minimum number of coins needed to make up a given amount.","category":"1D DP"},{"id":141,"topic":"Longest Increasing Subsequence","code":"// Find the length of the longest increasing subsequence\\nfunction lengthOfLIS(nums) {\\n let dp = Array(nums.length).fill(1);\\n for (let i = 1; i < nums.length; i++) {\\n for (let j = 0; j < i; j++) {\\n if (nums[i] > nums[j]) dp[i] = Math.max(dp[i], dp[j] + 1);\\n }\\n }\\n return Math.max(...dp);\\n}\\n","explanation":"This function finds the length of the longest increasing subsequence in an array.","category":"1D DP"},{"id":142,"topic":"Triangle","code":"// Find the minimum path sum from top to bottom\\nfunction minimumTotal(triangle) {\\n let dp = triangle[triangle.length - 1];\\n for (let i = triangle.length - 2; i >= 0; i--) {\\n for (let j = 0; j < triangle[i].length; j++) {\\n dp[j] = triangle[i][j] + Math.min(dp[j], dp[j + 1]);\\n }\\n }\\n return dp[0];\\n}\\n","explanation":"This function finds the minimum path sum from top to bottom in a triangle.","category":"Multidimensional DP"},{"id":143,"topic":"Minimum Path Sum","code":"// Find the minimum path sum in a grid\\nfunction minPathSum(grid) {\\n let m = grid.length, n = grid[0].length;\\n let dp = Array(m).fill().map(() => Array(n).fill(0));\\n dp[0][0] = grid[0][0];\\n for (let i = 1; i < m; i++) dp[i][0] = dp[i - 1][0] + grid[i][0];\\n for (let j = 1; j < n; j++) dp[0][j] = dp[0][j - 1] + grid[0][j];\\n for (let i = 1; i < m; i++) {\\n for (let j = 1; j < n; j++) {\\n dp[i][j] = grid[i][j] + Math.min(dp[i - 1][j], dp[i][j - 1]);\\n }\\n }\\n return dp[m - 1][n - 1];\\n}\\n","explanation":"This function finds the minimum path sum in a grid from top-left to bottom-right.","category":"Multidimensional DP"},{"id":144,"topic":"Unique Paths II","code":"// Find the number of unique paths in a grid with obstacles\\nfunction uniquePathsWithObstacles(obstacleGrid) {\\n let m = obstacleGrid.length, n = obstacleGrid[0].length;\\n let dp = Array(m).fill().map(() => Array(n).fill(0));\\n dp[0][0] = obstacleGrid[0][0] === 1 ? 0 : 1;\\n for (let i = 1; i < m; i++) dp[i][0] = obstacleGrid[i][0] === 1 ? 0 : dp[i - 1][0];\\n for (let j = 1; j < n; j++) dp[0][j] = obstacleGrid[0][j] === 1 ? 0 : dp[0][j - 1];\\n for (let i = 1; i < m; i++) {\\n for (let j = 1; j < n; j++) {\\n if (obstacleGrid[i][j] === 1) dp[i][j] = 0;\\n else dp[i][j] = dp[i - 1][j] + dp[i][j - 1];\\n }\\n }\\n return dp[m - 1][n - 1];\\n}\\n","explanation":"This function finds the number of unique paths in a grid with obstacles from top-left to bottom-right.","category":"Multidimensional DP"},{"id":145,"topic":"Longest Palindromic Substring","code":"// Find the longest palindromic substring\\nfunction longestPalindrome(s) {\\n let n = s.length;\\n let dp = Array(n).fill().map(() => Array(n).fill(false));\\n let maxLength = 1, start = 0;\\n for (let i = 0; i < n; i++) dp[i][i] = true;\\n for (let i = 0; i < n - 1; i++) {\\n if (s[i] === s[i + 1]) {\\n dp[i][i + 1] = true;\\n start = i;\\n maxLength = 2;\\n }\\n }\\n for (let k = 3; k <= n; k++) {\\n for (let i = 0; i < n - k + 1; i++) {\\n let j = i + k - 1;\\n if (dp[i + 1][j - 1] && s[i] === s[j]) {\\n dp[i][j] = true;\\n if (k > maxLength) {\\n start = i;\\n maxLength = k;\\n }\\n }\\n }\\n }\\n return s.substring(start, start + maxLength);\\n}\\n","explanation":"This function finds the longest palindromic substring in a given string.","category":"Multidimensional DP"},{"id":146,"topic":"Interleaving String","code":"// Determine if s3 is an interleaving of s1 and s2\\nfunction isInterleave(s1, s2, s3) {\\n if (s1.length + s2.length !== s3.length) return false;\\n let dp = Array(s1.length + 1).fill().map(() => Array(s2.length + 1).fill(false));\\n dp[0][0] = true;\\n for (let i = 1; i <= s1.length; i++) dp[i][0] = dp[i - 1][0] && s1[i - 1] === s3[i - 1];\\n for (let j = 1; j <= s2.length; j++) dp[0][j] = dp[0][j - 1] && s2[j - 1] === s3[j - 1];\\n for (let i = 1; i <= s1.length; i++) {\\n for (let j = 1; j <= s2.length; j++) {\\n dp[i][j] = (dp[i - 1][j] && s1[i - 1] === s3[i + j - 1]) || (dp[i][j - 1] && s2[j - 1] === s3[i + j - 1]);\\n }\\n }\\n return dp[s1.length][s2.length];\\n}\\n","explanation":"This function determines if s3 is an interleaving of s1 and s2.","category":"Multidimensional DP"},{"id":147,"topic":"Edit Distance","code":"// Find the minimum edit distance between two strings\\nfunction minDistance(word1, word2) {\\n let m = word1.length, n = word2.length;\\n let dp = Array(m + 1).fill().map(() => Array(n + 1).fill(0));\\n for (let i = 0; i <= m; i++) dp[i][0] = i;\\n for (let j = 0; j <= n; j++) dp[0][j] = j;\\n for (let i = 1; i <= m; i++) {\\n for (let j = 1; j <= n; j++) {\\n if (word1[i - 1] === word2[j - 1]) dp[i][j] = dp[i - 1][j - 1];\\n else dp[i][j] = Math.min(dp[i - 1][j - 1], dp[i - 1][j], dp[i][j - 1]) + 1;\\n }\\n }\\n return dp[m][n];\\n}\\n","explanation":"This function finds the minimum edit distance between two strings.","category":"Multidimensional DP"},{"id":148,"topic":"Best Time to Buy and Sell Stock III","code":"// Find the maximum profit with at most two transactions\\nfunction maxProfit(prices) {\\n let t1Cost = Infinity, t2Cost = Infinity;\\n let t1Profit = 0, t2Profit = 0;\\n for (let price of prices) {\\n t1Cost = Math.min(t1Cost, price);\\n t1Profit = Math.max(t1Profit, price - t1Cost);\\n t2Cost = Math.min(t2Cost, price - t1Profit);\\n t2Profit = Math.max(t2Profit, price - t2Cost);\\n }\\n return t2Profit;\\n}\\n","explanation":"This function finds the maximum profit with at most two transactions.","category":"Multidimensional DP"},{"id":149,"topic":"Best Time to Buy and Sell Stock IV","code":"// Find the maximum profit with at most k transactions\\nfunction maxProfit(k, prices) {\\n if (prices.length === 0) return 0;\\n if (k >= prices.length / 2) {\\n let profit = 0;\\n for (let i = 1; i < prices.length; i++) {\\n if (prices[i] > prices[i - 1]) profit += prices[i] - prices[i - 1];\\n }\\n return profit;\\n }\\n let dp = Array(k + 1).fill().map(() => Array(prices.length).fill(0));\\n for (let i = 1; i <= k; i++) {\\n let maxDiff = -prices[0];\\n for (let j = 1; j < prices.length; j++) {\\n dp[i][j] = Math.max(dp[i][j - 1], prices[j] + maxDiff);\\n maxDiff = Math.max(maxDiff, dp[i - 1][j] - prices[j]);\\n }\\n }\\n return dp[k][prices.length - 1];\\n}\\n","explanation":"This function finds the maximum profit with at most k transactions.","category":"Multidimensional DP"},{"id":150,"topic":"Maximal Square","code":"// Find the largest square containing only 1\'s\\nfunction maximalSquare(matrix) {\\n if (matrix.length === 0) return 0;\\n let m = matrix.length, n = matrix[0].length;\\n let dp = Array(m).fill().map(() => Array(n).fill(0));\\n let maxSide = 0;\\n for (let i = 0; i < m; i++) {\\n for (let j = 0; j < n; j++) {\\n if (matrix[i][j] === \'1\') {\\n if (i === 0 || j === 0) dp[i][j] = 1;\\n else dp[i][j] = Math.min(dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1]) + 1;\\n maxSide = Math.max(maxSide, dp[i][j]);\\n }\\n }\\n }\\n return maxSide * maxSide;\\n}\\n","explanation":"This function finds the largest square containing only 1\'s in a binary matrix.","category":"Multidimensional DP"}]'),l=JSON.parse('[{"id":1,"topic":"Functions","category":"JavaScript Basics","code":"// Function Declaration\\nfunction add(a, b) {\\n return a + b;\\n}\\n// Function Expression\\nconst add = function(a, b) {\\n return a + b;\\n};\\n// Arrow Function\\nconst add = (a, b) => a + b;\\n// IIFE (Immediately Invoked Function Expression)\\n(function() {\\n console.log(\'IIFE\');\\n})();\\n","explanation":"This snippet demonstrates three ways to define functions in JavaScript: function declaration, function expression, and arrow function. In an interview, you might be asked to explain the differences, such as hoisting behavior and the \'this\' binding in arrow functions. Additionally, you could discuss the use cases for each type and their performance implications."},{"id":2,"topic":"APIs (Fetch, XMLHttpRequest, Axios)","category":"Web APIs","code":"// Fetch API\\nfetch(\'https://api.example.com/data\')\\n .then(response => response.json())\\n .then(data => console.log(data))\\n .catch(error => console.error(\'Error:\', error));\\n// XMLHttpRequest\\nconst xhr = new XMLHttpRequest();\\nxhr.open(\'GET\', \'https://api.example.com/data\');\\nxhr.onload = () => console.log(xhr.responseText);\\nxhr.onerror = () => console.error(\'Error:\', xhr.statusText);\\nxhr.send();\\n\\n// Using Async/Await\\nasync function fetchData() {\\n try {\\n  const response = await fetch(\'https://api.example.com/data\');\\n  const data = await response.json();\\n  console.log(data);\\n } catch (error) {\\n  console.error(\'Error:\', error);\\n }\\n}\\nfetchData();\\n\\n// Using Axios\\naxios.get(\'https://api.example.com/data\')\\n .then(response => console.log(response.data))\\n .catch(error => console.error(\'Error:\', error));\\n","explanation":"This snippet shows how to use the Fetch API, XMLHttpRequest, and Axios to make HTTP requests. In an interview, you might be asked to explain how promises work and how to handle asynchronous operations and errors. You could also discuss the differences between these methods and their advantages and disadvantages."},{"id":3,"topic":"BigO","category":"Algorithms","code":"// Constant Time O(1)\\nfunction getFirstElement(arr) {\\n return arr[0];\\n}\\n// Linear Time O(n)\\nfunction printAllElements(arr) {\\n arr.forEach(element => console.log(element));\\n}\\n// Quadratic Time O(n^2)\\nfunction printAllPairs(arr) {\\n arr.forEach((el1, i) => {\\n  arr.forEach((el2, j) => {\\n   console.log(el1, el2);\\n  });\\n });\\n}\\n// Logarithmic Time O(log n)\\nfunction binarySearch(arr, target) {\\n let left = 0, right = arr.length - 1;\\n while (left <= right) {\\n  const mid = Math.floor((left + right) / 2);\\n  if (arr[mid] === target) return mid;\\n  else if (arr[mid] < target) left = mid + 1;\\n  else right = mid - 1;\\n }\\n return -1;\\n}\\n","explanation":"This snippet demonstrates different time complexities: O(1), O(n), and O(n^2). In an interview, you might be asked to analyze the efficiency of algorithms and discuss how to optimize them. You could also explain how to identify the time complexity of a given algorithm and the impact of different data structures on performance."},{"id":4,"topic":"Closures","category":"JavaScript Basics","code":"// Closure Example\\nfunction makeCounter() {\\n let count = 0;\\n return function() {\\n  count++;\\n  return count;\\n };\\n}\\nconst counter = makeCounter();\\nconsole.log(counter()); // 1\\nconsole.log(counter()); // 2\\n// Closure with Parameters\\nfunction createAdder(x) {\\n return function(y) {\\n  return x + y;\\n };\\n}\\nconst addFive = createAdder(5);\\nconsole.log(addFive(2)); // 7\\n","explanation":"This snippet demonstrates a closure. In an interview, you might be asked to explain how closures work and their use cases, such as data encapsulation and creating private variables. You could also discuss how closures are used in functional programming and event handlers."},{"id":5,"topic":"Promises","category":"Asynchronous JavaScript","code":"// Creating a Promise\\nconst promise = new Promise((resolve, reject) => {\\n const success = true;\\n if (success) {\\n  resolve(\'Success!\');\\n } else {\\n  reject(\'Failure!\');\\n }\\n});\\n// Consuming a Promise\\npromise\\n .then(result => console.log(result))\\n .catch(error => console.error(error));\\n// Promise.all\\nconst promise1 = Promise.resolve(3);\\nconst promise2 = 42;\\nconst promise3 = new Promise((resolve, reject) => {\\n setTimeout(resolve, 100, \'foo\');\\n});\\nPromise.all([promise1, promise2, promise3]).then(values => {\\n console.log(values); // [3, 42, \'foo\']\\n});\\n","explanation":"This snippet shows how to create and consume a Promise. In an interview, you might be asked to discuss the advantages of promises over callbacks and how to handle asynchronous operations. You could also explain how to chain multiple promises and handle errors at different stages."},{"id":6,"topic":"Async/Await","category":"Asynchronous JavaScript","code":"// Async/Await Example\\nasync function fetchData() {\\n try {\\n  const response = await fetch(\'https://api.example.com/data\');\\n  const data = await response.json();\\n  console.log(data);\\n } catch (error) {\\n  console.error(\'Error:\', error);\\n }\\n}\\nfetchData();\\n// Async/Await with Multiple Promises\\nasync function fetchMultipleData() {\\n try {\\n  const [data1, data2] = await Promise.all([\\n   fetch(\'https://api.example.com/data1\').then(res => res.json()),\\n   fetch(\'https://api.example.com/data2\').then(res => res.json())\\n  ]);\\n  console.log(data1, data2);\\n } catch (error) {\\n  console.error(\'Error:\', error);\\n }\\n}\\nfetchMultipleData();\\n","explanation":"This snippet demonstrates the use of async/await syntax. In an interview, you might be asked to explain how async/await improves code readability and how it works under the hood. You could also discuss how to handle errors in async functions and the differences between async/await and traditional promise chaining."},{"id":7,"topic":"Event Loop","category":"JavaScript Basics","code":"// Event Loop Example\\nconsole.log(\'Start\');\\nsetTimeout(() => {\\n console.log(\'Timeout\');\\n}, 0);\\nPromise.resolve().then(() => {\\n console.log(\'Promise\');\\n});\\nconsole.log(\'End\');\\n// Event Loop with Async/Await\\nasync function asyncFunction() {\\n console.log(\'Async Start\');\\n await Promise.resolve();\\n console.log(\'Async End\');\\n}\\nasyncFunction();\\nconsole.log(\'After Async Function\');\\n","explanation":"This snippet illustrates the JavaScript event loop. In an interview, you might be asked to explain the order of execution for synchronous code, microtasks, and macrotasks, and how it affects asynchronous programming. You could also discuss how the event loop handles different types of events and the impact on performance."},{"id":8,"topic":"Hoisting","category":"JavaScript Basics","code":"// Hoisting Example\\nconsole.log(hoistedVar); // undefined\\nvar hoistedVar = \'I am hoisted\';\\n// Function hoisting\\nhoistedFunction();\\nfunction hoistedFunction() {\\n console.log(\'I am hoisted\');\\n}\\n// Let and Const Hoisting\\ntry {\\n console.log(notHoistedVar); // ReferenceError\\n let notHoistedVar = \'I am not hoisted\';\\n} catch (e) {\\n console.error(e);\\n}\\n","explanation":"This snippet demonstrates hoisting in JavaScript. In an interview, you might be asked to explain how hoisting works and its implications for variable and function declarations. You could also discuss the differences between var, let, and const in terms of hoisting and scope."},{"id":9,"topic":"This Keyword","category":"JavaScript Basics","code":"// \'this\' in Global Context\\nconsole.log(this); // Window object (in browsers)\\n// \'this\' in Object Method\\nconst obj = {\\n name: \'Alice\',\\n greet() {\\n  console.log(this.name);\\n }\\n};\\nobj.greet(); // Alice\\n// \'this\' in a Function\\nfunction showThis() {\\n console.log(this);\\n}\\nshowThis(); // undefined (in strict mode) or Window object (in non-strict mode)\\n// \'this\' in Arrow Function\\nconst arrowFunc = () => {\\n console.log(this);\\n};\\narrowFunc(); // Window object (in browsers)\\n","explanation":"This snippet shows different contexts of the \'this\' keyword. In an interview, you might be asked to explain how \'this\' is determined and how it behaves in different scenarios. You could also discuss how to explicitly set the value of \'this\' using call, apply, and bind methods."},{"id":10,"topic":"Array Methods","category":"JavaScript Basics","code":"// forEach\\n[1, 2, 3].forEach(num => console.log(num));\\n// map\\nconst squares = [1, 2, 3].map(num => num * num);\\n// filter\\nconst evens = [1, 2, 3, 4].filter(num => num % 2 === 0);\\n// reduce\\nconst sum = [1, 2, 3].reduce((acc, num) => acc + num, 0);\\n// find\\nconst found = [1, 2, 3, 4].find(num => num > 2);\\nconsole.log(found); // 3\\n// some\\nconst hasEven = [1, 2, 3, 4].some(num => num % 2 === 0);\\nconsole.log(hasEven); // true\\n","explanation":"This snippet demonstrates various array methods. In an interview, you might be asked to explain the use cases for each method and how they provide a functional approach to array manipulation. You could also discuss the performance implications of these methods and how to choose the appropriate method for a given task."},{"id":11,"topic":"Destructuring","category":"JavaScript Basics","code":"// Array Destructuring\\nconst [a, b] = [1, 2];\\n// Object Destructuring\\nconst {name, age} = {name: \'Alice\', age: 25};\\n// Nested Destructuring\\nconst user = {id: 1, profile: {name: \'Alice\', age: 25}};\\nconst {profile: {name: userName, age: userAge}} = user;\\nconsole.log(userName, userAge); // Alice 25\\n// Default Values\\nconst {x = 10, y = 20} = {x: 5};\\nconsole.log(x, y); // 5 20\\n","explanation":"This snippet shows how to use destructuring assignment. In an interview, you might be asked to explain how destructuring simplifies working with arrays and objects. You could also discuss advanced destructuring techniques, such as nested destructuring and default values."},{"id":12,"topic":"Spread Operator","category":"JavaScript Basics","code":"// Spread in Arrays\\nconst arr1 = [1, 2];\\nconst arr2 = [...arr1, 3, 4];\\n// Spread in Objects\\nconst obj1 = {a: 1, b: 2};\\nconst obj2 = {...obj1, c: 3};\\n// Spread with Function Arguments\\nfunction sum(a, b, c) {\\n return a + b + c;\\n}\\nconst numbers = [1, 2, 3];\\nconsole.log(sum(...numbers)); // 6\\n","explanation":"This snippet demonstrates the use of the spread operator. In an interview, you might be asked to explain how the spread operator helps in copying and merging arrays and objects. You could also discuss the differences between the spread operator and other methods like Object.assign and Array.concat."},{"id":13,"topic":"Rest Parameters","category":"JavaScript Basics","code":"// Rest Parameters\\nfunction sum(...numbers) {\\n return numbers.reduce((acc, num) => acc + num, 0);\\n}\\nconsole.log(sum(1, 2, 3)); // 6\\n// Rest Parameters with Destructuring\\nfunction multiply(multiplier, ...numbers) {\\n return numbers.map(num => num * multiplier);\\n}\\nconsole.log(multiply(2, 1, 2, 3)); // [2, 4, 6]\\n","explanation":"This snippet shows how to use rest parameters. In an interview, you might be asked to explain how rest parameters make it easier to handle functions with an indefinite number of arguments. You could also discuss the differences between rest parameters and the arguments object."},{"id":14,"topic":"Template Literals","category":"JavaScript Basics","code":"// Template Literals\\nconst name = \'Alice\';\\nconst greeting = `Hello, ${name}!`;\\nconsole.log(greeting); // Hello, Alice!\\n// Multi-line Strings\\nconst multiLine = `This is a\\nmulti-line string`;\\nconsole.log(multiLine);\\n// Tagged Templates\\nfunction tag(strings, ...values) {\\n return strings.raw[0] + values.join(\'\');\\n}\\nconst tagged = tag`Hello, ${name}!`;\\nconsole.log(tagged); // Hello, Alice!\\n","explanation":"This snippet demonstrates the use of template literals. In an interview, you might be asked to explain how template literals improve string interpolation and multi-line strings. You could also discuss the use of tagged templates and how they can be used for custom string processing."},{"id":15,"topic":"Default Parameters","category":"JavaScript Basics","code":"// Default Parameters\\nfunction greet(name = \'Guest\') {\\n console.log(`Hello, ${name}!`);\\n}\\ngreet(); // Hello, Guest!\\ngreet(\'Alice\'); // Hello, Alice!\\n// Default Parameters with Destructuring\\nfunction createUser({name = \'Guest\', age = 18} = {}) {\\n console.log(`Name: ${name}, Age: ${age}`);\\n}\\ncreateUser(); // Name: Guest, Age: 18\\ncreateUser({name: \'Alice\'}); // Name: Alice, Age: 18\\n","explanation":"This snippet shows how to use default parameters. In an interview, you might be asked to explain how default parameters provide default values and make functions more flexible. You could also discuss how default parameters interact with other function features like rest parameters and destructuring."},{"id":16,"topic":"Classes","category":"JavaScript Basics","code":"// Class Declaration\\nclass Person {\\n constructor(name, age) {\\n  this.name = name;\\n  this.age = age;\\n }\\n greet() {\\n  console.log(`Hello, my name is ${this.name}`);\\n }\\n}\\nconst alice = new Person(\'Alice\', 25);\\nalice.greet(); // Hello, my name is Alice\\n// Class Inheritance\\nclass Employee extends Person {\\n constructor(name, age, jobTitle) {\\n  super(name, age);\\n  this.jobTitle = jobTitle;\\n }\\n work() {\\n  console.log(`${this.name} is working as a ${this.jobTitle}`);\\n }\\n}\\nconst bob = new Employee(\'Bob\', 30, \'Developer\');\\nbob.greet(); // Hello, my name is Bob\\nbob.work(); // Bob is working as a Developer\\n","explanation":"This snippet demonstrates how to define and use classes. In an interview, you might be asked to explain the benefits of using classes for a more structured and object-oriented approach. You could also discuss the differences between ES6 classes and traditional constructor functions."},{"id":17,"topic":"Modules","category":"JavaScript Basics","code":"// Exporting a Module\\nexport const add = (a, b) => a + b;\\n// Importing a Module\\nimport { add } from \'./math.js\';\\nconsole.log(add(2, 3)); // 5\\n// Default Export\\nexport default function subtract(a, b) {\\n return a - b;\\n}\\n// Importing Default Export\\nimport subtract from \'./math.js\';\\nconsole.log(subtract(5, 3)); // 2\\n","explanation":"This snippet shows how to export and import modules. In an interview, you might be asked to explain how modules help in organizing code and managing dependencies. You could also discuss the differences between ES6 modules and other module systems like CommonJS and AMD."},{"id":18,"topic":"Set","category":"JavaScript Basics","code":"// Set Example\\nconst set = new Set([1, 2, 3, 3]);\\nset.add(4);\\nset.delete(2);\\nconsole.log(set.has(1)); // true\\nconsole.log(set.size); // 3\\n// Iterating over a Set\\nset.forEach(value => console.log(value));\\nfor (const value of set) {\\n console.log(value);\\n}\\n","explanation":"This snippet demonstrates the use of the Set object. In an interview, you might be asked to explain how Sets manage collections of unique items and their operations. You could also discuss the differences between Sets and arrays, and when to use each."},{"id":19,"topic":"Map","category":"JavaScript Basics","code":"// Map Example\\nconst map = new Map();\\nmap.set(\'a\', 1);\\nmap.set(\'b\', 2);\\nconsole.log(map.get(\'a\')); // 1\\nconsole.log(map.has(\'b\')); // true\\nmap.delete(\'b\');\\nconsole.log(map.size); // 1\\n// Iterating over a Map\\nmap.forEach((value, key) => console.log(key, value));\\nfor (const [key, value] of map) {\\n console.log(key, value);\\n}\\n","explanation":"This snippet shows how to use the Map object. In an interview, you might be asked to explain how Maps efficiently manage key-value pairs compared to plain objects. You could also discuss the differences between Maps and objects, and when to use each."},{"id":20,"topic":"Callbacks","category":"Asynchronous JavaScript","code":"// Callback Example\\nfunction fetchData(callback) {\\n setTimeout(() => {\\n  callback(\'Data received\');\\n }, 1000);\\n}\\nfetchData(data => console.log(data)); // Data received\\n// Callback Hell Example\\nfunction step1(callback) {\\n setTimeout(() => {\\n  console.log(\'Step 1\');\\n  callback();\\n }, 1000);\\n}\\nfunction step2(callback) {\\n setTimeout(() => {\\n  console.log(\'Step 2\');\\n  callback();\\n }, 1000);\\n}\\nfunction step3(callback) {\\n setTimeout(() => {\\n  console.log(\'Step 3\');\\n  callback();\\n }, 1000);\\n}\\nstep1(() => {\\n step2(() => {\\n  step3(() => {\\n   console.log(\'All steps completed\');\\n  });\\n });\\n});\\n","explanation":"This snippet demonstrates the use of callbacks. In an interview, you might be asked to explain how callbacks handle asynchronous operations and their drawbacks compared to promises. You could also discuss how to avoid callback hell and improve code readability."},{"id":21,"topic":"Error Handling","category":"JavaScript Basics","code":"// Try/Catch Example\\ntry {\\n throw new Error(\'Something went wrong\');\\n} catch (error) {\\n console.error(error.message); // Something went wrong\\n}\\n// Try/Catch with Finally\\ntry {\\n console.log(\'Try block\');\\n} catch (error) {\\n console.error(error.message);\\n} finally {\\n console.log(\'Finally block\');\\n}\\n","explanation":"This snippet shows how to use try/catch blocks. In an interview, you might be asked to explain how try/catch blocks handle exceptions and improve error management. You could also discuss how to use finally blocks and custom error types."},{"id":22,"topic":"Strict Mode","category":"JavaScript Basics","code":"// Strict Mode Example\\n\'use strict\';\\nfunction myFunction() {\\n x = 3.14; // This will cause an error because x is not declared\\n}\\nmyFunction();\\n// Strict Mode in Classes\\nclass MyClass {\\n constructor() {\\n  \'use strict\';\\n  this.x = 3.14; // This will cause an error if x is not declared\\n }\\n}\\n","explanation":"This snippet demonstrates the use of strict mode. In an interview, you might be asked to explain how strict mode enforces stricter parsing and error handling, improving code quality. You could also discuss the differences between strict mode and non-strict mode."},{"id":23,"topic":"Symbol","category":"JavaScript Basics","code":"// Symbol Example\\nconst sym1 = Symbol(\'description\');\\nconst sym2 = Symbol(\'description\');\\nconsole.log(sym1 === sym2); // false\\n// Symbol as Object Property\\nconst obj = {\\n [sym1]: \'value\'\\n};\\nconsole.log(obj[sym1]); // value\\n","explanation":"This snippet shows how to use the Symbol type. In an interview, you might be asked to explain how Symbols create unique and immutable values, avoiding name collisions. You could also discuss how Symbols are used in well-known symbols and meta-programming."},{"id":24,"topic":"Iterators","category":"JavaScript Basics","code":"// Iterator Example\\nconst iterable = [1, 2, 3];\\nconst iterator = iterable[Symbol.iterator]();\\nconsole.log(iterator.next()); // { value: 1, done: false }\\nconsole.log(iterator.next()); // { value: 2, done: false }\\nconsole.log(iterator.next()); // { value: 3, done: false }\\nconsole.log(iterator.next()); // { value: undefined, done: true }\\n// Custom Iterator\\nconst customIterable = {\\n [Symbol.iterator]() {\\n  let step = 0;\\n  return {\\n   next() {\\n    step++;\\n    if (step <= 3) {\\n     return { value: step, done: false };\\n    }\\n    return { value: undefined, done: true };\\n   }\\n  };\\n }\\n};\\nfor (const value of customIterable) {\\n console.log(value); // 1, 2, 3\\n}\\n","explanation":"This snippet demonstrates how to use iterators. In an interview, you might be asked to explain how iterators provide a standard way to traverse data structures. You could also discuss how to create custom iterators and the differences between iterators and generators."},{"id":25,"topic":"Generators","category":"JavaScript Basics","code":"// Generator Example\\nfunction* generator() {\\n yield 1;\\n yield 2;\\n yield 3;\\n}\\nconst gen = generator();\\nconsole.log(gen.next().value); // 1\\nconsole.log(gen.next().value); // 2\\nconsole.log(gen.next().value); // 3\\n// Generator Delegation\\nfunction* anotherGenerator() {\\n yield* generator();\\n yield 4;\\n}\\nconst anotherGen = anotherGenerator();\\nconsole.log(anotherGen.next().value); // 1\\nconsole.log(anotherGen.next().value); // 2\\nconsole.log(anotherGen.next().value); // 3\\nconsole.log(anotherGen.next().value); // 4\\n","explanation":"This snippet shows how to use generator functions. In an interview, you might be asked to explain how generators create iterators and manage control flow with the yield keyword. You could also discuss advanced generator techniques, such as delegation and asynchronous generators."},{"id":26,"topic":"Proxy","category":"JavaScript Basics","code":"// Proxy Example\\nconst target = {};\\nconst handler = {\\n get: function(obj, prop) {\\n  return prop in obj ? obj[prop] : \'default\';\\n }\\n};\\nconst proxy = new Proxy(target, handler);\\nproxy.name = \'Alice\';\\nconsole.log(proxy.name); // Alice\\nconsole.log(proxy.age); // default\\n","explanation":"This snippet demonstrates how to use the Proxy object. In an interview, you might be asked to explain how Proxies define custom behavior for fundamental operations on objects. You could also discuss use cases for Proxies, such as validation, logging, and data binding."},{"id":27,"topic":"Reflect","category":"JavaScript Basics","code":"// Reflect Example\\nconst obj = {a: 1};\\nReflect.set(obj, \'b\', 2);\\nconsole.log(obj.b); // 2\\n","explanation":"This snippet shows how to use the Reflect object. In an interview, you might be asked to explain how Reflect performs operations on objects, similar to Proxies. You could also discuss the differences between Reflect and traditional object manipulation methods."},{"id":28,"topic":"WeakMap","category":"JavaScript Basics","code":"// WeakMap Example\\nconst weakMap = new WeakMap();\\nconst obj = {};\\nweakMap.set(obj, \'value\');\\nconsole.log(weakMap.get(obj)); // value\\n","explanation":"This snippet demonstrates the use of the WeakMap object. In an interview, you might be asked to explain how WeakMaps store key-value pairs with keys that can be garbage collected. You could also discuss the differences between WeakMaps and Maps, and when to use each."},{"id":29,"topic":"WeakSet","category":"JavaScript Basics","code":"// WeakSet Example\\nconst weakSet = new WeakSet();\\nconst obj = {};\\nweakSet.add(obj);\\nconsole.log(weakSet.has(obj)); // true\\n","explanation":"This snippet shows how to use the WeakSet object. In an interview, you might be asked to explain how WeakSets store collections of objects that can be garbage collected. You could also discuss the differences between WeakSets and Sets, and when to use each."},{"id":30,"topic":"Event Delegation","category":"JavaScript Basics","code":"// Event Delegation Example\\ndocument.querySelector(\'#parent\').addEventListener(\'click\', function(event) {\\n if (event.target && event.target.matches(\'button\')) {\\n  console.log(\'Button clicked:\', event.target.textContent);\\n }\\n});\\n","explanation":"This snippet demonstrates event delegation. In an interview, you might be asked to explain how event delegation improves performance by reducing the number of event listeners. You could also discuss use cases and how to implement it."},{"id":31,"topic":"Modules (ES6 Modules, CommonJS)","category":"JavaScript Basics","code":"// ES6 Modules\\n// Exporting\\nexport const add = (a, b) => a + b;\\n// Importing\\nimport { add } from \'./math.js\';\\n\\n// CommonJS\\n// Exporting\\nmodule.exports = function subtract(a, b) {\\n return a - b;\\n};\\n// Importing\\nconst subtract = require(\'./math\');\\n","explanation":"This snippet shows how to use ES6 modules and CommonJS. In an interview, you might be asked to explain the differences between these module systems and their use cases."},{"id":32,"topic":"Set and Map","category":"JavaScript Basics","code":"// Set Example\\nconst set = new Set([1, 2, 3, 3]);\\nset.add(4);\\nset.delete(2);\\nconsole.log(set.has(1)); // true\\nconsole.log(set.size); // 3\\n\\n// Map Example\\nconst map = new Map();\\nmap.set(\'a\', 1);\\nmap.set(\'b\', 2);\\nconsole.log(map.get(\'a\')); // 1\\nconsole.log(map.has(\'b\')); // true\\nmap.delete(\'b\');\\nconsole.log(map.size); // 1\\n","explanation":"This snippet demonstrates the use of Set and Map objects. In an interview, you might be asked to explain how Sets and Maps manage collections of unique items and key-value pairs, respectively."},{"id":33,"topic":"Symbol","category":"JavaScript Basics","code":"// Symbol Example\\nconst sym1 = Symbol(\'description\');\\nconst sym2 = Symbol(\'description\');\\nconsole.log(sym1 === sym2); // false\\n\\n// Symbol as Object Property\\nconst obj = {\\n [sym1]: \'value\'\\n};\\nconsole.log(obj[sym1]); // value\\n","explanation":"This snippet shows how to use the Symbol type. In an interview, you might be asked to explain how Symbols create unique and immutable values, avoiding name collisions."},{"id":34,"topic":"Generators and Iterators","category":"JavaScript Basics","code":"// Generator Example\\nfunction* generator() {\\n yield 1;\\n yield 2;\\n yield 3;\\n}\\nconst gen = generator();\\nconsole.log(gen.next().value); // 1\\nconsole.log(gen.next().value); // 2\\nconsole.log(gen.next().value); // 3\\n\\n// Iterator Example\\nconst iterable = [1, 2, 3];\\nconst iterator = iterable[Symbol.iterator]();\\nconsole.log(iterator.next()); // { value: 1, done: false }\\nconsole.log(iterator.next()); // { value: 2, done: false }\\nconsole.log(iterator.next()); // { value: 3, done: false }\\nconsole.log(iterator.next()); // { value: undefined, done: true }\\n","explanation":"This snippet demonstrates how to use generator functions and iterators. In an interview, you might be asked to explain how generators create iterators and manage control flow with the yield keyword."},{"id":35,"topic":"Prototype and Inheritance","category":"JavaScript Basics","code":"// Prototype Example\\nfunction Person(name) {\\n this.name = name;\\n}\\nPerson.prototype.greet = function() {\\n console.log(`Hello, my name is ${this.name}`);\\n};\\nconst alice = new Person(\'Alice\');\\nalice.greet(); // Hello, my name is Alice\\n\\n// Inheritance Example\\nfunction Employee(name, jobTitle) {\\n Person.call(this, name);\\n this.jobTitle = jobTitle;\\n}\\nEmployee.prototype = Object.create(Person.prototype);\\nEmployee.prototype.constructor = Employee;\\nEmployee.prototype.work = function() {\\n console.log(`${this.name} is working as a ${this.jobTitle}`);\\n};\\nconst bob = new Employee(\'Bob\', \'Developer\');\\nbob.greet(); // Hello, my name is Bob\\nbob.work(); // Bob is working as a Developer\\n","explanation":"This snippet demonstrates prototype-based inheritance. In an interview, you might be asked to explain how prototypes work and how inheritance is implemented in JavaScript."},{"id":36,"topic":"Class Syntax and Inheritance","category":"JavaScript Basics","code":"// Class Declaration\\nclass Person {\\n constructor(name, age) {\\n  this.name = name;\\n  this.age = age;\\n }\\n greet() {\\n  console.log(`Hello, my name is ${this.name}`);\\n }\\n}\\nconst alice = new Person(\'Alice\', 25);\\nalice.greet(); // Hello, my name is Alice\\n\\n// Class Inheritance\\nclass Employee extends Person {\\n constructor(name, age, jobTitle) {\\n  super(name, age);\\n  this.jobTitle = jobTitle;\\n }\\n work() {\\n  console.log(`${this.name} is working as a ${this.jobTitle}`);\\n }\\n}\\nconst bob = new Employee(\'Bob\', 30, \'Developer\');\\nbob.greet(); // Hello, my name is Bob\\nbob.work(); // Bob is working as a Developer\\n","explanation":"This snippet demonstrates how to define and use classes. In an interview, you might be asked to explain the benefits of using classes for a more structured and object-oriented approach."},{"id":37,"topic":"Destructuring Nested Objects and Arrays","category":"JavaScript Basics","code":"// Nested Object Destructuring\\nconst user = {id: 1, profile: {name: \'Alice\', age: 25}};\\nconst {profile: {name: userName, age: userAge}} = user;\\nconsole.log(userName, userAge); // Alice 25\\n\\n// Nested Array Destructuring\\nconst nestedArray = [1, [2, 3]];\\nconst [a, [b, c]] = nestedArray;\\nconsole.log(a, b, c); // 1 2 3\\n","explanation":"This snippet shows how to use destructuring assignment with nested objects and arrays. In an interview, you might be asked to explain how destructuring simplifies working with complex data structures."},{"id":38,"topic":"Private Class Fields","category":"JavaScript Basics","code":"// Private Class Fields\\nclass Person {\\n #name;\\n constructor(name) {\\n  this.#name = name;\\n }\\n greet() {\\n  console.log(`Hello, my name is ${this.#name}`);\\n }\\n}\\nconst alice = new Person(\'Alice\');\\nalice.greet(); // Hello, my name is Alice\\nconsole.log(alice.#name); // SyntaxError: Private field \'#name\' must be declared in an enclosing class\\n","explanation":"This snippet demonstrates how to use private class fields. In an interview, you might be asked to explain how private fields improve encapsulation and data hiding in classes."},{"id":39,"topic":"WeakMap and WeakSet","category":"JavaScript Basics","code":"// WeakMap Example\\nconst weakMap = new WeakMap();\\nconst obj = {};\\nweakMap.set(obj, \'value\');\\nconsole.log(weakMap.get(obj)); // value\\n\\n// WeakSet Example\\nconst weakSet = new WeakSet();\\nconst obj2 = {};\\nweakSet.add(obj2);\\nconsole.log(weakSet.has(obj2)); // true\\n","explanation":"This snippet demonstrates the use of WeakMap and WeakSet objects. In an interview, you might be asked to explain how they store collections of objects that can be garbage collected. You could also discuss the differences between WeakMap/WeakSet and Map/Set, and when to use each."},{"id":40,"topic":"Debouncing and Throttling","category":"JavaScript Basics","code":"// Debouncing Example\\nfunction debounce(func, wait) {\\n let timeout;\\n return function(...args) {\\n  clearTimeout(timeout);\\n  timeout = setTimeout(() => func.apply(this, args), wait);\\n };\\n}\\n\\n// Throttling Example\\nfunction throttle(func, limit) {\\n let inThrottle;\\n return function(...args) {\\n  if (!inThrottle) {\\n   func.apply(this, args);\\n   inThrottle = true;\\n   setTimeout(() => inThrottle = false, limit);\\n  }\\n };\\n}\\n","explanation":"This snippet demonstrates debouncing and throttling techniques. In an interview, you might be asked to explain how these techniques help in controlling the rate of function execution. You could also discuss use cases and implementation details."},{"id":41,"topic":"Function Currying","category":"JavaScript Basics","code":"// Function Currying Example\\nfunction curry(func) {\\n return function curried(...args) {\\n  if (args.length >= func.length) {\\n   return func.apply(this, args);\\n  } else {\\n   return function(...args2) {\\n    return curried.apply(this, args.concat(args2));\\n   };\\n  }\\n };\\n}\\n\\nfunction add(a, b, c) {\\n return a + b + c;\\n}\\nconst curriedAdd = curry(add);\\nconsole.log(curriedAdd(1)(2)(3)); // 6\\n","explanation":"This snippet demonstrates function currying. In an interview, you might be asked to explain how currying transforms a function with multiple arguments into a sequence of functions with a single argument. You could also discuss use cases and benefits."},{"id":42,"topic":"Memoization","category":"JavaScript Basics","code":"// Memoization Example\\nfunction memoize(fn) {\\n const cache = new Map();\\n return function(...args) {\\n  const key = JSON.stringify(args);\\n  if (cache.has(key)) {\\n   return cache.get(key);\\n  }\\n  const result = fn.apply(this, args);\\n  cache.set(key, result);\\n  return result;\\n };\\n}\\n\\nfunction slowFunction(num) {\\n for (let i = 0; i < 1e9; i++) {} // Simulate a slow computation\\n return num * 2;\\n}\\nconst memoizedSlowFunction = memoize(slowFunction);\\nconsole.log(memoizedSlowFunction(5)); // 10\\n","explanation":"This snippet demonstrates memoization. In an interview, you might be asked to explain how memoization optimizes function performance by caching results of expensive function calls. You could also discuss use cases and implementation details."},{"id":43,"topic":"Memory Management and Garbage Collection","category":"JavaScript Basics","code":"// Memory Management Example\\nlet obj = {};\\nfunction createLargeObject() {\\n obj.largeArray = new Array(1e6).fill(\'data\');\\n}\\ncreateLargeObject();\\nobj = null; // Allow garbage collection\\n","explanation":"This snippet demonstrates memory management and garbage collection. In an interview, you might be asked to explain how JavaScript manages memory and the role of garbage collection. You could also discuss best practices for memory management."},{"id":44,"topic":"Type Coercion","category":"JavaScript Basics","code":"// Type Coercion Example\\nconsole.log(\'5\' + 5); // \'55\'\\nconsole.log(\'5\' - 5); // 0\\nconsole.log(true + 1); // 2\\nconsole.log(false + 1); // 1\\n","explanation":"This snippet demonstrates type coercion. In an interview, you might be asked to explain how JavaScript implicitly converts values between different types. You could also discuss the differences between implicit and explicit coercion."},{"id":45,"topic":"Regular Expressions","category":"JavaScript Basics","code":"// Regular Expressions Example\\nconst regex = /\\\\d+/g;\\nconst str = \'There are 123 apples and 456 oranges\';\\nconst matches = str.match(regex);\\nconsole.log(matches); // [\'123\', \'456\']\\n","explanation":"This snippet demonstrates the use of regular expressions. In an interview, you might be asked to explain how regular expressions help in pattern matching and text manipulation. You could also discuss common patterns and use cases."},{"id":46,"topic":"JSON Handling","category":"JavaScript Basics","code":"// JSON Handling Example\\nconst obj = {name: \'Alice\', age: 25};\\nconst jsonString = JSON.stringify(obj);\\nconsole.log(jsonString); // \\"{\\"name\\":\\"Alice\\",\\"age\\":25}\\"\\nconst parsedObj = JSON.parse(jsonString);\\nconsole.log(parsedObj); // {name: \'Alice\', age: 25}\\n","explanation":"This snippet demonstrates JSON handling. In an interview, you might be asked to explain how JSON is used for data interchange and how to parse and stringify JSON data. You could also discuss common pitfalls and best practices."},{"id":47,"topic":"Dynamic Import","category":"JavaScript Basics","code":"// Dynamic Import Example\\nimport(\'./math.js\').then(module => {\\n const add = module.add;\\n console.log(add(2, 3)); // 5\\n});\\n","explanation":"This snippet demonstrates dynamic import. In an interview, you might be asked to explain how dynamic imports enable code splitting and lazy loading. You could also discuss use cases and implementation details."},{"id":48,"topic":"Shadowing and Scope","category":"JavaScript Basics","code":"// Shadowing Example\\nlet x = 10;\\nfunction scopeExample() {\\n let x = 20; // Shadows the outer x\\n console.log(x); // 20\\n}\\nscopeExample();\\nconsole.log(x); // 10\\n","explanation":"This snippet demonstrates variable shadowing and scope. In an interview, you might be asked to explain how variable shadowing occurs and its implications for scope. You could also discuss best practices for avoiding shadowing issues."},{"id":49,"topic":"Tail Call Optimization","category":"JavaScript Basics","code":"// Tail Call Optimization Example\\nfunction factorial(n, acc = 1) {\\n if (n <= 1) return acc;\\n return factorial(n - 1, n * acc); // Tail call\\n}\\nconsole.log(factorial(5)); // 120\\n","explanation":"This snippet demonstrates tail call optimization. In an interview, you might be asked to explain how tail call optimization improves recursion performance. You could also discuss use cases and implementation details."},{"id":50,"topic":"Concurrency Model and Web Workers","category":"JavaScript Basics","code":"// Web Worker Example\\nconst worker = new Worker(\'worker.js\');\\nworker.postMessage(\'Hello, worker\');\\nworker.onmessage = function(event) {\\n console.log(\'Message from worker:\', event.data);\\n};\\n","explanation":"This snippet demonstrates the use of Web Workers. In an interview, you might be asked to explain how Web Workers enable concurrent execution in JavaScript. You could also discuss use cases and implementation details."},{"id":51,"topic":"Service Workers","category":"Web APIs","code":"// Service Worker Example\\nif (\'serviceWorker\' in navigator) {\\n navigator.serviceWorker.register(\'/service-worker.js\')\\n  .then(registration => {\\n   console.log(\'Service Worker registered with scope:\', registration.scope);\\n  })\\n  .catch(error => {\\n   console.error(\'Service Worker registration failed:\', error);\\n  });\\n}\\n","explanation":"This snippet demonstrates the use of Service Workers. In an interview, you might be asked to explain how Service Workers enable offline capabilities and background tasks. You could also discuss use cases and implementation details."},{"id":52,"topic":"Intersection Observer API","category":"Web APIs","code":"// Intersection Observer Example\\nconst observer = new IntersectionObserver((entries, observer) => {\\n entries.forEach(entry => {\\n  if (entry.isIntersecting) {\\n   console.log(\'Element is in view:\', entry.target);\\n   observer.unobserve(entry.target);\\n  }\\n });\\n});\\nconst target = document.querySelector(\'#target\');\\nobserver.observe(target);\\n","explanation":"This snippet demonstrates the use of the Intersection Observer API. In an interview, you might be asked to explain how this API helps in observing the visibility of elements. You could also discuss use cases and implementation details."},{"id":53,"topic":"Error Handling (Custom Errors, try/catch)","category":"JavaScript Basics","code":"// Custom Error Example\\nclass CustomError extends Error {\\n constructor(message) {\\n  super(message);\\n  this.name = \'CustomError\';\\n }\\n}\\ntry {\\n throw new CustomError(\'Something went wrong\');\\n} catch (error) {\\n console.error(error.name + \': \' + error.message); // CustomError: Something went wrong\\n}\\n","explanation":"This snippet demonstrates custom error handling. In an interview, you might be asked to explain how to create and handle custom errors. You could also discuss best practices for error handling and debugging."},{"id":54,"topic":"Reactivity (React-specific)","category":"JavaScript Frameworks","code":"// Reactivity Example\\nimport React, { useState } from \'react\';\\n\\nfunction Counter() {\\n const [count, setCount] = useState(0);\\n return (\\n  <div>\\n   <p>{count}</p>\\n   <button onClick={() => setCount(count + 1)}>Increment</button>\\n  </div>\\n );\\n}\\nexport default Counter;\\n","explanation":"This snippet demonstrates reactivity in React. In an interview, you might be asked to explain how React\'s state management enables reactive updates. You could also discuss use cases and implementation details."},{"id":55,"topic":"Callbacks vs Promises vs Async/Await","category":"Asynchronous JavaScript","code":"// Callback Example\\nfunction fetchData(callback) {\\n setTimeout(() => {\\n  callback(\'Data received\');\\n }, 1000);\\n}\\nfetchData(data => console.log(data)); // Data received\\n\\n// Promise Example\\nconst promise = new Promise((resolve, reject) => {\\n setTimeout(() => {\\n  resolve(\'Data received\');\\n }, 1000);\\n});\\npromise.then(data => console.log(data)); // Data received\\n\\n// Async/Await Example\\nasync function fetchDataAsync() {\\n const data = await new Promise((resolve) => {\\n  setTimeout(() => {\\n   resolve(\'Data received\');\\n  }, 1000);\\n });\\n console.log(data);\\n}\\nfetchDataAsync(); // Data received\\n","explanation":"This snippet demonstrates callbacks, promises, and async/await. In an interview, you might be asked to explain the differences between these approaches for handling asynchronous operations. You could also discuss use cases and best practices."},{"id":56,"topic":"WebSockets","category":"Web APIs","code":"// WebSocket Example\\nconst socket = new WebSocket(\'ws://example.com/socket\');\\nsocket.onopen = function(event) {\\n console.log(\'WebSocket is open now.\');\\n};\\nsocket.onmessage = function(event) {\\n console.log(\'Message from server:\', event.data);\\n};\\nsocket.onclose = function(event) {\\n console.log(\'WebSocket is closed now.\');\\n};\\n","explanation":"This snippet demonstrates the use of WebSockets. In an interview, you might be asked to explain how WebSockets enable real-time communication between the client and server. You could also discuss use cases and implementation details."},{"id":57,"topic":"Event Loop and Microtasks Queue","category":"JavaScript Basics","code":"// Event Loop Example\\nconsole.log(\'Start\');\\nsetTimeout(() => {\\n console.log(\'Timeout\');\\n}, 0);\\nPromise.resolve().then(() => {\\n console.log(\'Promise\');\\n});\\nconsole.log(\'End\');\\n","explanation":"This snippet demonstrates the JavaScript event loop and microtasks queue. In an interview, you might be asked to explain the order of execution for synchronous code, microtasks, and macrotasks. You could also discuss how the event loop handles different types of events and the impact on performance."}]');var u=n(579);const c=(0,e.createContext)(),d=t=>{let{children:n}=t;const[r,a]=(0,e.useState)("leetcode"),[i,d]=(0,e.useState)(""),[h,f]=(0,e.useState)("Default"),[p,m]=(0,e.useState)(null),[g,b]=(0,e.useState)([]),[y,v]=(0,e.useState)([]),[w,x]=(0,e.useState)(!1),[k,S]=(0,e.useState)([]),[C,T]=(0,e.useState)([]),[I,E]=(0,e.useState)([]),[j,P]=(0,e.useState)([]),[O,M]=(0,e.useState)(null),[A,L]=(0,e.useState)([]),[F,R]=(0,e.useState)(!1),[z,N]=(0,e.useState)(!1),[D,_]=(0,e.useState)(!1),[q,B]=(0,e.useState)((()=>"true"===localStorage.getItem("isLeetCodeUnlocked"))),[W,$]=(0,e.useState)(!1),[U,H]=(0,e.useState)(""),[V,G]=(0,e.useState)([]),[J,Y]=(0,e.useState)(!1);(0,e.useEffect)((()=>{try{const e=[...s.map((e=>e.topic)),...l.map((e=>e.topic)),...o.map((e=>e.topic))];v(e)}catch(p){Y(!0),console.error("Error loading data:",p)}}),[]),(0,e.useEffect)((()=>{try{let e=[];"leetcode"===r?e=s.map((e=>e.topic)):"principles"===r?e=l.map((e=>e.topic)):"reviewsheet"===r&&(e=o.map((e=>e.topic))),G(e)}catch(p){Y(!0),console.error("Error loading data:",p)}}),[r]);return(0,u.jsx)(c.Provider,{value:{activeTab:r,searchQuery:i,filter:h,error:p,results:g,topics:y,darkMode:w,reviewsheet:k,leetcode:C,principles:I,filteredData:j,expandedCard:O,filteredTopics:A,isFocused:F,isOpen:z,expandCard:D,isLeetCodeUnlocked:q,setLeetCodeUnlocked:B,setReviewsheet:S,setLeetcode:T,setPrinciples:E,setFilteredData:P,setError:m,setExpandedCard:M,setSearchQuery:d,setFilteredTopics:L,setIsFocused:R,setIsOpen:N,setExpandCard:_,handleTabClick:e=>{try{a(e)}catch(p){m("Error changing tab."),console.error("Error changing tab:",p)}},handleSearch:e=>{try{d(e);const t=[...s,...l,...o].filter((t=>{var n,r;return(null===(n=t.category)||void 0===n?void 0:n.toLowerCase().includes(e.toLowerCase()))||(null===(r=t.topic)||void 0===r?void 0:r.toLowerCase().includes(e.toLowerCase()))||t.id.toString().includes(e)}));b(t)}catch(p){m("Error performing search."),console.error("Error performing search:",p)}},handleFilterChange:e=>{try{["Default","Alphabetical","Category"].includes(e)?(m(null),f(e)):m("Invalid filter selected.")}catch(p){m("Error changing filter."),console.error("Error changing filter:",p)}},toggleDarkMode:()=>{try{x(!w),document.body.classList.toggle("dark-mode",!w)}catch(p){m("Error toggling dark mode."),console.error("Error toggling dark mode:",p)}},resetResults:()=>{try{window.location.reload()}catch(p){m("Error resetting results."),console.error("Error resetting results:",p)}},explorePopularSearches:()=>{try{window.location.href="/popular-searches"}catch(p){m("Error exploring popular searches."),console.error("Error exploring popular searches:",p)}},setFilter:f,unlockModalOpen:W,setUnlockModalOpen:$,unlockError:U,setUnlockError:H,activeTopics:V,dataLoadError:J},children:n})};function h(e){return h="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){p(e,t,n[t])}))}return e}function g(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],r=!0,a=!1,i=void 0;try{for(var o,s=e[Symbol.iterator]();!(r=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(l){a=!0,i=l}finally{try{r||null==s.return||s.return()}finally{if(a)throw i}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var b=function(){},y={},v={},w={mark:b,measure:b};try{"undefined"!==typeof window&&(y=window),"undefined"!==typeof document&&(v=document),"undefined"!==typeof MutationObserver&&MutationObserver,"undefined"!==typeof performance&&(w=performance)}catch(Yn){}var x=(y.navigator||{}).userAgent,k=void 0===x?"":x,S=y,C=v,T=w,I=(S.document,!!C.documentElement&&!!C.head&&"function"===typeof C.addEventListener&&"function"===typeof C.createElement),E=(~k.indexOf("MSIE")||k.indexOf("Trident/"),"___FONT_AWESOME___"),j="svg-inline--fa",P="data-fa-i2svg",O=(function(){try{return!0}catch(Yn){return!1}}(),[1,2,3,4,5,6,7,8,9,10]),M=O.concat([11,12,13,14,15,16,17,18,19,20]),A={GROUP:"group",SWAP_OPACITY:"swap-opacity",PRIMARY:"primary",SECONDARY:"secondary"},L=(["xs","sm","lg","fw","ul","li","border","pull-left","pull-right","spin","pulse","rotate-90","rotate-180","rotate-270","flip-horizontal","flip-vertical","flip-both","stack","stack-1x","stack-2x","inverse","layers","layers-text","layers-counter",A.GROUP,A.SWAP_OPACITY,A.PRIMARY,A.SECONDARY].concat(O.map((function(e){return"".concat(e,"x")}))).concat(M.map((function(e){return"w-".concat(e)}))),S.FontAwesomeConfig||{});if(C&&"function"===typeof C.querySelector){[["data-family-prefix","familyPrefix"],["data-replacement-class","replacementClass"],["data-auto-replace-svg","autoReplaceSvg"],["data-auto-add-css","autoAddCss"],["data-auto-a11y","autoA11y"],["data-search-pseudo-elements","searchPseudoElements"],["data-observe-mutations","observeMutations"],["data-mutate-approach","mutateApproach"],["data-keep-original-source","keepOriginalSource"],["data-measure-performance","measurePerformance"],["data-show-missing-icons","showMissingIcons"]].forEach((function(e){var t=g(e,2),n=t[0],r=t[1],a=function(e){return""===e||"false"!==e&&("true"===e||e)}(function(e){var t=C.querySelector("script["+e+"]");if(t)return t.getAttribute(e)}(n));void 0!==a&&null!==a&&(L[r]=a)}))}var F=m({},{familyPrefix:"fa",replacementClass:j,autoReplaceSvg:!0,autoAddCss:!0,autoA11y:!0,searchPseudoElements:!1,observeMutations:!0,mutateApproach:"async",keepOriginalSource:!0,measurePerformance:!1,showMissingIcons:!0},L);F.autoReplaceSvg||(F.observeMutations=!1);var R=m({},F);S.FontAwesomeConfig=R;var z=S||{};z[E]||(z[E]={}),z[E].styles||(z[E].styles={}),z[E].hooks||(z[E].hooks={}),z[E].shims||(z[E].shims=[]);var N=z[E],D=[];I&&((C.documentElement.doScroll?/^loaded|^c/:/^loaded|^i|^c/).test(C.readyState)||C.addEventListener("DOMContentLoaded",(function e(){C.removeEventListener("DOMContentLoaded",e),D.map((function(e){return e()}))})));var _,q="pending",B="settled",W="fulfilled",$="rejected",U=function(){},H="undefined"!==typeof n.g&&"undefined"!==typeof n.g.process&&"function"===typeof n.g.process.emit,V="undefined"===typeof setImmediate?setTimeout:setImmediate,G=[];function J(){for(var e=0;e<G.length;e++)G[e][0](G[e][1]);G=[],_=!1}function Y(e,t){G.push([e,t]),_||(_=!0,V(J,0))}function Q(e){var t=e.owner,n=t._state,r=t._data,a=e[n],i=e.then;if("function"===typeof a){n=W;try{r=a(r)}catch(Yn){ee(i,Yn)}}K(i,r)||(n===W&&X(i,r),n===$&&ee(i,r))}function K(e,t){var n;try{if(e===t)throw new TypeError("A promises callback cannot return that same promise.");if(t&&("function"===typeof t||"object"===h(t))){var r=t.then;if("function"===typeof r)return r.call(t,(function(r){n||(n=!0,t===r?Z(e,r):X(e,r))}),(function(t){n||(n=!0,ee(e,t))})),!0}}catch(Yn){return n||ee(e,Yn),!0}return!1}function X(e,t){e!==t&&K(e,t)||Z(e,t)}function Z(e,t){e._state===q&&(e._state=B,e._data=t,Y(ne,e))}function ee(e,t){e._state===q&&(e._state=B,e._data=t,Y(re,e))}function te(e){e._then=e._then.forEach(Q)}function ne(e){e._state=W,te(e)}function re(e){e._state=$,te(e),!e._handled&&H&&n.g.process.emit("unhandledRejection",e._data,e)}function ae(e){n.g.process.emit("rejectionHandled",e)}function ie(e){if("function"!==typeof e)throw new TypeError("Promise resolver "+e+" is not a function");if(this instanceof ie===!1)throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");this._then=[],function(e,t){function n(e){ee(t,e)}try{e((function(e){X(t,e)}),n)}catch(Yn){n(Yn)}}(e,this)}ie.prototype={constructor:ie,_state:q,_then:null,_data:void 0,_handled:!1,then:function(e,t){var n={owner:this,then:new this.constructor(U),fulfilled:e,rejected:t};return!t&&!e||this._handled||(this._handled=!0,this._state===$&&H&&Y(ae,this)),this._state===W||this._state===$?Y(Q,n):this._then.push(n),n.then},catch:function(e){return this.then(null,e)}},ie.all=function(e){if(!Array.isArray(e))throw new TypeError("You must pass an array to Promise.all().");return new ie((function(t,n){var r=[],a=0;function i(e){return a++,function(n){r[e]=n,--a||t(r)}}for(var o,s=0;s<e.length;s++)(o=e[s])&&"function"===typeof o.then?o.then(i(s),n):r[s]=o;a||t(r)}))},ie.race=function(e){if(!Array.isArray(e))throw new TypeError("You must pass an array to Promise.race().");return new ie((function(t,n){for(var r,a=0;a<e.length;a++)(r=e[a])&&"function"===typeof r.then?r.then(t,n):t(r)}))},ie.resolve=function(e){return e&&"object"===h(e)&&e.constructor===ie?e:new ie((function(t){t(e)}))},ie.reject=function(e){return new ie((function(t,n){n(e)}))};var oe={size:16,x:0,y:0,rotate:0,flipX:!1,flipY:!1};function se(e){if(e&&I){var t=C.createElement("style");t.setAttribute("type","text/css"),t.innerHTML=e;for(var n=C.head.childNodes,r=null,a=n.length-1;a>-1;a--){var i=n[a],o=(i.tagName||"").toUpperCase();["STYLE","LINK"].indexOf(o)>-1&&(r=i)}return C.head.insertBefore(t,r),e}}function le(){for(var e=12,t="";e-- >0;)t+="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"[62*Math.random()|0];return t}function ue(e){return"".concat(e).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function ce(e){return Object.keys(e||{}).reduce((function(t,n){return t+"".concat(n,": ").concat(e[n],";")}),"")}function de(e){return e.size!==oe.size||e.x!==oe.x||e.y!==oe.y||e.rotate!==oe.rotate||e.flipX||e.flipY}function he(e){var t=e.transform,n=e.containerWidth,r=e.iconWidth,a={transform:"translate(".concat(n/2," 256)")},i="translate(".concat(32*t.x,", ").concat(32*t.y,") "),o="scale(".concat(t.size/16*(t.flipX?-1:1),", ").concat(t.size/16*(t.flipY?-1:1),") "),s="rotate(".concat(t.rotate," 0 0)");return{outer:a,inner:{transform:"".concat(i," ").concat(o," ").concat(s)},path:{transform:"translate(".concat(r/2*-1," -256)")}}}var fe={x:0,y:0,width:"100%",height:"100%"};function pe(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return e.attributes&&(e.attributes.fill||t)&&(e.attributes.fill="black"),e}function me(e){var t=e.icons,n=t.main,r=t.mask,a=e.prefix,i=e.iconName,o=e.transform,s=e.symbol,l=e.title,u=e.maskId,c=e.titleId,d=e.extra,h=e.watchable,f=void 0!==h&&h,p=r.found?r:n,g=p.width,b=p.height,y="fak"===a,v=y?"":"fa-w-".concat(Math.ceil(g/b*16)),w=[R.replacementClass,i?"".concat(R.familyPrefix,"-").concat(i):"",v].filter((function(e){return-1===d.classes.indexOf(e)})).filter((function(e){return""!==e||!!e})).concat(d.classes).join(" "),x={children:[],attributes:m({},d.attributes,{"data-prefix":a,"data-icon":i,class:w,role:d.attributes.role||"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 ".concat(g," ").concat(b)})},k=y&&!~d.classes.indexOf("fa-fw")?{width:"".concat(g/b*16*.0625,"em")}:{};f&&(x.attributes[P]=""),l&&x.children.push({tag:"title",attributes:{id:x.attributes["aria-labelledby"]||"title-".concat(c||le())},children:[l]});var S=m({},x,{prefix:a,iconName:i,main:n,mask:r,maskId:u,transform:o,symbol:s,styles:m({},k,d.styles)}),C=r.found&&n.found?function(e){var t,n=e.children,r=e.attributes,a=e.main,i=e.mask,o=e.maskId,s=e.transform,l=a.width,u=a.icon,c=i.width,d=i.icon,h=he({transform:s,containerWidth:c,iconWidth:l}),f={tag:"rect",attributes:m({},fe,{fill:"white"})},p=u.children?{children:u.children.map(pe)}:{},g={tag:"g",attributes:m({},h.inner),children:[pe(m({tag:u.tag,attributes:m({},u.attributes,h.path)},p))]},b={tag:"g",attributes:m({},h.outer),children:[g]},y="mask-".concat(o||le()),v="clip-".concat(o||le()),w={tag:"mask",attributes:m({},fe,{id:y,maskUnits:"userSpaceOnUse",maskContentUnits:"userSpaceOnUse"}),children:[f,b]},x={tag:"defs",children:[{tag:"clipPath",attributes:{id:v},children:(t=d,"g"===t.tag?t.children:[t])},w]};return n.push(x,{tag:"rect",attributes:m({fill:"currentColor","clip-path":"url(#".concat(v,")"),mask:"url(#".concat(y,")")},fe)}),{children:n,attributes:r}}(S):function(e){var t=e.children,n=e.attributes,r=e.main,a=e.transform,i=ce(e.styles);if(i.length>0&&(n.style=i),de(a)){var o=he({transform:a,containerWidth:r.width,iconWidth:r.width});t.push({tag:"g",attributes:m({},o.outer),children:[{tag:"g",attributes:m({},o.inner),children:[{tag:r.icon.tag,children:r.icon.children,attributes:m({},r.icon.attributes,o.path)}]}]})}else t.push(r.icon);return{children:t,attributes:n}}(S),T=C.children,I=C.attributes;return S.children=T,S.attributes=I,s?function(e){var t=e.prefix,n=e.iconName,r=e.children,a=e.attributes,i=e.symbol;return[{tag:"svg",attributes:{style:"display: none;"},children:[{tag:"symbol",attributes:m({},a,{id:!0===i?"".concat(t,"-").concat(R.familyPrefix,"-").concat(n):i}),children:r}]}]}(S):function(e){var t=e.children,n=e.main,r=e.mask,a=e.attributes,i=e.styles,o=e.transform;if(de(o)&&n.found&&!r.found){var s={x:n.width/n.height/2,y:.5};a.style=ce(m({},i,{"transform-origin":"".concat(s.x+o.x/16,"em ").concat(s.y+o.y/16,"em")}))}return[{tag:"svg",attributes:a,children:t}]}(S)}var ge=function(){},be=(R.measurePerformance&&T&&T.mark&&T.measure,function(e,t,n,r){var a,i,o,s=Object.keys(e),l=s.length,u=void 0!==r?function(e,t){return function(n,r,a,i){return e.call(t,n,r,a,i)}}(t,r):t;for(void 0===n?(a=1,o=e[s[0]]):(a=0,o=n);a<l;a++)o=u(o,e[i=s[a]],i,e);return o});function ye(e,t){var n=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}).skipHooks,r=void 0!==n&&n,a=Object.keys(t).reduce((function(e,n){var r=t[n];return!!r.icon?e[r.iconName]=r.icon:e[n]=r,e}),{});"function"!==typeof N.hooks.addPack||r?N.styles[e]=m({},N.styles[e]||{},a):N.hooks.addPack(e,a),"fas"===e&&ye("fa",t)}var ve=N.styles,we=N.shims,xe=function(){var e=function(e){return be(ve,(function(t,n,r){return t[r]=be(n,e,{}),t}),{})};e((function(e,t,n){return t[3]&&(e[t[3]]=n),e})),e((function(e,t,n){var r=t[2];return e[n]=n,r.forEach((function(t){e[t]=n})),e}));var t="far"in ve;be(we,(function(e,n){var r=n[0],a=n[1],i=n[2];return"far"!==a||t||(a="fas"),e[r]={prefix:a,iconName:i},e}),{})};xe();N.styles;function ke(e,t,n){if(e&&e[t]&&e[t][n])return{prefix:t,iconName:n,icon:e[t][n]}}function Se(e){var t=e.tag,n=e.attributes,r=void 0===n?{}:n,a=e.children,i=void 0===a?[]:a;return"string"===typeof e?ue(e):"<".concat(t," ").concat(function(e){return Object.keys(e||{}).reduce((function(t,n){return t+"".concat(n,'="').concat(ue(e[n]),'" ')}),"").trim()}(r),">").concat(i.map(Se).join(""),"</").concat(t,">")}var Ce=function(e){var t={size:16,x:0,y:0,flipX:!1,flipY:!1,rotate:0};return e?e.toLowerCase().split(" ").reduce((function(e,t){var n=t.toLowerCase().split("-"),r=n[0],a=n.slice(1).join("-");if(r&&"h"===a)return e.flipX=!0,e;if(r&&"v"===a)return e.flipY=!0,e;if(a=parseFloat(a),isNaN(a))return e;switch(r){case"grow":e.size=e.size+a;break;case"shrink":e.size=e.size-a;break;case"left":e.x=e.x-a;break;case"right":e.x=e.x+a;break;case"up":e.y=e.y-a;break;case"down":e.y=e.y+a;break;case"rotate":e.rotate=e.rotate+a}return e}),t):t};function Te(e){this.name="MissingIcon",this.message=e||"Icon unavailable",this.stack=(new Error).stack}Te.prototype=Object.create(Error.prototype),Te.prototype.constructor=Te;var Ie={fill:"currentColor"},Ee={attributeType:"XML",repeatCount:"indefinite",dur:"2s"},je={tag:"path",attributes:m({},Ie,{d:"M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"})},Pe=m({},Ee,{attributeName:"opacity"});m({},Ie,{cx:"256",cy:"364",r:"28"}),m({},Ee,{attributeName:"r",values:"28;14;28;28;14;28;"}),m({},Pe,{values:"1;0;1;1;0;1;"}),m({},Ie,{opacity:"1",d:"M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"}),m({},Pe,{values:"1;0;0;0;0;1;"}),m({},Ie,{opacity:"0",d:"M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"}),m({},Pe,{values:"0;0;1;1;0;0;"}),N.styles;function Oe(e){var t=e[0],n=e[1],r=g(e.slice(4),1)[0];return{found:!0,width:t,height:n,icon:Array.isArray(r)?{tag:"g",attributes:{class:"".concat(R.familyPrefix,"-").concat(A.GROUP)},children:[{tag:"path",attributes:{class:"".concat(R.familyPrefix,"-").concat(A.SECONDARY),fill:"currentColor",d:r[0]}},{tag:"path",attributes:{class:"".concat(R.familyPrefix,"-").concat(A.PRIMARY),fill:"currentColor",d:r[1]}}]}:{tag:"path",attributes:{fill:"currentColor",d:r}}}}N.styles;function Me(){var e="fa",t=j,n=R.familyPrefix,r=R.replacementClass,a='svg:not(:root).svg-inline--fa {\n  overflow: visible;\n}\n\n.svg-inline--fa {\n  display: inline-block;\n  font-size: inherit;\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.225em;\n}\n.svg-inline--fa.fa-w-1 {\n  width: 0.0625em;\n}\n.svg-inline--fa.fa-w-2 {\n  width: 0.125em;\n}\n.svg-inline--fa.fa-w-3 {\n  width: 0.1875em;\n}\n.svg-inline--fa.fa-w-4 {\n  width: 0.25em;\n}\n.svg-inline--fa.fa-w-5 {\n  width: 0.3125em;\n}\n.svg-inline--fa.fa-w-6 {\n  width: 0.375em;\n}\n.svg-inline--fa.fa-w-7 {\n  width: 0.4375em;\n}\n.svg-inline--fa.fa-w-8 {\n  width: 0.5em;\n}\n.svg-inline--fa.fa-w-9 {\n  width: 0.5625em;\n}\n.svg-inline--fa.fa-w-10 {\n  width: 0.625em;\n}\n.svg-inline--fa.fa-w-11 {\n  width: 0.6875em;\n}\n.svg-inline--fa.fa-w-12 {\n  width: 0.75em;\n}\n.svg-inline--fa.fa-w-13 {\n  width: 0.8125em;\n}\n.svg-inline--fa.fa-w-14 {\n  width: 0.875em;\n}\n.svg-inline--fa.fa-w-15 {\n  width: 0.9375em;\n}\n.svg-inline--fa.fa-w-16 {\n  width: 1em;\n}\n.svg-inline--fa.fa-w-17 {\n  width: 1.0625em;\n}\n.svg-inline--fa.fa-w-18 {\n  width: 1.125em;\n}\n.svg-inline--fa.fa-w-19 {\n  width: 1.1875em;\n}\n.svg-inline--fa.fa-w-20 {\n  width: 1.25em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: 0.3em;\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: 0.3em;\n  width: auto;\n}\n.svg-inline--fa.fa-border {\n  height: 1.5em;\n}\n.svg-inline--fa.fa-li {\n  width: 2em;\n}\n.svg-inline--fa.fa-fw {\n  width: 1.25em;\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: #ff253a;\n  border-radius: 1em;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  color: #fff;\n  height: 1.5em;\n  line-height: 1;\n  max-width: 5em;\n  min-width: 1.5em;\n  overflow: hidden;\n  padding: 0.25em;\n  right: 0;\n  text-overflow: ellipsis;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: 0;\n  right: 0;\n  top: auto;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: bottom right;\n          transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: 0;\n  left: 0;\n  right: auto;\n  top: auto;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: bottom left;\n          transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  right: 0;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: 0;\n  right: auto;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top left;\n          transform-origin: top left;\n}\n\n.fa-lg {\n  font-size: 1.3333333333em;\n  line-height: 0.75em;\n  vertical-align: -0.0667em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: 2.5em;\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: -2em;\n  position: absolute;\n  text-align: center;\n  width: 2em;\n  line-height: inherit;\n}\n\n.fa-border {\n  border: solid 0.08em #eee;\n  border-radius: 0.1em;\n  padding: 0.2em 0.25em 0.15em;\n}\n\n.fa-pull-left {\n  float: left;\n}\n\n.fa-pull-right {\n  float: right;\n}\n\n.fa.fa-pull-left,\n.fas.fa-pull-left,\n.far.fa-pull-left,\n.fal.fa-pull-left,\n.fab.fa-pull-left {\n  margin-right: 0.3em;\n}\n.fa.fa-pull-right,\n.fas.fa-pull-right,\n.far.fa-pull-right,\n.fal.fa-pull-right,\n.fab.fa-pull-right {\n  margin-left: 0.3em;\n}\n\n.fa-spin {\n  -webkit-animation: fa-spin 2s infinite linear;\n          animation: fa-spin 2s infinite linear;\n}\n\n.fa-pulse {\n  -webkit-animation: fa-spin 1s infinite steps(8);\n          animation: fa-spin 1s infinite steps(8);\n}\n\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";\n  -webkit-transform: rotate(90deg);\n          transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";\n  -webkit-transform: rotate(180deg);\n          transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";\n  -webkit-transform: rotate(270deg);\n          transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";\n  -webkit-transform: scale(-1, 1);\n          transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";\n  -webkit-transform: scale(1, -1);\n          transform: scale(1, -1);\n}\n\n.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical {\n  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";\n  -webkit-transform: scale(-1, -1);\n          transform: scale(-1, -1);\n}\n\n:root .fa-rotate-90,\n:root .fa-rotate-180,\n:root .fa-rotate-270,\n:root .fa-flip-horizontal,\n:root .fa-flip-vertical,\n:root .fa-flip-both {\n  -webkit-filter: none;\n          filter: none;\n}\n\n.fa-stack {\n  display: inline-block;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: #fff;\n}\n\n.sr-only {\n  border: 0;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n.sr-only-focusable:active, .sr-only-focusable:focus {\n  clip: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  position: static;\n  width: auto;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: 1;\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: 0.4;\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: 0.4;\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: 1;\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}\n\n.fad.fa-inverse {\n  color: #fff;\n}';if(n!==e||r!==t){var i=new RegExp("\\.".concat(e,"\\-"),"g"),o=new RegExp("\\--".concat(e,"\\-"),"g"),s=new RegExp("\\.".concat(t),"g");a=a.replace(i,".".concat(n,"-")).replace(o,"--".concat(n,"-")).replace(s,".".concat(r))}return a}var Ae=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.definitions={}}var t,n,r;return t=e,n=[{key:"add",value:function(){for(var e=this,t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];var a=n.reduce(this._pullDefinitions,{});Object.keys(a).forEach((function(t){e.definitions[t]=m({},e.definitions[t]||{},a[t]),ye(t,a[t]),xe()}))}},{key:"reset",value:function(){this.definitions={}}},{key:"_pullDefinitions",value:function(e,t){var n=t.prefix&&t.iconName&&t.icon?{0:t}:t;return Object.keys(n).map((function(t){var r=n[t],a=r.prefix,i=r.iconName,o=r.icon;e[a]||(e[a]={}),e[a][i]=o})),e}}],n&&f(t.prototype,n),r&&f(t,r),e}();function Le(){R.autoAddCss&&!De&&(se(Me()),De=!0)}function Fe(e,t){return Object.defineProperty(e,"abstract",{get:t}),Object.defineProperty(e,"html",{get:function(){return e.abstract.map((function(e){return Se(e)}))}}),Object.defineProperty(e,"node",{get:function(){if(I){var t=C.createElement("div");return t.innerHTML=e.html,t.children}}}),e}function Re(e){var t=e.prefix,n=void 0===t?"fa":t,r=e.iconName;if(r)return ke(Ne.definitions,n,r)||ke(N.styles,n,r)}var ze,Ne=new Ae,De=!1,_e={transform:function(e){return Ce(e)}},qe=(ze=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.transform,r=void 0===n?oe:n,a=t.symbol,i=void 0!==a&&a,o=t.mask,s=void 0===o?null:o,l=t.maskId,u=void 0===l?null:l,c=t.title,d=void 0===c?null:c,h=t.titleId,f=void 0===h?null:h,p=t.classes,g=void 0===p?[]:p,b=t.attributes,y=void 0===b?{}:b,v=t.styles,w=void 0===v?{}:v;if(e){var x=e.prefix,k=e.iconName,S=e.icon;return Fe(m({type:"icon"},e),(function(){return Le(),R.autoA11y&&(d?y["aria-labelledby"]="".concat(R.replacementClass,"-title-").concat(f||le()):(y["aria-hidden"]="true",y.focusable="false")),me({icons:{main:Oe(S),mask:s?Oe(s.icon):{found:!1,width:null,height:null,icon:{}}},prefix:x,iconName:k,transform:m({},oe,r),symbol:i,title:d,maskId:u,titleId:f,extra:{attributes:y,styles:w,classes:g}})}))}},function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=(e||{}).icon?e:Re(e||{}),r=t.mask;return r&&(r=(r||{}).icon?r:Re(r||{})),ze(n,m({},t,{mask:r}))}),Be=n(173),We=n.n(Be);function $e(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Ue(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?$e(Object(n),!0).forEach((function(t){Ve(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):$e(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function He(e){return He="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},He(e)}function Ve(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Ge(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}function Je(e){return function(e){if(Array.isArray(e))return Ye(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"===typeof e)return Ye(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Ye(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ye(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Qe(e){return t=e,(t-=0)===t?e:(e=e.replace(/[\-_\s]+(.)?/g,(function(e,t){return t?t.toUpperCase():""}))).substr(0,1).toLowerCase()+e.substr(1);var t}var Ke=["style"];var Xe=!1;try{Xe=!0}catch(Yn){}function Ze(e){return e&&"object"===He(e)&&e.prefix&&e.iconName&&e.icon?e:_e.icon?_e.icon(e):null===e?null:e&&"object"===He(e)&&e.prefix&&e.iconName?e:Array.isArray(e)&&2===e.length?{prefix:e[0],iconName:e[1]}:"string"===typeof e?{prefix:"fas",iconName:e}:void 0}function et(e,t){return Array.isArray(t)&&t.length>0||!Array.isArray(t)&&t?Ve({},e,t):{}}var tt=["forwardedRef"];function nt(e){var t=e.forwardedRef,n=Ge(e,tt),r=n.icon,a=n.mask,i=n.symbol,o=n.className,s=n.title,l=n.titleId,u=n.maskId,c=Ze(r),d=et("classes",[].concat(Je(function(e){var t,n=e.beat,r=e.fade,a=e.beatFade,i=e.bounce,o=e.shake,s=e.flash,l=e.spin,u=e.spinPulse,c=e.spinReverse,d=e.pulse,h=e.fixedWidth,f=e.inverse,p=e.border,m=e.listItem,g=e.flip,b=e.size,y=e.rotation,v=e.pull,w=(Ve(t={"fa-beat":n,"fa-fade":r,"fa-beat-fade":a,"fa-bounce":i,"fa-shake":o,"fa-flash":s,"fa-spin":l,"fa-spin-reverse":c,"fa-spin-pulse":u,"fa-pulse":d,"fa-fw":h,"fa-inverse":f,"fa-border":p,"fa-li":m,"fa-flip":!0===g,"fa-flip-horizontal":"horizontal"===g||"both"===g,"fa-flip-vertical":"vertical"===g||"both"===g},"fa-".concat(b),"undefined"!==typeof b&&null!==b),Ve(t,"fa-rotate-".concat(y),"undefined"!==typeof y&&null!==y&&0!==y),Ve(t,"fa-pull-".concat(v),"undefined"!==typeof v&&null!==v),Ve(t,"fa-swap-opacity",e.swapOpacity),t);return Object.keys(w).map((function(e){return w[e]?e:null})).filter((function(e){return e}))}(n)),Je(o.split(" ")))),h=et("transform","string"===typeof n.transform?_e.transform(n.transform):n.transform),f=et("mask",Ze(a)),p=qe(c,Ue(Ue(Ue(Ue({},d),h),f),{},{symbol:i,title:s,titleId:l,maskId:u}));if(!p)return function(){var e;!Xe&&console&&"function"===typeof console.error&&(e=console).error.apply(e,arguments)}("Could not find icon",c),null;var m=p.abstract,g={ref:t};return Object.keys(n).forEach((function(e){nt.defaultProps.hasOwnProperty(e)||(g[e]=n[e])})),rt(m[0],g)}nt.displayName="FontAwesomeIcon",nt.propTypes={beat:We().bool,border:We().bool,beatFade:We().bool,bounce:We().bool,className:We().string,fade:We().bool,flash:We().bool,mask:We().oneOfType([We().object,We().array,We().string]),maskId:We().string,fixedWidth:We().bool,inverse:We().bool,flip:We().oneOf([!0,!1,"horizontal","vertical","both"]),icon:We().oneOfType([We().object,We().array,We().string]),listItem:We().bool,pull:We().oneOf(["right","left"]),pulse:We().bool,rotation:We().oneOf([0,90,180,270]),shake:We().bool,size:We().oneOf(["2xs","xs","sm","lg","xl","2xl","1x","2x","3x","4x","5x","6x","7x","8x","9x","10x"]),spin:We().bool,spinPulse:We().bool,spinReverse:We().bool,symbol:We().oneOfType([We().bool,We().string]),title:We().string,titleId:We().string,transform:We().oneOfType([We().string,We().object]),swapOpacity:We().bool},nt.defaultProps={border:!1,className:"",mask:null,maskId:null,fixedWidth:!1,inverse:!1,flip:!1,icon:null,listItem:!1,pull:null,pulse:!1,rotation:null,size:null,spin:!1,spinPulse:!1,spinReverse:!1,beat:!1,fade:!1,beatFade:!1,bounce:!1,shake:!1,symbol:!1,title:"",titleId:null,transform:null,swapOpacity:!1};var rt=function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"===typeof n)return n;var a=(n.children||[]).map((function(n){return e(t,n)})),i=Object.keys(n.attributes||{}).reduce((function(e,t){var r=n.attributes[t];switch(t){case"class":e.attrs.className=r,delete n.attributes.class;break;case"style":e.attrs.style=r.split(";").map((function(e){return e.trim()})).filter((function(e){return e})).reduce((function(e,t){var n,r=t.indexOf(":"),a=Qe(t.slice(0,r)),i=t.slice(r+1).trim();return a.startsWith("webkit")?e[(n=a,n.charAt(0).toUpperCase()+n.slice(1))]=i:e[a]=i,e}),{});break;default:0===t.indexOf("aria-")||0===t.indexOf("data-")?e.attrs[t.toLowerCase()]=r:e.attrs[Qe(t)]=r}return e}),{attrs:{}}),o=r.style,s=void 0===o?{}:o,l=Ge(r,Ke);return i.attrs.style=Ue(Ue({},i.attrs.style),s),t.apply(void 0,[n.tag,Ue(Ue({},i.attrs),l)].concat(Je(a)))}.bind(null,e.createElement),at={prefix:"fas",iconName:"globe",icon:[496,512,[],"f0ac","M336.5 160C322 70.7 287.8 8 248 8s-74 62.7-88.5 152h177zM152 256c0 22.2 1.2 43.5 3.3 64h185.3c2.1-20.5 3.3-41.8 3.3-64s-1.2-43.5-3.3-64H155.3c-2.1 20.5-3.3 41.8-3.3 64zm324.7-96c-28.6-67.9-86.5-120.4-158-141.6 24.4 33.8 41.2 84.7 50 141.6h108zM177.2 18.4C105.8 39.6 47.8 92.1 19.3 160h108c8.7-56.9 25.5-107.8 49.9-141.6zM487.4 192H372.7c2.1 21 3.3 42.5 3.3 64s-1.2 43-3.3 64h114.6c5.5-20.5 8.6-41.8 8.6-64s-3.1-43.5-8.5-64zM120 256c0-21.5 1.2-43 3.3-64H8.6C3.2 212.5 0 233.8 0 256s3.2 43.5 8.6 64h114.6c-2-21-3.2-42.5-3.2-64zm39.5 96c14.5 89.3 48.7 152 88.5 152s74-62.7 88.5-152h-177zm159.3 141.6c71.4-21.2 129.4-73.7 158-141.6h-108c-8.8 56.9-25.6 107.8-50 141.6zM19.3 352c28.6 67.9 86.5 120.4 158 141.6-24.4-33.8-41.2-84.7-50-141.6h-108z"]},it={prefix:"fas",iconName:"lock",icon:[448,512,[],"f023","M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"]},ot={prefix:"fas",iconName:"search",icon:[512,512,[],"f002","M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"]},st={prefix:"fas",iconName:"unlock",icon:[448,512,[],"f09c","M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z"]};const lt=()=>{const{resetResults:t,explorePopularSearches:n}=(0,e.useContext)(c);return(0,u.jsxs)("div",{className:"no-results",children:[(0,u.jsx)(nt,{icon:ot,className:"icon"}),(0,u.jsx)("h1",{className:"heading",children:"No Results Found"}),(0,u.jsx)("p",{className:"message",children:"We couldn\u2019t find anything that matches your search. Try refining your filters or searching for something else."}),(0,u.jsxs)("div",{className:"actions",children:[(0,u.jsx)("button",{className:"button",onClick:t,children:"Reset results"}),(0,u.jsx)("button",{className:"button",onClick:n,children:"Explore Popular Searches"})]})]})};function ut(){return ut=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ut.apply(this,arguments)}var ct;!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(ct||(ct={}));const dt="popstate";function ht(e,t){if(!1===e||null===e||"undefined"===typeof e)throw new Error(t)}function ft(e,t){if(!e){"undefined"!==typeof console&&console.warn(t);try{throw new Error(t)}catch(Yn){}}}function pt(e,t){return{usr:e.state,key:e.key,idx:t}}function mt(e,t,n,r){return void 0===n&&(n=null),ut({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof t?bt(t):t,{state:n,key:t&&t.key||r||Math.random().toString(36).substr(2,8)})}function gt(e){let{pathname:t="/",search:n="",hash:r=""}=e;return n&&"?"!==n&&(t+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(t+="#"===r.charAt(0)?r:"#"+r),t}function bt(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let r=e.indexOf("?");r>=0&&(t.search=e.substr(r),e=e.substr(0,r)),e&&(t.pathname=e)}return t}function yt(e,t,n,r){void 0===r&&(r={});let{window:a=document.defaultView,v5Compat:i=!1}=r,o=a.history,s=ct.Pop,l=null,u=c();function c(){return(o.state||{idx:null}).idx}function d(){s=ct.Pop;let e=c(),t=null==e?null:e-u;u=e,l&&l({action:s,location:f.location,delta:t})}function h(e){let t="null"!==a.location.origin?a.location.origin:a.location.href,n="string"===typeof e?e:gt(e);return n=n.replace(/ $/,"%20"),ht(t,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,t)}null==u&&(u=0,o.replaceState(ut({},o.state,{idx:u}),""));let f={get action(){return s},get location(){return e(a,o)},listen(e){if(l)throw new Error("A history only accepts one active listener");return a.addEventListener(dt,d),l=e,()=>{a.removeEventListener(dt,d),l=null}},createHref:e=>t(a,e),createURL:h,encodeLocation(e){let t=h(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(e,t){s=ct.Push;let r=mt(f.location,e,t);n&&n(r,e),u=c()+1;let d=pt(r,u),h=f.createHref(r);try{o.pushState(d,"",h)}catch(p){if(p instanceof DOMException&&"DataCloneError"===p.name)throw p;a.location.assign(h)}i&&l&&l({action:s,location:f.location,delta:1})},replace:function(e,t){s=ct.Replace;let r=mt(f.location,e,t);n&&n(r,e),u=c();let a=pt(r,u),d=f.createHref(r);o.replaceState(a,"",d),i&&l&&l({action:s,location:f.location,delta:0})},go:e=>o.go(e)};return f}var vt;!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(vt||(vt={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function wt(e,t,n){return void 0===n&&(n="/"),xt(e,t,n,!1)}function xt(e,t,n,r){let a=Rt(("string"===typeof t?bt(t):t).pathname||"/",n);if(null==a)return null;let i=kt(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){let n=e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]));return n?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(i);let o=null;for(let s=0;null==o&&s<i.length;++s){let e=Ft(a);o=At(i[s],e,r)}return o}function kt(e,t,n,r){void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===r&&(r="");let a=(e,a,i)=>{let o={relativePath:void 0===i?e.path||"":i,caseSensitive:!0===e.caseSensitive,childrenIndex:a,route:e};o.relativePath.startsWith("/")&&(ht(o.relativePath.startsWith(r),'Absolute route path "'+o.relativePath+'" nested under path "'+r+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),o.relativePath=o.relativePath.slice(r.length));let s=qt([r,o.relativePath]),l=n.concat(o);e.children&&e.children.length>0&&(ht(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+s+'".'),kt(e.children,t,l,s)),(null!=e.path||e.index)&&t.push({path:s,score:Mt(s,e.index),routesMeta:l})};return e.forEach(((e,t)=>{var n;if(""!==e.path&&null!=(n=e.path)&&n.includes("?"))for(let r of St(e.path))a(e,t,r);else a(e,t)})),t}function St(e){let t=e.split("/");if(0===t.length)return[];let[n,...r]=t,a=n.endsWith("?"),i=n.replace(/\?$/,"");if(0===r.length)return a?[i,""]:[i];let o=St(r.join("/")),s=[];return s.push(...o.map((e=>""===e?i:[i,e].join("/")))),a&&s.push(...o),s.map((t=>e.startsWith("/")&&""===t?"/":t))}const Ct=/^:[\w-]+$/,Tt=3,It=2,Et=1,jt=10,Pt=-2,Ot=e=>"*"===e;function Mt(e,t){let n=e.split("/"),r=n.length;return n.some(Ot)&&(r+=Pt),t&&(r+=It),n.filter((e=>!Ot(e))).reduce(((e,t)=>e+(Ct.test(t)?Tt:""===t?Et:jt)),r)}function At(e,t,n){void 0===n&&(n=!1);let{routesMeta:r}=e,a={},i="/",o=[];for(let s=0;s<r.length;++s){let e=r[s],l=s===r.length-1,u="/"===i?t:t.slice(i.length)||"/",c=Lt({path:e.relativePath,caseSensitive:e.caseSensitive,end:l},u),d=e.route;if(!c&&l&&n&&!r[r.length-1].route.index&&(c=Lt({path:e.relativePath,caseSensitive:e.caseSensitive,end:!1},u)),!c)return null;Object.assign(a,c.params),o.push({params:a,pathname:qt([i,c.pathname]),pathnameBase:Bt(qt([i,c.pathnameBase])),route:d}),"/"!==c.pathnameBase&&(i=qt([i,c.pathnameBase]))}return o}function Lt(e,t){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,r]=function(e,t,n){void 0===t&&(t=!1);void 0===n&&(n=!0);ft("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let r=[],a="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,((e,t,n)=>(r.push({paramName:t,isOptional:null!=n}),n?"/?([^\\/]+)?":"/([^\\/]+)")));e.endsWith("*")?(r.push({paramName:"*"}),a+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?a+="\\/*$":""!==e&&"/"!==e&&(a+="(?:(?=\\/|$))");let i=new RegExp(a,t?void 0:"i");return[i,r]}(e.path,e.caseSensitive,e.end),a=t.match(n);if(!a)return null;let i=a[0],o=i.replace(/(.)\/+$/,"$1"),s=a.slice(1),l=r.reduce(((e,t,n)=>{let{paramName:r,isOptional:a}=t;if("*"===r){let e=s[n]||"";o=i.slice(0,i.length-e.length).replace(/(.)\/+$/,"$1")}const l=s[n];return e[r]=a&&!l?void 0:(l||"").replace(/%2F/g,"/"),e}),{});return{params:l,pathname:i,pathnameBase:o,pattern:e}}function Ft(e){try{return e.split("/").map((e=>decodeURIComponent(e).replace(/\//g,"%2F"))).join("/")}catch(t){return ft(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}function Rt(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,r=e.charAt(n);return r&&"/"!==r?null:e.slice(n)||"/"}function zt(e,t,n,r){return"Cannot include a '"+e+"' character in a manually specified `to."+t+"` field ["+JSON.stringify(r)+"].  Please separate it out to the `to."+n+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function Nt(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}function Dt(e,t){let n=Nt(e);return t?n.map(((e,t)=>t===n.length-1?e.pathname:e.pathnameBase)):n.map((e=>e.pathnameBase))}function _t(e,t,n,r){let a;void 0===r&&(r=!1),"string"===typeof e?a=bt(e):(a=ut({},e),ht(!a.pathname||!a.pathname.includes("?"),zt("?","pathname","search",a)),ht(!a.pathname||!a.pathname.includes("#"),zt("#","pathname","hash",a)),ht(!a.search||!a.search.includes("#"),zt("#","search","hash",a)));let i,o=""===e||""===a.pathname,s=o?"/":a.pathname;if(null==s)i=n;else{let e=t.length-1;if(!r&&s.startsWith("..")){let t=s.split("/");for(;".."===t[0];)t.shift(),e-=1;a.pathname=t.join("/")}i=e>=0?t[e]:"/"}let l=function(e,t){void 0===t&&(t="/");let{pathname:n,search:r="",hash:a=""}="string"===typeof e?bt(e):e,i=n?n.startsWith("/")?n:function(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(n,t):t;return{pathname:i,search:Wt(r),hash:$t(a)}}(a,i),u=s&&"/"!==s&&s.endsWith("/"),c=(o||"."===s)&&n.endsWith("/");return l.pathname.endsWith("/")||!u&&!c||(l.pathname+="/"),l}const qt=e=>e.join("/").replace(/\/\/+/g,"/"),Bt=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),Wt=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",$t=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";Error;function Ut(e){return null!=e&&"number"===typeof e.status&&"string"===typeof e.statusText&&"boolean"===typeof e.internal&&"data"in e}const Ht=["post","put","patch","delete"],Vt=(new Set(Ht),["get",...Ht]);new Set(Vt),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function Gt(){return Gt=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Gt.apply(this,arguments)}const Jt=e.createContext(null);const Yt=e.createContext(null);const Qt=e.createContext(null);const Kt=e.createContext(null);const Xt=e.createContext({outlet:null,matches:[],isDataRoute:!1});const Zt=e.createContext(null);function en(){return null!=e.useContext(Kt)}function tn(){return en()||ht(!1),e.useContext(Kt).location}function nn(t){e.useContext(Qt).static||e.useLayoutEffect(t)}function rn(){let{isDataRoute:t}=e.useContext(Xt);return t?function(){let{router:t}=pn(hn.UseNavigateStable),n=gn(fn.UseNavigateStable),r=e.useRef(!1);return nn((()=>{r.current=!0})),e.useCallback((function(e,a){void 0===a&&(a={}),r.current&&("number"===typeof e?t.navigate(e):t.navigate(e,Gt({fromRouteId:n},a)))}),[t,n])}():function(){en()||ht(!1);let t=e.useContext(Jt),{basename:n,future:r,navigator:a}=e.useContext(Qt),{matches:i}=e.useContext(Xt),{pathname:o}=tn(),s=JSON.stringify(Dt(i,r.v7_relativeSplatPath)),l=e.useRef(!1);return nn((()=>{l.current=!0})),e.useCallback((function(e,r){if(void 0===r&&(r={}),!l.current)return;if("number"===typeof e)return void a.go(e);let i=_t(e,JSON.parse(s),o,"path"===r.relative);null==t&&"/"!==n&&(i.pathname="/"===i.pathname?n:qt([n,i.pathname])),(r.replace?a.replace:a.push)(i,r.state,r)}),[n,a,s,o,t])}()}function an(t,n){let{relative:r}=void 0===n?{}:n,{future:a}=e.useContext(Qt),{matches:i}=e.useContext(Xt),{pathname:o}=tn(),s=JSON.stringify(Dt(i,a.v7_relativeSplatPath));return e.useMemo((()=>_t(t,JSON.parse(s),o,"path"===r)),[t,s,o,r])}function on(t,n,r,a){en()||ht(!1);let{navigator:i}=e.useContext(Qt),{matches:o}=e.useContext(Xt),s=o[o.length-1],l=s?s.params:{},u=(s&&s.pathname,s?s.pathnameBase:"/");s&&s.route;let c,d=tn();if(n){var h;let e="string"===typeof n?bt(n):n;"/"===u||(null==(h=e.pathname)?void 0:h.startsWith(u))||ht(!1),c=e}else c=d;let f=c.pathname||"/",p=f;if("/"!==u){let e=u.replace(/^\//,"").split("/");p="/"+f.replace(/^\//,"").split("/").slice(e.length).join("/")}let m=wt(t,{pathname:p});let g=dn(m&&m.map((e=>Object.assign({},e,{params:Object.assign({},l,e.params),pathname:qt([u,i.encodeLocation?i.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?u:qt([u,i.encodeLocation?i.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),o,r,a);return n&&g?e.createElement(Kt.Provider,{value:{location:Gt({pathname:"/",search:"",hash:"",state:null,key:"default"},c),navigationType:ct.Pop}},g):g}function sn(){let t=function(){var t;let n=e.useContext(Zt),r=mn(fn.UseRouteError),a=gn(fn.UseRouteError);if(void 0!==n)return n;return null==(t=r.errors)?void 0:t[a]}(),n=Ut(t)?t.status+" "+t.statusText:t instanceof Error?t.message:JSON.stringify(t),r=t instanceof Error?t.stack:null,a="rgba(200,200,200, 0.5)",i={padding:"0.5rem",backgroundColor:a};return e.createElement(e.Fragment,null,e.createElement("h2",null,"Unexpected Application Error!"),e.createElement("h3",{style:{fontStyle:"italic"}},n),r?e.createElement("pre",{style:i},r):null,null)}const ln=e.createElement(sn,null);class un extends e.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:void 0!==e.error?e.error:t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return void 0!==this.state.error?e.createElement(Xt.Provider,{value:this.props.routeContext},e.createElement(Zt.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function cn(t){let{routeContext:n,match:r,children:a}=t,i=e.useContext(Jt);return i&&i.static&&i.staticContext&&(r.route.errorElement||r.route.ErrorBoundary)&&(i.staticContext._deepestRenderedBoundaryId=r.route.id),e.createElement(Xt.Provider,{value:n},a)}function dn(t,n,r,a){var i;if(void 0===n&&(n=[]),void 0===r&&(r=null),void 0===a&&(a=null),null==t){var o;if(!r)return null;if(r.errors)t=r.matches;else{if(!(null!=(o=a)&&o.v7_partialHydration&&0===n.length&&!r.initialized&&r.matches.length>0))return null;t=r.matches}}let s=t,l=null==(i=r)?void 0:i.errors;if(null!=l){let e=s.findIndex((e=>e.route.id&&void 0!==(null==l?void 0:l[e.route.id])));e>=0||ht(!1),s=s.slice(0,Math.min(s.length,e+1))}let u=!1,c=-1;if(r&&a&&a.v7_partialHydration)for(let e=0;e<s.length;e++){let t=s[e];if((t.route.HydrateFallback||t.route.hydrateFallbackElement)&&(c=e),t.route.id){let{loaderData:e,errors:n}=r,a=t.route.loader&&void 0===e[t.route.id]&&(!n||void 0===n[t.route.id]);if(t.route.lazy||a){u=!0,s=c>=0?s.slice(0,c+1):[s[0]];break}}}return s.reduceRight(((t,a,i)=>{let o,d=!1,h=null,f=null;var p;r&&(o=l&&a.route.id?l[a.route.id]:void 0,h=a.route.errorElement||ln,u&&(c<0&&0===i?(p="route-fallback",!1||bn[p]||(bn[p]=!0),d=!0,f=null):c===i&&(d=!0,f=a.route.hydrateFallbackElement||null)));let m=n.concat(s.slice(0,i+1)),g=()=>{let n;return n=o?h:d?f:a.route.Component?e.createElement(a.route.Component,null):a.route.element?a.route.element:t,e.createElement(cn,{match:a,routeContext:{outlet:t,matches:m,isDataRoute:null!=r},children:n})};return r&&(a.route.ErrorBoundary||a.route.errorElement||0===i)?e.createElement(un,{location:r.location,revalidation:r.revalidation,component:h,error:o,children:g(),routeContext:{outlet:null,matches:m,isDataRoute:!0}}):g()}),null)}var hn=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(hn||{}),fn=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(fn||{});function pn(t){let n=e.useContext(Jt);return n||ht(!1),n}function mn(t){let n=e.useContext(Yt);return n||ht(!1),n}function gn(t){let n=function(){let t=e.useContext(Xt);return t||ht(!1),t}(),r=n.matches[n.matches.length-1];return r.route.id||ht(!1),r.route.id}const bn={};const yn={};const vn=(e,t,n)=>{var r;yn[r="\u26a0\ufe0f React Router Future Flag Warning: "+t+". You can use the `"+e+"` future flag to opt-in early. For more information, see "+n+"."]||(yn[r]=!0,console.warn(r))};function wn(e,t){null!=e&&e.v7_startTransition||vn("v7_startTransition","React Router will begin wrapping state updates in `React.startTransition` in v7","https://reactrouter.com/v6/upgrading/future#v7_starttransition"),null!=e&&e.v7_relativeSplatPath||t&&t.v7_relativeSplatPath||vn("v7_relativeSplatPath","Relative route resolution within Splat routes is changing in v7","https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath"),t&&(t.v7_fetcherPersist||vn("v7_fetcherPersist","The persistence behavior of fetchers is changing in v7","https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist"),t.v7_normalizeFormMethod||vn("v7_normalizeFormMethod","Casing of `formMethod` fields is being normalized to uppercase in v7","https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod"),t.v7_partialHydration||vn("v7_partialHydration","`RouterProvider` hydration behavior is changing in v7","https://reactrouter.com/v6/upgrading/future#v7_partialhydration"),t.v7_skipActionErrorRevalidation||vn("v7_skipActionErrorRevalidation","The revalidation behavior after 4xx/5xx `action` responses is changing in v7","https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation"))}t.startTransition;function xn(e){ht(!1)}function kn(t){let{basename:n="/",children:r=null,location:a,navigationType:i=ct.Pop,navigator:o,static:s=!1,future:l}=t;en()&&ht(!1);let u=n.replace(/^\/*/,"/"),c=e.useMemo((()=>({basename:u,navigator:o,static:s,future:Gt({v7_relativeSplatPath:!1},l)})),[u,l,o,s]);"string"===typeof a&&(a=bt(a));let{pathname:d="/",search:h="",hash:f="",state:p=null,key:m="default"}=a,g=e.useMemo((()=>{let e=Rt(d,u);return null==e?null:{location:{pathname:e,search:h,hash:f,state:p,key:m},navigationType:i}}),[u,d,h,f,p,m,i]);return null==g?null:e.createElement(Qt.Provider,{value:c},e.createElement(Kt.Provider,{children:r,value:g}))}function Sn(e){let{children:t,location:n}=e;return on(Cn(t),n)}new Promise((()=>{}));e.Component;function Cn(t,n){void 0===n&&(n=[]);let r=[];return e.Children.forEach(t,((t,a)=>{if(!e.isValidElement(t))return;let i=[...n,a];if(t.type===e.Fragment)return void r.push.apply(r,Cn(t.props.children,i));t.type!==xn&&ht(!1),t.props.index&&t.props.children&&ht(!1);let o={id:t.props.id||i.join("-"),caseSensitive:t.props.caseSensitive,element:t.props.element,Component:t.props.Component,index:t.props.index,path:t.props.path,loader:t.props.loader,action:t.props.action,errorElement:t.props.errorElement,ErrorBoundary:t.props.ErrorBoundary,hasErrorBoundary:null!=t.props.ErrorBoundary||null!=t.props.errorElement,shouldRevalidate:t.props.shouldRevalidate,handle:t.props.handle,lazy:t.props.lazy};t.props.children&&(o.children=Cn(t.props.children,i)),r.push(o)})),r}const Tn=()=>{const{activeTab:t,searchQuery:n,filter:r,reviewsheet:a,leetcode:d,principles:h,filteredData:f,error:p,expandedCard:m,setReviewsheet:g,setLeetcode:b,setPrinciples:y,setFilteredData:v,setError:w,setExpandedCard:x}=(0,e.useContext)(c),k=tn(),S=rn(),C={reviewsheet:[...o],leetcode:[...s],principles:[...l]};(0,e.useEffect)((()=>{try{g([...o]),b([...s]),y([...l]),i().highlightAll()}catch(e){w("Failed to load data.")}}),[]),(0,e.useEffect)((()=>{try{const e={reviewsheet:a,leetcode:d,principles:h}[t];if(!e)throw new Error("Invalid tab selected.");let i;i="Default"===r?[...C[t]]:function(e,t,n){let r=e;switch(t&&(r=function(e,t){return e.filter((e=>e.topic.toLowerCase().includes(t.toLowerCase())||e.explanation.toLowerCase().includes(t.toLowerCase())))}(r,t)),n){case"Alphabetical":r=r.sort(((e,t)=>e.topic.localeCompare(t.topic)));break;case"Category":r=r.sort(((e,t)=>e.category.localeCompare(t.category)))}return r}(e,n,r),n&&(i=i.filter((e=>e.topic.toLowerCase().includes(n.toLowerCase())||e.category.toLowerCase().includes(n.toLowerCase())||e.id.toString().includes(n)))),v(i)}catch(e){w("Failed to filter data.")}}),[n,t,a,d,h,r]),(0,e.useEffect)((()=>{i().highlightAll()}),[f]),(0,e.useEffect)((()=>{var e,t;if(null!==(e=k.state)&&void 0!==e&&e.openCard&&null!==(t=k.state)&&void 0!==t&&t.expandCard&&(!m||m.topic!==k.state.openCard)){const e=k.state.openCard,t=f.find((t=>t.topic===e));t&&(T(t),S(k.pathname,{state:{openCard:e,expandCard:!1}}))}}),[k.state,f,m]),(0,e.useEffect)((()=>{const e=e=>{if("Escape"===e.key&&m){const e=m.cardClone.querySelector(".card-item-explanation");e.classList.contains("active")?(e.classList.remove("active"),e.style.maxHeight="0",e.style.height="0"):(m.cardClone.remove(),m.overlay.remove(),x(null))}};return document.addEventListener("keydown",e),()=>{document.removeEventListener("keydown",e)}}),[m]);const T=e=>{m&&(m.cardClone.remove(),m.overlay.remove());const t=document.createElement("div");t.className="card-item expanded",t.innerHTML=`\n\t\t\t<button class='close-button'>&times;</button><div class='card-item-topic'> <div class='card-item-topic-text'> ${e.topic} </div> <div class='card-item-topic-category'> ${e.category} </div></div><div class='card-item-code'> <pre><code class='language-javascript'> ${e.code} </code></pre></div><div class='card-item-explanation'> <div class='card-item-explanation-title'> Explanation </div> <div class='card-item-explanation-text'> ${e.explanation} </div> <button class='close-explanation-button'>&#9660;</button></div><button class='explanation-button'>?</button>\n\t\t`;const n=document.createElement("div");n.className="card-overlay active",n.addEventListener("click",(()=>{t.remove(),n.remove(),x(null)})),document.body.appendChild(n),document.body.appendChild(t);t.querySelector(".close-button").addEventListener("click",(()=>{t.remove(),n.remove(),x(null)}));const r=t.querySelector(".explanation-button"),a=t.querySelector(".card-item-explanation");a.classList.remove("active"),a.style.maxHeight="0",a.style.height="0",r.addEventListener("click",(()=>{a.classList.toggle("active"),a.style.maxHeight=a.classList.contains("active")?"none":"0",a.style.height=a.classList.contains("active")?"auto":"0"}));t.querySelector(".close-explanation-button").addEventListener("click",(()=>{a.classList.remove("active"),a.style.maxHeight="0",a.style.height="0"})),i().highlightAll(),x({cardClone:t,overlay:n})},I=e=>{e.preventDefault()},E=e=>e.map(((e,t)=>(0,u.jsxs)("div",{className:"card-item",onClick:()=>((e,t)=>{T(t)})(0,e),draggable:!0,onDragStart:e=>((e,t)=>{e.dataTransfer.setData("text/plain",t)})(e,t),onDragOver:I,onDrop:e=>((e,t)=>{e.preventDefault();const n=e.dataTransfer.getData("text/plain");if(n!==t){const e=[...f],[r]=e.splice(n,1);e.splice(t,0,r),v(e)}})(e,t),"data-index":t,children:[(0,u.jsx)("div",{className:"card-item-topic",children:(0,u.jsx)("div",{className:"card-item-topic-text",children:e.topic})}),(0,u.jsx)("div",{className:"card-item-code",children:(0,u.jsx)("pre",{children:(0,u.jsx)("code",{className:"language-javascript",children:e.code})})}),(0,u.jsxs)("div",{className:"card-item-explanation",children:[(0,u.jsx)("div",{className:"card-item-explanation-title",children:"Explanation"}),(0,u.jsx)("div",{className:"card-item-explanation-text",children:e.explanation})]}),(0,u.jsx)("div",{className:"card-item-category",children:e.category})]},t)));return(0,u.jsxs)(u.Fragment,{children:[p&&(0,u.jsx)("div",{className:"error-message",children:p}),0===f.length?(0,u.jsx)(lt,{}):(0,u.jsxs)(u.Fragment,{children:["reviewsheet"===t&&(0,u.jsx)("div",{className:"card card-A",children:(0,u.jsx)("div",{className:"card-grid",children:E(f)})}),"leetcode"===t&&(0,u.jsx)("div",{className:"card card-B",children:(0,u.jsx)("div",{className:"card-grid",children:E(f)})}),"principles"===t&&(0,u.jsx)("div",{className:"card card-C",children:(0,u.jsx)("div",{className:"card-grid",children:E(f)})})]})]})};var In=n(950),En=n.t(In,2);function jn(){return jn=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},jn.apply(this,arguments)}function Pn(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);const On=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","viewTransition"];try{window.__reactRouterVersion="6"}catch(Yn){}new Map;const Mn=t.startTransition;En.flushSync,t.useId;function An(t){let{basename:n,children:r,future:a,window:i}=t,o=e.useRef();var s;null==o.current&&(o.current=(void 0===(s={window:i,v5Compat:!0})&&(s={}),yt((function(e,t){let{pathname:n,search:r,hash:a}=e.location;return mt("",{pathname:n,search:r,hash:a},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"===typeof t?t:gt(t)}),null,s)));let l=o.current,[u,c]=e.useState({action:l.action,location:l.location}),{v7_startTransition:d}=a||{},h=e.useCallback((e=>{d&&Mn?Mn((()=>c(e))):c(e)}),[c,d]);return e.useLayoutEffect((()=>l.listen(h)),[l,h]),e.useEffect((()=>wn(a)),[a]),e.createElement(kn,{basename:n,children:r,location:u.location,navigationType:u.action,navigator:l,future:a})}const Ln="undefined"!==typeof window&&"undefined"!==typeof window.document&&"undefined"!==typeof window.document.createElement,Fn=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,Rn=e.forwardRef((function(t,n){let r,{onClick:a,relative:i,reloadDocument:o,replace:s,state:l,target:u,to:c,preventScrollReset:d,viewTransition:h}=t,f=Pn(t,On),{basename:p}=e.useContext(Qt),m=!1;if("string"===typeof c&&Fn.test(c)&&(r=c,Ln))try{let e=new URL(window.location.href),t=c.startsWith("//")?new URL(e.protocol+c):new URL(c),n=Rt(t.pathname,p);t.origin===e.origin&&null!=n?c=n+t.search+t.hash:m=!0}catch(Yn){}let g=function(t,n){let{relative:r}=void 0===n?{}:n;en()||ht(!1);let{basename:a,navigator:i}=e.useContext(Qt),{hash:o,pathname:s,search:l}=an(t,{relative:r}),u=s;return"/"!==a&&(u="/"===s?a:qt([a,s])),i.createHref({pathname:u,search:l,hash:o})}(c,{relative:i}),b=function(t,n){let{target:r,replace:a,state:i,preventScrollReset:o,relative:s,viewTransition:l}=void 0===n?{}:n,u=rn(),c=tn(),d=an(t,{relative:s});return e.useCallback((e=>{if(function(e,t){return 0===e.button&&(!t||"_self"===t)&&!function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)}(e,r)){e.preventDefault();let n=void 0!==a?a:gt(c)===gt(d);u(t,{replace:n,state:i,preventScrollReset:o,relative:s,viewTransition:l})}}),[c,u,d,a,i,r,t,o,s,l])}(c,{replace:s,state:l,target:u,preventScrollReset:d,relative:i,viewTransition:h});return e.createElement("a",jn({},f,{href:r||g,onClick:m||o?a:function(e){a&&a(e),e.defaultPrevented||b(e)},ref:n,target:u}))}));var zn,Nn;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(zn||(zn={})),function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(Nn||(Nn={}));const Dn=t=>{let{onSearchChange:n}=t;const{searchQuery:r,setSearchQuery:a,error:i,setError:o,activeTopics:s,filteredTopics:l,setFilteredTopics:d,isFocused:h,setIsFocused:f}=(0,e.useContext)(c);(0,e.useEffect)((()=>{const e=setTimeout((()=>{r.length<=100&&(n(r),d(s.filter((e=>e.toLowerCase().includes(r.toLowerCase())))))}),300);return()=>{clearTimeout(e)}}),[r,n,s,d]);return(0,u.jsxs)("div",{className:"search-bar",children:[(0,u.jsx)("input",{type:"text",placeholder:"Search by topic, category, or ID...",value:r,onChange:e=>{const t=e.target.value;t.length>100?o("Search query is too long."):(o(null),a(t))},onFocus:()=>{f(!0)},onBlur:()=>{f(!1)},"aria-label":"Search","aria-invalid":!!i,"aria-describedby":"search-error"}),r&&(0,u.jsx)("button",{className:"clear-button",onClick:()=>{a(""),n(""),d([])},"aria-label":"Clear search",children:"\xd7"}),i&&(0,u.jsx)("div",{id:"search-error",className:"error-message",children:i}),h&&l.length>0&&(0,u.jsx)("ul",{className:"autocomplete-dropdown",children:l.map(((e,t)=>(0,u.jsx)("li",{onMouseDown:()=>(e=>{a(e),n(e),f(!1)})(e),children:e},t)))})]})},_n=t=>{let{onFilterChange:n}=t;const{filter:r,setFilter:a,error:i,setError:o,isOpen:s,setIsOpen:l}=(0,e.useContext)(c),d=(0,e.useRef)(null),h=()=>{l(!s)},f=e=>{["Default","Alphabetical","Category"].includes(e)?(o(null),a(e),n(e),l(!1)):o("Invalid filter selected.")},p=e=>{d.current&&!d.current.contains(e.target)&&l(!1)},m=e=>{"Escape"===e.key&&l(!1)};return(0,e.useEffect)((()=>(document.addEventListener("mousedown",p),document.addEventListener("keydown",m),()=>{document.removeEventListener("mousedown",p),document.removeEventListener("keydown",m)})),[]),(0,u.jsxs)("div",{className:"filter-dropdown",ref:d,children:[(0,u.jsx)("div",{className:"filter-selected",onClick:h,role:"button",tabIndex:0,onKeyPress:h,"aria-haspopup":"listbox",children:r}),s&&(0,u.jsxs)("div",{className:"filter-options",role:"listbox",children:[(0,u.jsx)("div",{onClick:()=>f("Default"),role:"option",tabIndex:0,onKeyPress:()=>f("Default"),children:"Default"}),(0,u.jsx)("div",{onClick:()=>f("Alphabetical"),role:"option",tabIndex:0,onKeyPress:()=>f("Alphabetical"),children:"Alphabetical"}),(0,u.jsx)("div",{onClick:()=>f("Category"),role:"option",tabIndex:0,onKeyPress:()=>f("Category"),children:"Category"})]}),i&&(0,u.jsx)("div",{className:"error-message",children:i})]})},qn=t=>{let{onClose:n,onUnlock:r,error:a}=t;const[i,o]=(0,e.useState)(""),s=()=>{r(i)};return(0,e.useEffect)((()=>{const e=e=>{"Escape"===e.key?n():"Enter"===e.key&&s()};return document.addEventListener("keydown",e),()=>{document.removeEventListener("keydown",e)}}),[n]),(0,u.jsx)("div",{className:"unlock-modal",children:(0,u.jsxs)("div",{className:"unlock-modal-content",children:[(0,u.jsx)("span",{className:"unlock-close",onClick:n,children:"\xd7"}),(0,u.jsx)("h2",{children:"Unlock Feature"}),(0,u.jsxs)("div",{className:"unlock-input-container",children:[(0,u.jsx)("input",{type:"text",placeholder:"Enter code",value:i,onChange:e=>o(e.target.value)}),(0,u.jsx)("button",{onClick:s,children:"Unlock"})]}),a&&(0,u.jsx)("p",{className:"unlock-error-message",children:a})]})})},Bn=()=>{const{handleTabClick:t,handleSearch:n,handleFilterChange:r,activeTab:a,filter:i,error:o,isLeetCodeUnlocked:s,setLeetCodeUnlocked:l}=(0,e.useContext)(c),[d,h]=(0,e.useState)(!1),[f,p]=(0,e.useState)(""),m=e=>{t(e)},g=()=>{h(!d)};return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsxs)("header",{className:"header",children:[(0,u.jsxs)("div",{className:"left-section",children:[(0,u.jsx)("div",{className:"name",children:(0,u.jsx)(Rn,{to:"/",children:(0,u.jsx)("img",{src:"https://i.imgur.com/1DQ7j3Y.png",alt:"Study Guide",className:"logo-img"})})}),(0,u.jsxs)("div",{className:"tabs",children:[s&&(0,u.jsx)("div",{className:"tab "+("leetcode"===a?"active":""),onClick:()=>m("leetcode"),role:"button",tabIndex:0,onKeyPress:()=>m("leetcode"),"aria-label":"LeetCode Tab",children:"LeetCode"}),(0,u.jsx)("div",{className:"tab "+("principles"===a?"active":""),onClick:()=>m("principles"),role:"button",tabIndex:0,onKeyPress:()=>m("principles"),"aria-label":"Principles Tab",children:"Principles"}),(0,u.jsx)("div",{className:"tab "+("reviewsheet"===a?"active":""),onClick:()=>m("reviewsheet"),role:"button",tabIndex:0,onKeyPress:()=>m("reviewsheet"),"aria-label":"Reviewsheet Tab",children:"Reviewsheet"})]})]}),(0,u.jsxs)("div",{className:"right-section",children:[(0,u.jsx)(_n,{filter:i,onFilterChange:e=>{r(e)}}),(0,u.jsx)(Dn,{onSearchChange:e=>{n(e,a)}}),(0,u.jsx)(nt,{icon:s?st:it,className:"lock-icon",onClick:g,role:"button",tabIndex:0,onKeyPress:g,"aria-label":"Unlock Feature"})]}),o&&(0,u.jsx)("div",{className:"error-message",children:o})]}),d&&(0,u.jsx)(qn,{onClose:g,onUnlock:e=>{if(["Abcde12345!","Sherlock!","Testcode!"].includes(e)){const e=!s;l(e),e?(localStorage.setItem("isLeetCodeUnlocked","true"),t("leetcode")):(localStorage.removeItem("isLeetCodeUnlocked"),t("principles")),h(!1),p("")}else p("Incorrect code. Please try again.")},error:f})]})},Wn=()=>{const{activeTab:t,topics:n,handleSearch:r,handleTabClick:a,searchQuery:i,setSearchQuery:o,filteredTopics:s,setFilteredTopics:l,expandCard:d,setExpandCard:h}=(0,e.useContext)(c),f=rn();(0,e.useEffect)((()=>{l(n.filter((e=>e.toLowerCase().includes(i.toLowerCase()))))}),[i,n]);return(0,u.jsxs)("div",{className:"popular-searches",children:[(0,u.jsx)("h2",{children:"Popular Searches"}),(0,u.jsx)("div",{className:"search-input-container",children:(0,u.jsx)("input",{type:"text",placeholder:"Search popular topics...",value:i,onChange:e=>{o(e.target.value)},className:"search-input"})}),(0,u.jsx)("button",{onClick:()=>{f("/")},className:"go-back-button",children:"Go Back"}),(0,u.jsx)("ul",{className:"popular-searches__list",children:s.map(((e,n)=>(0,u.jsx)("li",{onClick:()=>(e=>{r(e),a(t),h(!0),f("/",{state:{openCard:e,expandCard:!0}})})(e),className:"popular-searches__list-item",children:e},n)))})]})};var $n={prefix:"fab",iconName:"github",icon:[496,512,[],"f09b","M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"]},Un={prefix:"fab",iconName:"linkedin",icon:[448,512,[],"f08c","M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"]};const Hn=()=>{const{darkMode:t,toggleDarkMode:n}=(0,e.useContext)(c),r=(new Date).getFullYear();return(0,u.jsxs)("footer",{className:"footer",children:[(0,u.jsxs)("div",{className:"copyright",children:["\xa9 David Sheinbein ",r]}),(0,u.jsxs)("div",{className:"links",children:[(0,u.jsx)("a",{href:"https://github.com/davesheinbein/",target:"_blank",rel:"noopener noreferrer","aria-label":"GitHub",children:(0,u.jsx)(nt,{icon:$n})}),(0,u.jsx)("a",{href:"https://linkedin.com/in/david-sheinbein",target:"_blank",rel:"noopener noreferrer","aria-label":"LinkedIn",children:(0,u.jsx)(nt,{icon:Un})}),(0,u.jsx)("a",{href:"https://davidsheinbeinengineer.com/",target:"_blank",rel:"noopener noreferrer","aria-label":"Personal Website",children:(0,u.jsx)(nt,{icon:at})}),(0,u.jsxs)("label",{className:"switch",children:[(0,u.jsx)("input",{type:"checkbox",checked:t,onChange:n,"aria-label":"Toggle Dark Mode"}),(0,u.jsx)("span",{className:"slider round"})]})]})]})},Vn=t=>{let{children:n}=t;const[r,a]=(0,e.useState)(!1);return r?(0,u.jsx)("div",{className:"error-message",children:"Something went wrong."}):n},Gn=()=>{const{error:t,dataLoadError:n}=(0,e.useContext)(c);return(0,u.jsx)(Vn,{children:(0,u.jsxs)("div",{className:"app",children:[(0,u.jsx)(Bn,{}),t&&(0,u.jsx)("div",{className:"error-message",children:t}),n?(0,u.jsx)(lt,{}):(0,u.jsxs)(Sn,{children:[(0,u.jsx)(xn,{path:"/popular-searches",element:(0,u.jsx)(Wn,{})}),(0,u.jsx)(xn,{path:"/",element:(0,u.jsx)(Tn,{})})]}),(0,u.jsx)(Hn,{})]})})},Jn=()=>(0,u.jsx)(d,{children:(0,u.jsx)(An,{children:(0,u.jsx)(Gn,{})})});r.createRoot(document.getElementById("root")).render((0,u.jsx)(e.StrictMode,{children:(0,u.jsx)(Jn,{})}))})()})();
//# sourceMappingURL=main.9345e4a7.js.map